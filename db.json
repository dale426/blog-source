{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/robots.txt","path":"robots.txt","modified":1,"renderable":0},{"_id":"themes/yelee/source/favicon.ico","path":"favicon.ico","modified":1,"renderable":1},{"_id":"themes/yelee/source/apple-touch-icon.png","path":"apple-touch-icon.png","modified":1,"renderable":1},{"_id":"source/public_s/images/autumn_20171110151408.jpg","path":"public_s/images/autumn_20171110151408.jpg","modified":1,"renderable":0},{"_id":"themes/yelee/source/background/bg-1.jpg","path":"background/bg-1.jpg","modified":1,"renderable":1},{"_id":"themes/yelee/source/background/bg-2.jpg","path":"background/bg-2.jpg","modified":1,"renderable":1},{"_id":"themes/yelee/source/background/bg-3.jpg","path":"background/bg-3.jpg","modified":1,"renderable":1},{"_id":"themes/yelee/source/background/bg-4.jpg","path":"background/bg-4.jpg","modified":1,"renderable":1},{"_id":"themes/yelee/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/yelee/source/img/AcFun.png","path":"img/AcFun.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/img/CSDN.png","path":"img/CSDN.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/img/Coding.png","path":"img/Coding.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/img/LOFTER.png","path":"img/LOFTER.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/img/Plunker.png","path":"img/Plunker.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/img/SegmentFault.png","path":"img/SegmentFault.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/img/Quora.png","path":"img/Quora.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/img/TiddlyWiki.png","path":"img/TiddlyWiki.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/img/avatar.png","path":"img/avatar.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/img/V2EX.png","path":"img/V2EX.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/img/avatar2.png","path":"img/avatar2.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/img/bilibili.png","path":"img/bilibili.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/img/niconico.png","path":"img/niconico.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/img/博客园.png","path":"img/博客园.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/img/知乎.png","path":"img/知乎.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/img/新浪微博.png","path":"img/新浪微博.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/img/简书.png","path":"img/简书.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/img/网易云音乐.png","path":"img/网易云音乐.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/img/虾米音乐.png","path":"img/虾米音乐.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/img/豆瓣.png","path":"img/豆瓣.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/js/GithubRepoWidget.js","path":"js/GithubRepoWidget.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/js/instagram.js","path":"js/instagram.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/js/mobile.js","path":"js/mobile.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/js/pc.js","path":"js/pc.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/js/toc.js","path":"js/toc.js","modified":1,"renderable":1},{"_id":"source/public_s/images/mmexport1499932133535.jpeg","path":"public_s/images/mmexport1499932133535.jpeg","modified":1,"renderable":0},{"_id":"themes/yelee/source/background/bg-5.jpg","path":"background/bg-5.jpg","modified":1,"renderable":1},{"_id":"themes/yelee/source/background/bg-6.jpg","path":"background/bg-6.jpg","modified":1,"renderable":1},{"_id":"source/public_s/images/timeManage/0.1174553194175334.png","path":"public_s/images/timeManage/0.1174553194175334.png","modified":1,"renderable":0},{"_id":"source/public_s/images/timeManage/0.419097318675272.png","path":"public_s/images/timeManage/0.419097318675272.png","modified":1,"renderable":0},{"_id":"source/public_s/images/timeManage/0.46321933528434545.png","path":"public_s/images/timeManage/0.46321933528434545.png","modified":1,"renderable":0},{"_id":"source/public_s/images/timeManage/0.5021243947689109.png","path":"public_s/images/timeManage/0.5021243947689109.png","modified":1,"renderable":0},{"_id":"source/public_s/images/timeManage/0.530341774969219.png","path":"public_s/images/timeManage/0.530341774969219.png","modified":1,"renderable":0},{"_id":"source/public_s/images/timeManage/0.7242512129749097.png","path":"public_s/images/timeManage/0.7242512129749097.png","modified":1,"renderable":0},{"_id":"source/public_s/images/timeManage/0.9251521097293676.png","path":"public_s/images/timeManage/0.9251521097293676.png","modified":1,"renderable":0},{"_id":"themes/yelee/source/background/backup/bg-1.jpg","path":"background/backup/bg-1.jpg","modified":1,"renderable":1},{"_id":"themes/yelee/source/background/backup/bg-2.jpg","path":"background/backup/bg-2.jpg","modified":1,"renderable":1},{"_id":"themes/yelee/source/background/backup/bg-3.jpg","path":"background/backup/bg-3.jpg","modified":1,"renderable":1},{"_id":"themes/yelee/source/background/backup/bg-4.jpg","path":"background/backup/bg-4.jpg","modified":1,"renderable":1},{"_id":"themes/yelee/source/img/old/avatar-1.png","path":"img/old/avatar-1.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/img/old/avatar.png","path":"img/old/avatar.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/img/old/avatar2.png","path":"img/old/avatar2.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/css/like.css","path":"static/api/css/like.css","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/css/imgshare.css","path":"static/api/css/imgshare.css","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/css/select_share.css","path":"static/api/css/select_share.css","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/css/share_popup.css","path":"static/api/css/share_popup.css","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/css/share_style0_16.css","path":"static/api/css/share_style0_16.css","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/css/share_style0_24.css","path":"static/api/css/share_style0_24.css","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/css/share_style1_16.css","path":"static/api/css/share_style1_16.css","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/css/share_style0_32.css","path":"static/api/css/share_style0_32.css","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/css/share_style1_24.css","path":"static/api/css/share_style1_24.css","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/css/share_style1_32.css","path":"static/api/css/share_style1_32.css","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/css/share_style2_16.css","path":"static/api/css/share_style2_16.css","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/css/share_style2.css","path":"static/api/css/share_style2.css","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/css/share_style2_24.css","path":"static/api/css/share_style2_24.css","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/css/share_style2_32.css","path":"static/api/css/share_style2_32.css","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/css/slide_share.css","path":"static/api/css/slide_share.css","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/css/share_style4.css","path":"static/api/css/share_style4.css","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/css/weixin_popup.css","path":"static/api/css/weixin_popup.css","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/share.js","path":"static/api/js/share.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/trans/data.js","path":"static/api/js/trans/data.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/trans/logger.js","path":"static/api/js/trans/logger.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/icons_0_24.png","path":"static/api/img/share/icons_0_24.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/icons_0_16.png","path":"static/api/img/share/icons_0_16.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/icons_1_16.png","path":"static/api/img/share/icons_1_16.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/icons_0_32.png","path":"static/api/img/share/icons_0_32.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/icons_1_32.png","path":"static/api/img/share/icons_1_32.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/icons_1_24.png","path":"static/api/img/share/icons_1_24.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/icons_2_16.png","path":"static/api/img/share/icons_2_16.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/icons_2_24.png","path":"static/api/img/share/icons_2_24.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/icons_2_32.png","path":"static/api/img/share/icons_2_32.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/l0.gif","path":"static/api/img/share/l0.gif","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/l1.gif","path":"static/api/img/share/l1.gif","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/l2.gif","path":"static/api/img/share/l2.gif","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/l4.gif","path":"static/api/img/share/l4.gif","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/l3.gif","path":"static/api/img/share/l3.gif","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/l5.gif","path":"static/api/img/share/l5.gif","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/l6.gif","path":"static/api/img/share/l6.gif","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/l7.gif","path":"static/api/img/share/l7.gif","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/l8.gif","path":"static/api/img/share/l8.gif","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/pop_c.gif","path":"static/api/img/share/pop_c.gif","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/r0.gif","path":"static/api/img/share/r0.gif","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/r1.gif","path":"static/api/img/share/r1.gif","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/r2.gif","path":"static/api/img/share/r2.gif","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/r3.gif","path":"static/api/img/share/r3.gif","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/r4.gif","path":"static/api/img/share/r4.gif","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/r5.gif","path":"static/api/img/share/r5.gif","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/r6.gif","path":"static/api/img/share/r6.gif","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/r7.gif","path":"static/api/img/share/r7.gif","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/r8.gif","path":"static/api/img/share/r8.gif","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/sc.png","path":"static/api/img/share/sc.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/selectshare_close.png","path":"static/api/img/share/selectshare_close.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/img/share/share-search-icon.png","path":"static/api/img/share/share-search-icon.png","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/base/class.js","path":"static/api/js/base/class.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/component/animate.js","path":"static/api/js/component/animate.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/component/anticheat.js","path":"static/api/js/component/anticheat.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/component/comm_tools.js","path":"static/api/js/component/comm_tools.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/component/partners.js","path":"static/api/js/component/partners.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/component/pop_base.js","path":"static/api/js/component/pop_base.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/component/pop_dialog.js","path":"static/api/js/component/pop_dialog.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/component/pop_popup.js","path":"static/api/js/component/pop_popup.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/component/pop_popup_slide.js","path":"static/api/js/component/pop_popup_slide.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/conf/const.js","path":"static/api/js/conf/const.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/component/qrcode.js","path":"static/api/js/component/qrcode.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/share/api_base.js","path":"static/api/js/share/api_base.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/conf/define.js","path":"static/api/js/conf/define.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/share/combine_api.js","path":"static/api/js/share/combine_api.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/share/likeshare.js","path":"static/api/js/share/likeshare.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/share/image_api.js","path":"static/api/js/share/image_api.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/share/like_api.js","path":"static/api/js/share/like_api.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/share/select_api.js","path":"static/api/js/share/select_api.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/share/share_api.js","path":"static/api/js/share/share_api.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/share/slide_api.js","path":"static/api/js/share/slide_api.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/start/router.js","path":"static/api/js/start/router.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/view/image_view.js","path":"static/api/js/view/image_view.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/view/like_view.js","path":"static/api/js/view/like_view.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/view/select_view.js","path":"static/api/js/view/select_view.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/view/share_view.js","path":"static/api/js/view/share_view.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/view/slide_view.js","path":"static/api/js/view/slide_view.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/view/view_base.js","path":"static/api/js/view/view_base.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/trans/trans.js","path":"static/api/js/trans/trans.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/trans/trans_bdxc.js","path":"static/api/js/trans/trans_bdxc.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/trans/trans_bdysc.js","path":"static/api/js/trans/trans_bdysc.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/trans/trans_weixin.js","path":"static/api/js/trans/trans_weixin.js","modified":1,"renderable":1},{"_id":"themes/yelee/source/static/api/js/base/tangram.js","path":"static/api/js/base/tangram.js","modified":1,"renderable":1},{"_id":"source/public_s/mp3/a-love.mp3","path":"public_s/mp3/a-love.mp3","modified":1,"renderable":0}],"Cache":[{"_id":"source/robots.txt","hash":"85d977cb906879af47f146e03ba9cdc8d697fcb9","modified":1522394683772},{"_id":"themes/yelee/_config.yml","hash":"106a8bd1224e7d5aa4089eafce61980b21b1cd35","modified":1523875493285},{"_id":"themes/yelee/README.md","hash":"12bc9cdb68f51df81bcc36a5263e0a6c5860f646","modified":1522394683773},{"_id":"themes/yelee/package.json","hash":"0199dfb3d44cf520b67464817d13c44a7766b8d6","modified":1522394683786},{"_id":"source/404/index.md","hash":"46b366c46ea83d98727dec6569443525178e3e99","modified":1522394683713},{"_id":"source/about/index.md","hash":"85b360fa19f6fbd1b2d8be1921e19dfba2214d6e","modified":1522394683717},{"_id":"source/tags/index.md","hash":"13f8af8dad0900757d8d20e865348939e7538538","modified":1522394683772},{"_id":"themes/yelee/languages/default.yml","hash":"b4e576a96e4f2b4f9b39a86d2042fa44c2d21a28","modified":1523442629319},{"_id":"themes/yelee/languages/en.yml","hash":"ff991c2c80d9ab69c984acb1c40480c8b98be2bc","modified":1522394683775},{"_id":"themes/yelee/languages/zh-Hans.yml","hash":"4fa4068a65089810e7dd95692f9157eb80c2e8de","modified":1522394683776},{"_id":"themes/yelee/languages/zh-Hant-HK.yml","hash":"bbc73dcd9170fe9efaab6fbbe1571886e0b8aa89","modified":1522394683776},{"_id":"themes/yelee/languages/zh-Hant-TW.yml","hash":"88b4678bba940bc270c7aea2debbf869ecf6cc18","modified":1522394683776},{"_id":"themes/yelee/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1522394683784},{"_id":"themes/yelee/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1522394683784},{"_id":"themes/yelee/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1522394683785},{"_id":"themes/yelee/layout/layout.ejs","hash":"3a4350f23a1286345f76c949466c97a7200dae8e","modified":1522394683785},{"_id":"themes/yelee/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1522394683785},{"_id":"themes/yelee/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1522394683785},{"_id":"themes/yelee/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1522394683786},{"_id":"themes/yelee/source/favicon.ico","hash":"bc6985bf377d2fdc64ada5af4c919288599594b4","modified":1522394683802},{"_id":"themes/yelee/source/apple-touch-icon.png","hash":"c0fda117fa166d63b9eb690cc5e4fb2caaf493b3","modified":1522394683786},{"_id":"source/public_s/images/autumn_20171110151408.jpg","hash":"d06db971de65cd859292a23748dade80dc068332","modified":1522394683717},{"_id":"source/_posts/others/first-on-hexo.md","hash":"19bfc4d1e6c7e7f792efb0de1d7602ed56e0577c","modified":1523442408947},{"_id":"source/_posts/others/hexo-command.md","hash":"7b7fd92542bf0cd8f463673c8b37a73de9ddcdb3","modified":1522394683715},{"_id":"source/_posts/others/move-review-liechang.md","hash":"16bf0c0a2ab9be097ae5882c8abcec2060fcf1e8","modified":1522394683716},{"_id":"source/_posts/others/hexo.md","hash":"a4d12b7789bea3a8bd482e5ff8dcef11592e3cc3","modified":1523529231639},{"_id":"source/_posts/others/live-tulei-01.md","hash":"04ea070a79eade5f11737835b9d22bd2223b7b52","modified":1522394683716},{"_id":"source/_posts/others/seo.md","hash":"de035a5c6a69d138340a5fd350ae1cd364c12289","modified":1527761019965},{"_id":"source/_posts/study/study2014-05.md","hash":"fa74e018ee2fd2a6abb34cab3a888b39b7e0a52d","modified":1526466431715},{"_id":"source/_posts/others/time-manage.md","hash":"469702b88bad44cd811cd568b688f66b71e7c730","modified":1522394683717},{"_id":"source/_posts/study/study2018-04.md","hash":"2bb22ad8fb29741abfca97d20966c22a5c77a675","modified":1524030264908},{"_id":"source/_posts/study/study2018-03.md","hash":"31765a9c0c726d4d573cb0c91cafd08898431376","modified":1523182718458},{"_id":"themes/yelee/layout/_partial/after-footer.ejs","hash":"748391b89b661fa1ed7da0b15ed6870981ec4dc3","modified":1522394683777},{"_id":"themes/yelee/layout/_partial/archive-post.ejs","hash":"0ecc2ad07b4abad80f564ac1858c50bcbdff34f8","modified":1522394683777},{"_id":"themes/yelee/layout/_partial/archive.ejs","hash":"a4eacc2bc1278095a0ef99f904b0634c78f980eb","modified":1522394683777},{"_id":"themes/yelee/layout/_partial/article.ejs","hash":"afd85b362d732fa9b439af7dc44b657d0d1aae3d","modified":1523185992701},{"_id":"themes/yelee/layout/_partial/background.ejs","hash":"aeef39abef66ee0bd6c9efe856eaeb1b81416d41","modified":1522394683778},{"_id":"themes/yelee/layout/_partial/footer.ejs","hash":"82653e3bbdc605b51e1b0a36e30f3ac1180c838e","modified":1522394683780},{"_id":"themes/yelee/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1522394683780},{"_id":"themes/yelee/layout/_partial/head.ejs","hash":"3833ebd6d6fa3bf0cb43917efbd891b089dd0004","modified":1522394683780},{"_id":"themes/yelee/layout/_partial/header.ejs","hash":"b69855e07b65117769adc515cb64b803932068c9","modified":1522394683780},{"_id":"themes/yelee/layout/_partial/ie-updater.ejs","hash":"8d1e1f3953efbcf5ec84a451439a62a1c95b55d7","modified":1522394683781},{"_id":"themes/yelee/layout/_partial/left-col.ejs","hash":"90fd7c763faf8d64d58612f592cbacbefdaea161","modified":1523875278870},{"_id":"themes/yelee/layout/_partial/mathjax.ejs","hash":"ce868f8b2b5b377cadc270e3a5bb5826f8bf0dee","modified":1522394683781},{"_id":"themes/yelee/layout/_partial/mobile-nav.ejs","hash":"306be982577b0ef968f855d0dfeaab6b180b8a50","modified":1522394683781},{"_id":"themes/yelee/layout/_partial/open-in-new-tab.ejs","hash":"a59d4c768009dd621e741a29cf6446ebc2668fe9","modified":1522394683782},{"_id":"themes/yelee/layout/_partial/page.ejs","hash":"cfce60062cdb60893baeda7fa0266ae4086c2bc8","modified":1522394683782},{"_id":"themes/yelee/layout/_partial/post-nav-button.ejs","hash":"0a98bffdd14f6677721841c0ac4487a86c77266c","modified":1522394683782},{"_id":"themes/yelee/layout/_partial/scrolling-button.ejs","hash":"c5e1c3a8e1e6b0d927ac25a7fb8720ee7ac83ad8","modified":1522394683783},{"_id":"themes/yelee/layout/_partial/tab-title-change.ejs","hash":"7c4a7177e0c77de2d7607ca29fc395abebd34db7","modified":1522394683784},{"_id":"themes/yelee/layout/_partial/tag-cloud-page.ejs","hash":"c7b25ef136e129c948ac37d6ff19e8815ab9fee6","modified":1522394683784},{"_id":"themes/yelee/layout/_partial/toc.ejs","hash":"7ee88b1a98eea5cbd44c0f9a11b86b46aa2d6752","modified":1522394683784},{"_id":"themes/yelee/source/background/bg-1.jpg","hash":"9a5241de4c880f13a278f6980bf11d4dfb214d82","modified":1522394683789},{"_id":"themes/yelee/source/background/bg-2.jpg","hash":"d1e0b92e8fa822e44d185b5e1bf94ab47bc98a0a","modified":1522394683789},{"_id":"themes/yelee/source/background/bg-3.jpg","hash":"d476909f06fe8267c676952e3582bf9e9ff73585","modified":1522394683789},{"_id":"themes/yelee/source/background/bg-4.jpg","hash":"8e80d0b7786c3bf7b9648c0190719e78001e9eeb","modified":1522394683790},{"_id":"themes/yelee/source/css/_extend.styl","hash":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1522394683792},{"_id":"themes/yelee/source/css/_variables.styl","hash":"f429eb9bc9f0a270ec68c4f4c63903250746a01c","modified":1523875269925},{"_id":"themes/yelee/source/css/style.styl","hash":"b285f9a75abd09c7d06fe89e70f9e1819eac27dd","modified":1522394683801},{"_id":"themes/yelee/source/img/AcFun.png","hash":"df6b0fa39ced4dc988359fc7b7cd1e5403de08a6","modified":1522394683802},{"_id":"themes/yelee/source/img/CSDN.png","hash":"59f7d89eda8a7310a0ee1607e153c0829af7eb6e","modified":1522394683802},{"_id":"themes/yelee/source/img/Coding.png","hash":"afb4bce19bebf61e3c486fd5199369d6eb191b78","modified":1522394683802},{"_id":"themes/yelee/source/img/LOFTER.png","hash":"88670eaea8612839e9d6a40a3636e4231ab56c0f","modified":1522394683803},{"_id":"themes/yelee/source/img/Plunker.png","hash":"14a0054b9b4a0e459987f34b9ab48ab22dbe5cf9","modified":1522394683803},{"_id":"themes/yelee/source/img/SegmentFault.png","hash":"1afbc7e575e2e9ed9404be84a3f92f7ca8345a9c","modified":1522394683804},{"_id":"themes/yelee/source/img/Quora.png","hash":"1a624ade0d07f2482b21bef1e2a5ddd0110ba352","modified":1522394683803},{"_id":"themes/yelee/source/img/TiddlyWiki.png","hash":"b7f68f8f9c45561a9455aee0bfb80e35cae6f8df","modified":1522394683804},{"_id":"themes/yelee/source/img/avatar.png","hash":"e6bf950e2bedb0f24f8187a470b6ac9599e93c67","modified":1526350645305},{"_id":"themes/yelee/source/img/V2EX.png","hash":"d0768de8555f9be0ee8ce956198cef454d4e4d7c","modified":1522394683804},{"_id":"themes/yelee/source/img/avatar2.png","hash":"54d74ed6b3dc8bc2ac202726c4e731d35fb5826b","modified":1526350638249},{"_id":"themes/yelee/source/img/bilibili.png","hash":"be37b7e9a091c8547b8ee8b9d29583af8ded61c0","modified":1522394683805},{"_id":"themes/yelee/source/img/niconico.png","hash":"fabc7ca45e9ee5698db33a25de8b1f8a7c7d6723","modified":1522394683805},{"_id":"themes/yelee/source/img/博客园.png","hash":"5ff6f4c9f1fc1695217a57436d58b246d9d2f197","modified":1522394683807},{"_id":"themes/yelee/source/img/scrollbar_arrow.png","hash":"af987032f2171867bb58b165d2180eb5dcbea637","modified":1522394683807},{"_id":"themes/yelee/source/img/知乎.png","hash":"ed6d3c304789e112d09f40784fa6add1f1a38bd6","modified":1522394683807},{"_id":"themes/yelee/source/img/新浪微博.png","hash":"7a145ed1daee0c172cda77098f4254fc21f9eeee","modified":1522394683807},{"_id":"themes/yelee/source/img/简书.png","hash":"5c91ee83cab4abe160240e09de345b6935c8cb37","modified":1522394683808},{"_id":"themes/yelee/source/img/网易云音乐.png","hash":"4fd1275fd988584811cf710207eb077f2306f271","modified":1522394683808},{"_id":"themes/yelee/source/img/虾米音乐.png","hash":"a0039b049779b1f37c0b0b91760943b7bf25c8f1","modified":1522394683808},{"_id":"themes/yelee/source/img/豆瓣.png","hash":"f1fc97f98612bcdf4a681542e5388483b40a5300","modified":1522394683808},{"_id":"themes/yelee/source/js/GithubRepoWidget.js","hash":"5fb1bf6cf973062771ddf275ceeca5bc69c81c77","modified":1522394683809},{"_id":"themes/yelee/source/js/instagram.js","hash":"81e13cacf4947118ed1920e59b04ccf6beef6b86","modified":1522394683809},{"_id":"themes/yelee/source/js/main.js","hash":"369774a7ff45a2e5117a796330a04aeb50a61fdf","modified":1523875246757},{"_id":"themes/yelee/source/js/mobile.js","hash":"8abc32d18f16db56f51caad607cffb6ca756eca9","modified":1522394683809},{"_id":"themes/yelee/source/js/pc.js","hash":"bc289c5dc610e2a34d308daeb9adea96d01f7788","modified":1522394683810},{"_id":"themes/yelee/source/js/search.js","hash":"001e324844e63f3bfb6f60d173b9c6954127be0b","modified":1522394683810},{"_id":"themes/yelee/source/js/toc.js","hash":"973c1a4e2c9de8f4f662b99623027658fe6d94c2","modified":1522394683810},{"_id":"source/public_s/images/mmexport1499932133535.jpeg","hash":"60f62ddc1f0c7ee3fcb29248a15235e9a72878ac","modified":1522394683718},{"_id":"themes/yelee/source/background/bg-5.jpg","hash":"e4a3631b6b0f94ebce30a6f01ecb2b6ed7cfdb0b","modified":1522394683791},{"_id":"themes/yelee/source/background/bg-6.jpg","hash":"51b427f07ffc6f2ad97651f23cc16e8f19ed02f9","modified":1522394683792},{"_id":"source/public_s/images/timeManage/0.1174553194175334.png","hash":"7a226e23dd8e1deb40862d45375ba8a26ca964c5","modified":1522394683719},{"_id":"source/public_s/images/timeManage/0.419097318675272.png","hash":"b1b35cc5d94278b2ebf80c2a870210fd1bf90e49","modified":1522394683719},{"_id":"source/public_s/images/timeManage/0.46321933528434545.png","hash":"ba70b029ef647009e29dde7003666d02391f7969","modified":1522394683720},{"_id":"source/public_s/images/timeManage/0.5021243947689109.png","hash":"8de789ab52892f44d609ae544272e8acfa02ec2a","modified":1522394683721},{"_id":"source/public_s/images/timeManage/0.530341774969219.png","hash":"79a0ae47a04e4fd13db78d632efd4dc228362c16","modified":1522394683721},{"_id":"source/public_s/images/timeManage/0.7242512129749097.png","hash":"bc6bf8f1f8f33ba7dd64aa9e580675b09121ee0c","modified":1522394683721},{"_id":"source/public_s/images/timeManage/0.9251521097293676.png","hash":"9ebd2722a28a68940be700d8081fa94c1527eb87","modified":1522394683722},{"_id":"source/_posts/frame/vue/vue-study-03.md","hash":"49547d570cd6362a5125b5f1a7cd9d67d989e293","modified":1522394683714},{"_id":"source/_posts/frame/vue/vue-study-computed.md","hash":"c1ce17a6f4955849afe3a2bd7d6b2afcd99bfe27","modified":1522394683714},{"_id":"source/_posts/frame/vue/vue-study-iview.md","hash":"32ff4b208a3fd9d3510af115b0834c461900a632","modified":1522394683714},{"_id":"source/_posts/js/array/array-method-01.md","hash":"941373ecf68e622b7c9fb220bee584b3f9f95523","modified":1522394683714},{"_id":"source/_posts/js/common/parseUrlParams.md","hash":"3292b81dda77faa2f70c7ca6294f90da4501622d","modified":1522394683715},{"_id":"source/_posts/js/array/js-call.md","hash":"51020f0b4d49f9d5b53cc506b41ee6c2cbd794d6","modified":1522394683715},{"_id":"source/_posts/js/node/nodestudy-01.md","hash":"c4e8488b4f5a71a4f0c84db250b92a5a2edf61a6","modified":1523531394514},{"_id":"source/_posts/js/react/react-constructor-super.md","hash":"0b07d4f3eb5b4bcfe228ee29bf0adea985e13e6d","modified":1523442438941},{"_id":"themes/yelee/layout/_partial/comments/click2show.ejs","hash":"ecc4d3ca997c6fd127e00fa2edf0158b925d1d3e","modified":1522394683778},{"_id":"themes/yelee/layout/_partial/comments/disqus.ejs","hash":"df7ee469b648b12b5ee3104ef513d54cbb7418af","modified":1522394683779},{"_id":"themes/yelee/layout/_partial/comments/count-comment.ejs","hash":"ada2032e401b73b312c50b75bdbb8ee71d5a291e","modified":1522394683779},{"_id":"themes/yelee/layout/_partial/comments/youyan.ejs","hash":"d150085faee4809ba50f69c55d904605699040cb","modified":1522394683780},{"_id":"themes/yelee/layout/_partial/comments/duoshuo.ejs","hash":"e7f12f1246a67a5b556c2d5b37dc78733f1cf15a","modified":1522394683779},{"_id":"themes/yelee/layout/_partial/post/category.ejs","hash":"08c8d98bc6a73d3f72a3b0b30521ff28e1b657a7","modified":1522394683782},{"_id":"themes/yelee/layout/_partial/post/date.ejs","hash":"329ed372296a86bce73ff8936af5601723fdd70a","modified":1522394683783},{"_id":"themes/yelee/layout/_partial/post/nav.ejs","hash":"6f531dbc9cc7ae42d2486d6707f826cfe7d9d8bc","modified":1522394683783},{"_id":"themes/yelee/layout/_partial/post/share.ejs","hash":"c39893c25f4f8d7df66eff94668704e8f5817d4d","modified":1522394683783},{"_id":"themes/yelee/layout/_partial/post/tag.ejs","hash":"7d2693a1162bf26e4b1ae9b789e0b2a2637ddbd5","modified":1522394683783},{"_id":"themes/yelee/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1522394683783},{"_id":"themes/yelee/source/background/backup/bg-1.jpg","hash":"31d7bb15211000c05656899302f8ec9ee3de0e9f","modified":1522394683787},{"_id":"themes/yelee/source/background/backup/bg-2.jpg","hash":"7ae358f3ab8b41558444053400e796c41b3ba0e2","modified":1522394683787},{"_id":"themes/yelee/source/background/backup/bg-3.jpg","hash":"1a06d3a660bfb99b62d760e4e1e09de168a4c74c","modified":1522394683788},{"_id":"themes/yelee/source/background/backup/bg-4.jpg","hash":"6df1383d0f6134016d844df9abb740a6e0c0b2c5","modified":1522394683788},{"_id":"themes/yelee/source/css/_partial/article.styl","hash":"190828c822096bb3098a7d14c3340eb004057aa0","modified":1522394683793},{"_id":"themes/yelee/source/css/_partial/archive.styl","hash":"102c23dbb6cde3cbfca3b151c742e0d77911186e","modified":1522394683793},{"_id":"themes/yelee/source/css/_partial/footer.styl","hash":"a419108f1b820c59fcc56d218bfaaa4ffc4f1d4d","modified":1522394683796},{"_id":"themes/yelee/source/css/_partial/header.styl","hash":"67e59feb18eee6026717cb440d86ab9551782628","modified":1522394683796},{"_id":"themes/yelee/source/css/_partial/highlight.styl","hash":"4e34bf9340ce9b15d2d59fc4ea761d1d110927cf","modified":1522394683796},{"_id":"themes/yelee/source/css/_partial/instagram.styl","hash":"a093443add2f529396d6b6bdef1675bc3acf3958","modified":1522394683797},{"_id":"themes/yelee/source/css/_partial/main.styl","hash":"78c4c1d7c3df2d009d4f8b80450c263a0a9d22de","modified":1523875892522},{"_id":"themes/yelee/source/css/_partial/mobile-slider.styl","hash":"39db458d4e9f6973afc1390b4d3fc0291fff4c40","modified":1522394683797},{"_id":"themes/yelee/source/css/_partial/mobile.styl","hash":"dfb20f2515a26d75e42fe09741e91cc889426b11","modified":1522394683798},{"_id":"themes/yelee/source/css/_partial/page.styl","hash":"ca3f871adf8fdb296e4394070605dded53d93cb2","modified":1522394683798},{"_id":"themes/yelee/source/css/_partial/scroll.styl","hash":"f32deb9192568a2ea789d77a23a08d07f4e57d59","modified":1522394683798},{"_id":"themes/yelee/source/css/_partial/search.styl","hash":"688ff535a6005be02d947be75d22cfe1f8ce72cd","modified":1522394683799},{"_id":"themes/yelee/source/css/_partial/share.styl","hash":"88c1277397b71eb1f3473a94d9542314f983cd09","modified":1522394683799},{"_id":"themes/yelee/source/css/_partial/toc.styl","hash":"8f2a057dc072285093e37f1f645e9cb53608642f","modified":1522394683800},{"_id":"themes/yelee/source/css/_partial/tagcloud.styl","hash":"b38b275728bfe11809defe1077b03cb423c3c92f","modified":1522394683799},{"_id":"themes/yelee/source/css/_partial/wheelmenu.styl","hash":"9e57421eab562ea13d0ed2b2e1415eee79fa23d0","modified":1522394683800},{"_id":"themes/yelee/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1522394683800},{"_id":"themes/yelee/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1522394683800},{"_id":"themes/yelee/source/img/old/avatar-1.png","hash":"e6bf950e2bedb0f24f8187a470b6ac9599e93c67","modified":1522394683806},{"_id":"themes/yelee/source/img/old/avatar.png","hash":"e4bca3d60087cd6e775d8e2aa2bf0d35e3859592","modified":1522394683806},{"_id":"themes/yelee/source/img/old/avatar2.png","hash":"ef8a4924b45e172c06c6db7d9ddce367635a5a37","modified":1522394683807},{"_id":"themes/yelee/source/css/_partial/customise/blockquote.styl","hash":"5e6edb9ad49288743ed550a2bd8c9a3c8e208455","modified":1522394683793},{"_id":"themes/yelee/source/css/_partial/customise/code-block.styl","hash":"4db1a992a06fd92b779f0afc9bb8bb3667bdb101","modified":1522394683794},{"_id":"themes/yelee/source/css/_partial/customise/color-scheme.styl","hash":"b58262a9f8903e75df431291745e19ccd8ff243a","modified":1522394683794},{"_id":"themes/yelee/source/css/_partial/customise/heading.styl","hash":"6e9389782d3f9e419ebeb5afcaba61b95ad22b6d","modified":1522394683795},{"_id":"themes/yelee/source/css/_partial/customise/inline-code.styl","hash":"a15292b2b3541ea022c0fb7441875192dee5ad9d","modified":1522394683795},{"_id":"themes/yelee/source/css/_partial/customise/list.styl","hash":"7db683e2837a078ad7817fb88914535588e49cfa","modified":1522394683795},{"_id":"themes/yelee/source/css/_partial/customise/social-icon.styl","hash":"bfa5c863d474266f32a570e34a0effda964f7f40","modified":1522394683795},{"_id":"themes/yelee/source/static/api/css/like.css","hash":"2024d58206df01b858c38f07957f928b44e14cb3","modified":1522394683811},{"_id":"themes/yelee/source/static/api/css/imgshare.css","hash":"7465b359751d368f4a45f7823dc4a1918bba7f5f","modified":1522394683811},{"_id":"themes/yelee/source/static/api/css/select_share.css","hash":"d0259abdb410193cf761e42bffaa51e70327a0cd","modified":1522394683811},{"_id":"themes/yelee/source/static/api/css/share_popup.css","hash":"338ba2b30ef8ce0c84cd36b37d7f8482996291dc","modified":1522394683812},{"_id":"themes/yelee/source/static/api/css/share_style0_16.css","hash":"090e77e9e6e9b8ee0d73a233cbe46499de935bdd","modified":1522394683813},{"_id":"themes/yelee/source/static/api/css/share_style0_24.css","hash":"7d1f9f32b80f91001f4f951aa045180cde22d82e","modified":1522394683813},{"_id":"themes/yelee/source/static/api/css/share_style1_16.css","hash":"aeb4e9fa96cfa0167481e1f4007079dc3f3c6c27","modified":1522394683813},{"_id":"themes/yelee/source/static/api/css/share_style0_32.css","hash":"7c2d12ea532c8a55c102b649bb23ef5bf53b3ed3","modified":1522394683813},{"_id":"themes/yelee/source/static/api/css/share_style1_24.css","hash":"3ee5f745c863b4f68299fe5dc125f913ca619c07","modified":1522394683813},{"_id":"themes/yelee/source/static/api/css/share_style1_32.css","hash":"626d67a4c0bb72a152e90d25dbf281c0c35a2140","modified":1522394683814},{"_id":"themes/yelee/source/static/api/css/share_style2_16.css","hash":"572c8e856988e463eb865f38d33ba003cc20d083","modified":1522394683814},{"_id":"themes/yelee/source/static/api/css/share_style2.css","hash":"1ad451187cde8a74843fd398b924ca0ac911e9be","modified":1522394683814},{"_id":"themes/yelee/source/static/api/css/share_style2_24.css","hash":"917d963d3be111064cbb1d122963da91ee3724a0","modified":1522394683814},{"_id":"themes/yelee/source/static/api/css/share_style2_32.css","hash":"3657bbc4b5bbc66ebca4906ee0a1cbf9f98be883","modified":1522394683814},{"_id":"themes/yelee/source/static/api/css/slide_share.css","hash":"3898feaf45559b039f885bee8f9e831f48adb20c","modified":1522394683815},{"_id":"themes/yelee/source/static/api/css/share_style4.css","hash":"0a9e2ed712a5ef5c4699c038cd001a0d688a0fdf","modified":1522394683814},{"_id":"themes/yelee/source/static/api/css/weixin_popup.css","hash":"5e6c5084bfd16051de5776c2e136a5462b08a32c","modified":1522394683815},{"_id":"themes/yelee/source/static/api/js/share.js","hash":"73bdb33580128e6c79a726a25f98092c0faa369d","modified":1522394683829},{"_id":"themes/yelee/source/static/api/js/trans/data.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522394683831},{"_id":"themes/yelee/source/static/api/js/trans/logger.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522394683831},{"_id":"themes/yelee/source/static/api/img/share/icons_0_24.png","hash":"a89223f9714c8c4fa169430a327963ca6a1c9a6e","modified":1522394683816},{"_id":"themes/yelee/source/static/api/img/share/icons_0_16.png","hash":"0eec1e81a04664b2032bd389513349e9bd5d5b0f","modified":1522394683815},{"_id":"themes/yelee/source/static/api/img/share/icons_1_16.png","hash":"3793c3265429ab7b830bfaf18322259cd0b4c4ef","modified":1522394683818},{"_id":"themes/yelee/source/static/api/img/share/icons_0_32.png","hash":"c20521634fdacef39631031671528713e6ba6081","modified":1522394683816},{"_id":"themes/yelee/source/static/api/img/share/icons_1_32.png","hash":"09825de5f238c97e4374d545961d6e0d5bbfb3e2","modified":1522394683819},{"_id":"themes/yelee/source/static/api/img/share/icons_1_24.png","hash":"9f1d472095dbe138ef7aff069b1d18cae6ffa942","modified":1522394683818},{"_id":"themes/yelee/source/static/api/img/share/icons_2_16.png","hash":"07340442cb61aabb419dd226f4bfb206a7577f52","modified":1522394683819},{"_id":"themes/yelee/source/static/api/img/share/icons_2_24.png","hash":"e47fb87c533f2be89f22901f0864d9b5ef83412d","modified":1522394683819},{"_id":"themes/yelee/source/static/api/img/share/icons_2_32.png","hash":"deba62865245a6b5aafa446787d72165c703b943","modified":1522394683820},{"_id":"themes/yelee/source/static/api/img/share/l0.gif","hash":"738b92632b0a9789a9eb568b8d101eb64f55f6e0","modified":1522394683820},{"_id":"themes/yelee/source/static/api/img/share/l1.gif","hash":"70e1932ca7a622ed3322b683eceb7a590860a55e","modified":1522394683820},{"_id":"themes/yelee/source/static/api/img/share/l2.gif","hash":"e6a5d6104c226a686d48759e0268e09d762e242e","modified":1522394683821},{"_id":"themes/yelee/source/static/api/img/share/l4.gif","hash":"8a9c3cf99766d3f07a9c480cfdffdc3197b9a6b9","modified":1522394683821},{"_id":"themes/yelee/source/static/api/img/share/l3.gif","hash":"26c0dd37d98df63abb9d3d83e01bb47c34ee3f0f","modified":1522394683821},{"_id":"themes/yelee/source/static/api/img/share/l5.gif","hash":"148706f56b8ef4fd9d8483d0ac3a6730e72fc0ad","modified":1522394683821},{"_id":"themes/yelee/source/static/api/img/share/l6.gif","hash":"f4b8e3188f744f13aca46b27b451d55d9e209c48","modified":1522394683821},{"_id":"themes/yelee/source/static/api/img/share/l7.gif","hash":"e4f7e5e56c8f4eb026b5cb0affe3bd69c31af261","modified":1522394683822},{"_id":"themes/yelee/source/static/api/img/share/l8.gif","hash":"ec7dbc7703961356e05528d2844b983f225445e4","modified":1522394683822},{"_id":"themes/yelee/source/static/api/img/share/pop_c.gif","hash":"e8b9ece6ddaa47ccb2c15f2396d1cd3020740603","modified":1522394683822},{"_id":"themes/yelee/source/static/api/img/share/r0.gif","hash":"882f255fbafc0136a3917c1dd40db88879c1b1c1","modified":1522394683822},{"_id":"themes/yelee/source/static/api/img/share/r1.gif","hash":"96064d132ee2477c0e444c2e18162f9d1dc9e9c2","modified":1522394683822},{"_id":"themes/yelee/source/static/api/img/share/r2.gif","hash":"67c84a67be3b039892e9cb8c7c29ed29813bf60f","modified":1522394683823},{"_id":"themes/yelee/source/static/api/img/share/r3.gif","hash":"ecdd21f1457be54afc96e2d005524eef93d7bf85","modified":1522394683823},{"_id":"themes/yelee/source/static/api/img/share/r4.gif","hash":"517435e69a2215a0f003e75a4861154ca963c30e","modified":1522394683823},{"_id":"themes/yelee/source/static/api/img/share/r5.gif","hash":"e61b32d1830390303927bdab21823959f8dc7023","modified":1522394683823},{"_id":"themes/yelee/source/static/api/img/share/r6.gif","hash":"4bc01e08ef0015fddf5b8c7257c094ec584ca3ee","modified":1522394683823},{"_id":"themes/yelee/source/static/api/img/share/r7.gif","hash":"3c596c924910c93cf3e37cc1b2870dbf271151e2","modified":1522394683824},{"_id":"themes/yelee/source/static/api/img/share/r8.gif","hash":"c068ece54a72a3f2428d4f1b5ca7c176f027dd4e","modified":1522394683824},{"_id":"themes/yelee/source/static/api/img/share/sc.png","hash":"e5a2ca56973a3d6608e7e3a48ebd9fa5ebda9991","modified":1522394683824},{"_id":"themes/yelee/source/static/api/img/share/selectshare_close.png","hash":"6f3666278268890a153c85fb9f04ac848c442561","modified":1522394683824},{"_id":"themes/yelee/source/static/api/img/share/share-search-icon.png","hash":"0629677a7eb5aa3e8bab3faa310c6d8c467a3287","modified":1522394683824},{"_id":"themes/yelee/source/static/api/js/base/class.js","hash":"db02960fb51f69a0d50dc9ed626a998be3884706","modified":1522394683825},{"_id":"themes/yelee/source/static/api/js/component/animate.js","hash":"17a3495543db66e4eb56a81a93edf3e41ca8cc31","modified":1522394683826},{"_id":"themes/yelee/source/static/api/js/component/anticheat.js","hash":"ee6b11a7ed39ae67c1c2aeeef96b4a0f40f8083c","modified":1522394683826},{"_id":"themes/yelee/source/static/api/js/component/comm_tools.js","hash":"28d096a61f54e64bdbc32d172ae20e7f6e9656a7","modified":1522394683826},{"_id":"themes/yelee/source/static/api/js/component/partners.js","hash":"a4c275ffb4d3557280211e6bf0573485b397ffd8","modified":1522394683827},{"_id":"themes/yelee/source/static/api/js/component/pop_base.js","hash":"eae6e120c149a21caa2883c533ccc40bc07fda51","modified":1522394683827},{"_id":"themes/yelee/source/static/api/js/component/pop_dialog.js","hash":"4417d2fa9ad8ff6c79a2352ef07e9d10a1313ee0","modified":1522394683827},{"_id":"themes/yelee/source/static/api/js/component/pop_popup.js","hash":"aface5a8c3f71e9e024bf0df5b361ed8f5452f50","modified":1522394683828},{"_id":"themes/yelee/source/static/api/js/component/pop_popup_slide.js","hash":"45a72013fba95249ca965fd4d98f3bbde7a7098a","modified":1522394683828},{"_id":"themes/yelee/source/static/api/js/conf/const.js","hash":"7da7df37d0f3d3e1977a8d107c98a3c1ecdb39c2","modified":1522394683828},{"_id":"themes/yelee/source/static/api/js/component/qrcode.js","hash":"2e3cc4cc5545556dd97ab899ff32d3ab7ccee808","modified":1522394683828},{"_id":"themes/yelee/source/static/api/js/share/api_base.js","hash":"cbacd664451f80955c2ff4caccd4b9110062c714","modified":1522394683829},{"_id":"themes/yelee/source/static/api/js/conf/define.js","hash":"ee0afad836be1553980501855752ccd79fe1fe0e","modified":1522394683828},{"_id":"themes/yelee/source/static/api/js/share/combine_api.js","hash":"7ad3c5396bf20704e87f98ebe118034ed3cc7b22","modified":1522394683829},{"_id":"themes/yelee/source/static/api/js/share/likeshare.js","hash":"2d14ab97cc3dc294c51c0d6814f4ea45f4b4e312","modified":1522394683830},{"_id":"themes/yelee/source/static/api/js/share/image_api.js","hash":"43a93415f2a5dd34760042c2bcd9f4692feecb5d","modified":1522394683830},{"_id":"themes/yelee/source/static/api/js/share/like_api.js","hash":"4034b10f8f34367c6db47ae092e5b4107c2fb8b4","modified":1522394683830},{"_id":"themes/yelee/source/static/api/js/share/select_api.js","hash":"bf259a7912ee6124d741dbb5e45cab40bfa45e90","modified":1522394683830},{"_id":"themes/yelee/source/static/api/js/share/share_api.js","hash":"f7b86d0cc063f692a73a174d04e77cbe3c5facc7","modified":1522394683830},{"_id":"themes/yelee/source/static/api/js/share/slide_api.js","hash":"c317e3f7fec13d89178e475f26a689bb94e5aa76","modified":1522394683831},{"_id":"themes/yelee/source/static/api/js/start/router.js","hash":"27bc546a9c796b15e59442aaf09ae645a2ed4c74","modified":1522394683831},{"_id":"themes/yelee/source/static/api/js/view/image_view.js","hash":"bb66297a5bd2c7dd931b9145f5d4a616876f3373","modified":1522394683833},{"_id":"themes/yelee/source/static/api/js/view/like_view.js","hash":"c1b6a3f3f89ac734c6da284c1ba1dde2ada4e250","modified":1522394683833},{"_id":"themes/yelee/source/static/api/js/view/select_view.js","hash":"2611efec1d31d85609feea0c57e14d3f817a6220","modified":1522394683833},{"_id":"themes/yelee/source/static/api/js/view/share_view.js","hash":"f445ce9cbbcf887da5e248b1cfadc03ab7df76d0","modified":1522394683833},{"_id":"themes/yelee/source/static/api/js/view/slide_view.js","hash":"973ded5cd15eb119e79ffd9326af3a44167b26bd","modified":1522394683834},{"_id":"themes/yelee/source/static/api/js/view/view_base.js","hash":"b3fd7dafde05d63af3dfe9e0a59f9367f81402c5","modified":1522394683834},{"_id":"themes/yelee/source/static/api/js/trans/trans.js","hash":"cb82afecdbede8d5a00b6c5ea9595187b6408376","modified":1522394683832},{"_id":"themes/yelee/source/static/api/js/trans/trans_bdxc.js","hash":"a512ebfca0319ab38d06b7b0fb74bcdc942dc46e","modified":1522394683832},{"_id":"themes/yelee/source/static/api/js/trans/trans_bdysc.js","hash":"28bb985a03b6b1da5a89a143331932a12126c9c3","modified":1522394683832},{"_id":"themes/yelee/source/static/api/js/trans/trans_weixin.js","hash":"e68e9bc91ee6fbcd64ac788463870f01602a8562","modified":1522394683832},{"_id":"themes/yelee/source/static/api/js/base/tangram.js","hash":"f3ecbed4c05dba6a28df137e9a4e66c9ccfbd220","modified":1522394683826},{"_id":"source/public_s/mp3/a-love.mp3","hash":"d18094f4569eae835898a3d93d5b859e12ebcffd","modified":1522394683771},{"_id":"public/baidusitemap.xml","hash":"02f63a590f6b2fe6a3e8bc2d4f56b190938b5fe3","modified":1527762756930},{"_id":"public/search.xml","hash":"284c7a8a993017bbb4423734099fa9fd00ec87ed","modified":1527762757010},{"_id":"public/sitemap.xml","hash":"38ca652e2214b477e32a32027d2830ab91d0006a","modified":1527762757013},{"_id":"public/404.html","hash":"5a0d5f46297eb3b6e4eba53fe4aa3eb4eb2b06c1","modified":1527762757201},{"_id":"public/about/index.html","hash":"8043c8ab36b85fa66ca0be4d3a0f3fc4555f4f00","modified":1527762757288},{"_id":"public/tags/index.html","hash":"fa515531b06d4c976c47d45db8611987de93cc52","modified":1527762757293},{"_id":"public/2018/05/31/others/seo/index.html","hash":"2cf1f4a6941cea6e40512a32d459618d860ac4dd","modified":1527762757294},{"_id":"public/2018/05/15/study/study2014-05/index.html","hash":"02bb59f0ca9714a48211107fdf345602b7fe2080","modified":1527762757294},{"_id":"public/2018/04/12/js/node/nodestudy-01/index.html","hash":"17457d6edc7be8c864ac2cb5646c1d60a55708ff","modified":1527762757294},{"_id":"public/2018/04/11/js/react/react-constructor-super/index.html","hash":"b17966cfa7bc0646174d3862818911715123af8c","modified":1527762757294},{"_id":"public/2018/04/08/study/study2018-04/index.html","hash":"c2fff072a4a990326d7777a2ca5e7ba93c1e7da3","modified":1527762757294},{"_id":"public/2018/03/30/study/study2018-03/index.html","hash":"541e0cf149cb1aaebcde9fd45eb86dc8fc527f2d","modified":1527762757294},{"_id":"public/2018/02/06/js/common/parseUrlParams/index.html","hash":"a9e042bd464d6d53d492026805fc958c8f072eeb","modified":1527762757294},{"_id":"public/2017/11/24/others/time-manage/index.html","hash":"17d8a5e00c41177a0c3cb3881e94bd05ef90e1ff","modified":1527762757294},{"_id":"public/2017/11/14/others/move-review-liechang/index.html","hash":"5317b8cf02be5d196f94fef77b439c510d8ec6fa","modified":1527762757294},{"_id":"public/2017/11/09/frame/vue/vue-study-03/index.html","hash":"f6e4d7cadd65c5a71441bb4340e7d3daef442ce8","modified":1527762757294},{"_id":"public/2017/11/08/frame/vue/vue-study-iview/index.html","hash":"d084b7a73bd5c01efd613684739b993b65720074","modified":1527762757294},{"_id":"public/2017/11/07/js/array/array-method-01/index.html","hash":"4faf1cefa3ae413de6df5a503a4eeba70b31d32a","modified":1527762757294},{"_id":"public/2017/11/07/frame/vue/vue-study-computed/index.html","hash":"8b6de06584037259ae25494ad4957cbfca93a373","modified":1527762757294},{"_id":"public/2017/11/07/js/array/js-call/index.html","hash":"141a8bf90d4bb6e0de7d4150141020c62fd2793f","modified":1527762757295},{"_id":"public/2017/11/01/others/live-tulei-01/index.html","hash":"f1166f1d73c7f24def756a216e95e7cc56e745c7","modified":1527762757295},{"_id":"public/2017/10/31/others/hexo-command/index.html","hash":"9cfad1ad4fdebab7c832c26840a7e70a77136144","modified":1527762757295},{"_id":"public/2017/10/31/others/hexo/index.html","hash":"2ffe3246d707f872fa182557cbcdb8ec2bdb040a","modified":1527762757295},{"_id":"public/2015/12/03/others/first-on-hexo/index.html","hash":"8ca9fff92605b8fd9b7f502d670f1b943d57cd55","modified":1527762757295},{"_id":"public/archives/index.html","hash":"e467ac73d2e2820769f32d2fb7a5faf3e67182ad","modified":1527762757295},{"_id":"public/archives/2015/index.html","hash":"d3486bf995d8e59dc6a6b13cc8bd296adae76b23","modified":1527762757304},{"_id":"public/archives/2015/12/index.html","hash":"77107f0e485bb68666af4ccab006f0d5243a775b","modified":1527762757305},{"_id":"public/archives/2017/10/index.html","hash":"bf58e2781b3105be863fc09002ee476d95a6b42c","modified":1527762757305},{"_id":"public/archives/2018/02/index.html","hash":"dd7e2b0f02aa3ba1f61d617d407f33919df097dd","modified":1527762757305},{"_id":"public/archives/2018/03/index.html","hash":"ba5f108ec678a30b0c89c9fc922e6b13adfd07a0","modified":1527762757305},{"_id":"public/archives/2018/04/index.html","hash":"b9b3ba95d0ee57bbc39066e725d473e68a480b18","modified":1527762757305},{"_id":"public/archives/2018/05/index.html","hash":"17903ce4df9bbb4f254811c547005d66919365ad","modified":1527762757305},{"_id":"public/categories/影视/index.html","hash":"7f68f9babc0eda56798e68908fb7a644038a07db","modified":1527762757305},{"_id":"public/categories/生活/index.html","hash":"50622a51b438e6e9eadbfce37de66b26f62dc98d","modified":1527762757305},{"_id":"public/categories/学习/index.html","hash":"ec0e49c35bda390aaa967e407aca6d3ee4be253c","modified":1527762757305},{"_id":"public/categories/vue框架/index.html","hash":"86b27d6df23052a365e22427c8f45fb2ab983bb4","modified":1527762757305},{"_id":"public/tags/电视剧/index.html","hash":"3aabbc5cf516f6a93975b0e148794b34f56143c3","modified":1527762757305},{"_id":"public/tags/经典台词/index.html","hash":"14e21f4166431d9be304bef48e61d286fd2f6b0c","modified":1527762757305},{"_id":"public/tags/tag1/index.html","hash":"e9830958197e41a5e302c67edba3daefe20011b3","modified":1527762757305},{"_id":"public/tags/tag2/index.html","hash":"abaec177618f17b9b86ad3eae27a72cae1473e80","modified":1527762757305},{"_id":"public/tags/tag3/index.html","hash":"264c86681eaf83c468ffd9bc937ad58447e8c3a2","modified":1527762757305},{"_id":"public/tags/情感/index.html","hash":"f07f11b2b71de37d530f5df3110925c2fcdc920c","modified":1527762757305},{"_id":"public/tags/SEO/index.html","hash":"38767df5d920561c1281e6ef25a39b2ab1ed5fee","modified":1527762757305},{"_id":"public/tags/学习计划/index.html","hash":"c93ced9c20e61d87610c23dcc6132edee4486ed1","modified":1527762757305},{"_id":"public/tags/励志/index.html","hash":"fc3e06ec85cdff34f1d59a40b5c3bba2489b99ab","modified":1527762757305},{"_id":"public/tags/iview组件/index.html","hash":"774a2ef057a8f314ff9000d03c217b931ed83880","modified":1527762757305},{"_id":"public/tags/vue知识点/index.html","hash":"0c363930c5d7db3258edbe1f537040b8ab3a71c1","modified":1527762757305},{"_id":"public/tags/数组/index.html","hash":"cd15db54682c1ac0818e01524e1b65b60b7ff15a","modified":1527762757305},{"_id":"public/tags/算法/index.html","hash":"3d1c833727927be6e17ac45d1d88e55a9deeee4f","modified":1527762757306},{"_id":"public/tags/js知识点总结/index.html","hash":"ade61e93c2be4f5b94a01594ac0e09882590c655","modified":1527762757306},{"_id":"public/tags/node/index.html","hash":"cebad119cbb7a96e3530b40cd7ecd18356fd81bf","modified":1527762757306},{"_id":"public/tags/react/index.html","hash":"71f4334c8b815b840352d819c961061b0270fea5","modified":1527762757306},{"_id":"public/archives/page/2/index.html","hash":"31df71d537912bd3093f16a093a2c09c3a6da725","modified":1527762757306},{"_id":"public/archives/2017/index.html","hash":"22569d1673e0b37d738f28671b85ec36edb4f859","modified":1527762757306},{"_id":"public/archives/2017/11/index.html","hash":"1dcd0ba20bc603853a836d273dab95cc552262e4","modified":1527762757306},{"_id":"public/archives/2018/index.html","hash":"651f8240373ace50b3d53e3f4c51b4615855e32a","modified":1527762757306},{"_id":"public/index.html","hash":"47fc9d5216a1927516c97e54c4d67d8956411eaa","modified":1527762757306},{"_id":"public/categories/JavaScript/index.html","hash":"230f5b6eba379192c13c62f30f784ae055a7f2a4","modified":1527762757306},{"_id":"public/page/2/index.html","hash":"ac55a46aafc7fa58aab59720d29df418e9308986","modified":1527762757306},{"_id":"public/favicon.ico","hash":"bc6985bf377d2fdc64ada5af4c919288599594b4","modified":1527762757306},{"_id":"public/public_s/images/autumn_20171110151408.jpg","hash":"d06db971de65cd859292a23748dade80dc068332","modified":1527762757306},{"_id":"public/background/bg-1.jpg","hash":"9a5241de4c880f13a278f6980bf11d4dfb214d82","modified":1527762757306},{"_id":"public/background/bg-3.jpg","hash":"d476909f06fe8267c676952e3582bf9e9ff73585","modified":1527762757306},{"_id":"public/background/bg-2.jpg","hash":"d1e0b92e8fa822e44d185b5e1bf94ab47bc98a0a","modified":1527762757306},{"_id":"public/robots.txt","hash":"85d977cb906879af47f146e03ba9cdc8d697fcb9","modified":1527762757306},{"_id":"public/background/bg-4.jpg","hash":"8e80d0b7786c3bf7b9648c0190719e78001e9eeb","modified":1527762757306},{"_id":"public/apple-touch-icon.png","hash":"c0fda117fa166d63b9eb690cc5e4fb2caaf493b3","modified":1527762757306},{"_id":"public/img/CSDN.png","hash":"59f7d89eda8a7310a0ee1607e153c0829af7eb6e","modified":1527762757306},{"_id":"public/img/AcFun.png","hash":"df6b0fa39ced4dc988359fc7b7cd1e5403de08a6","modified":1527762757306},{"_id":"public/img/Coding.png","hash":"afb4bce19bebf61e3c486fd5199369d6eb191b78","modified":1527762757306},{"_id":"public/img/Plunker.png","hash":"14a0054b9b4a0e459987f34b9ab48ab22dbe5cf9","modified":1527762757306},{"_id":"public/img/LOFTER.png","hash":"88670eaea8612839e9d6a40a3636e4231ab56c0f","modified":1527762757307},{"_id":"public/img/SegmentFault.png","hash":"1afbc7e575e2e9ed9404be84a3f92f7ca8345a9c","modified":1527762757307},{"_id":"public/img/avatar.png","hash":"e6bf950e2bedb0f24f8187a470b6ac9599e93c67","modified":1527762757307},{"_id":"public/img/Quora.png","hash":"1a624ade0d07f2482b21bef1e2a5ddd0110ba352","modified":1527762757307},{"_id":"public/img/TiddlyWiki.png","hash":"b7f68f8f9c45561a9455aee0bfb80e35cae6f8df","modified":1527762757307},{"_id":"public/img/V2EX.png","hash":"d0768de8555f9be0ee8ce956198cef454d4e4d7c","modified":1527762757307},{"_id":"public/img/avatar2.png","hash":"54d74ed6b3dc8bc2ac202726c4e731d35fb5826b","modified":1527762757307},{"_id":"public/img/niconico.png","hash":"fabc7ca45e9ee5698db33a25de8b1f8a7c7d6723","modified":1527762757307},{"_id":"public/img/bilibili.png","hash":"be37b7e9a091c8547b8ee8b9d29583af8ded61c0","modified":1527762757307},{"_id":"public/img/scrollbar_arrow.png","hash":"af987032f2171867bb58b165d2180eb5dcbea637","modified":1527762757307},{"_id":"public/img/知乎.png","hash":"ed6d3c304789e112d09f40784fa6add1f1a38bd6","modified":1527762757307},{"_id":"public/img/博客园.png","hash":"5ff6f4c9f1fc1695217a57436d58b246d9d2f197","modified":1527762757307},{"_id":"public/img/新浪微博.png","hash":"7a145ed1daee0c172cda77098f4254fc21f9eeee","modified":1527762757307},{"_id":"public/img/简书.png","hash":"5c91ee83cab4abe160240e09de345b6935c8cb37","modified":1527762757307},{"_id":"public/img/虾米音乐.png","hash":"a0039b049779b1f37c0b0b91760943b7bf25c8f1","modified":1527762757307},{"_id":"public/img/网易云音乐.png","hash":"4fd1275fd988584811cf710207eb077f2306f271","modified":1527762757307},{"_id":"public/img/豆瓣.png","hash":"f1fc97f98612bcdf4a681542e5388483b40a5300","modified":1527762757307},{"_id":"public/public_s/images/timeManage/0.1174553194175334.png","hash":"7a226e23dd8e1deb40862d45375ba8a26ca964c5","modified":1527762757307},{"_id":"public/public_s/images/timeManage/0.419097318675272.png","hash":"b1b35cc5d94278b2ebf80c2a870210fd1bf90e49","modified":1527762757307},{"_id":"public/public_s/images/timeManage/0.46321933528434545.png","hash":"ba70b029ef647009e29dde7003666d02391f7969","modified":1527762757307},{"_id":"public/background/backup/bg-1.jpg","hash":"31d7bb15211000c05656899302f8ec9ee3de0e9f","modified":1527762757307},{"_id":"public/public_s/images/timeManage/0.5021243947689109.png","hash":"8de789ab52892f44d609ae544272e8acfa02ec2a","modified":1527762757307},{"_id":"public/public_s/images/timeManage/0.530341774969219.png","hash":"79a0ae47a04e4fd13db78d632efd4dc228362c16","modified":1527762757307},{"_id":"public/background/backup/bg-2.jpg","hash":"7ae358f3ab8b41558444053400e796c41b3ba0e2","modified":1527762757307},{"_id":"public/public_s/images/timeManage/0.9251521097293676.png","hash":"9ebd2722a28a68940be700d8081fa94c1527eb87","modified":1527762757308},{"_id":"public/background/backup/bg-3.jpg","hash":"1a06d3a660bfb99b62d760e4e1e09de168a4c74c","modified":1527762757308},{"_id":"public/background/backup/bg-4.jpg","hash":"6df1383d0f6134016d844df9abb740a6e0c0b2c5","modified":1527762757308},{"_id":"public/public_s/images/timeManage/0.7242512129749097.png","hash":"bc6bf8f1f8f33ba7dd64aa9e580675b09121ee0c","modified":1527762757308},{"_id":"public/img/old/avatar-1.png","hash":"e6bf950e2bedb0f24f8187a470b6ac9599e93c67","modified":1527762757308},{"_id":"public/img/old/avatar.png","hash":"e4bca3d60087cd6e775d8e2aa2bf0d35e3859592","modified":1527762757308},{"_id":"public/static/api/img/share/icons_0_24.png","hash":"a89223f9714c8c4fa169430a327963ca6a1c9a6e","modified":1527762757308},{"_id":"public/static/api/img/share/icons_0_32.png","hash":"c20521634fdacef39631031671528713e6ba6081","modified":1527762757308},{"_id":"public/static/api/img/share/icons_0_16.png","hash":"0eec1e81a04664b2032bd389513349e9bd5d5b0f","modified":1527762757308},{"_id":"public/static/api/img/share/icons_1_16.png","hash":"3793c3265429ab7b830bfaf18322259cd0b4c4ef","modified":1527762757308},{"_id":"public/static/api/img/share/icons_1_24.png","hash":"9f1d472095dbe138ef7aff069b1d18cae6ffa942","modified":1527762757308},{"_id":"public/static/api/img/share/l0.gif","hash":"738b92632b0a9789a9eb568b8d101eb64f55f6e0","modified":1527762757308},{"_id":"public/static/api/img/share/icons_2_16.png","hash":"07340442cb61aabb419dd226f4bfb206a7577f52","modified":1527762757308},{"_id":"public/static/api/img/share/icons_1_32.png","hash":"09825de5f238c97e4374d545961d6e0d5bbfb3e2","modified":1527762757308},{"_id":"public/static/api/img/share/icons_2_24.png","hash":"e47fb87c533f2be89f22901f0864d9b5ef83412d","modified":1527762757308},{"_id":"public/static/api/img/share/l1.gif","hash":"70e1932ca7a622ed3322b683eceb7a590860a55e","modified":1527762757308},{"_id":"public/static/api/img/share/l4.gif","hash":"8a9c3cf99766d3f07a9c480cfdffdc3197b9a6b9","modified":1527762757308},{"_id":"public/static/api/img/share/l2.gif","hash":"e6a5d6104c226a686d48759e0268e09d762e242e","modified":1527762757308},{"_id":"public/static/api/img/share/l3.gif","hash":"26c0dd37d98df63abb9d3d83e01bb47c34ee3f0f","modified":1527762757308},{"_id":"public/static/api/img/share/icons_2_32.png","hash":"deba62865245a6b5aafa446787d72165c703b943","modified":1527762757308},{"_id":"public/static/api/img/share/l7.gif","hash":"e4f7e5e56c8f4eb026b5cb0affe3bd69c31af261","modified":1527762757309},{"_id":"public/static/api/img/share/l5.gif","hash":"148706f56b8ef4fd9d8483d0ac3a6730e72fc0ad","modified":1527762757309},{"_id":"public/static/api/img/share/l6.gif","hash":"f4b8e3188f744f13aca46b27b451d55d9e209c48","modified":1527762757309},{"_id":"public/static/api/img/share/l8.gif","hash":"ec7dbc7703961356e05528d2844b983f225445e4","modified":1527762757309},{"_id":"public/static/api/img/share/r1.gif","hash":"96064d132ee2477c0e444c2e18162f9d1dc9e9c2","modified":1527762757309},{"_id":"public/static/api/img/share/pop_c.gif","hash":"e8b9ece6ddaa47ccb2c15f2396d1cd3020740603","modified":1527762757309},{"_id":"public/static/api/img/share/r0.gif","hash":"882f255fbafc0136a3917c1dd40db88879c1b1c1","modified":1527762757309},{"_id":"public/static/api/img/share/r3.gif","hash":"ecdd21f1457be54afc96e2d005524eef93d7bf85","modified":1527762757309},{"_id":"public/static/api/img/share/r2.gif","hash":"67c84a67be3b039892e9cb8c7c29ed29813bf60f","modified":1527762757309},{"_id":"public/static/api/img/share/r4.gif","hash":"517435e69a2215a0f003e75a4861154ca963c30e","modified":1527762757309},{"_id":"public/static/api/img/share/r5.gif","hash":"e61b32d1830390303927bdab21823959f8dc7023","modified":1527762757309},{"_id":"public/static/api/img/share/r6.gif","hash":"4bc01e08ef0015fddf5b8c7257c094ec584ca3ee","modified":1527762757309},{"_id":"public/static/api/img/share/r8.gif","hash":"c068ece54a72a3f2428d4f1b5ca7c176f027dd4e","modified":1527762757309},{"_id":"public/static/api/img/share/r7.gif","hash":"3c596c924910c93cf3e37cc1b2870dbf271151e2","modified":1527762757309},{"_id":"public/static/api/img/share/sc.png","hash":"e5a2ca56973a3d6608e7e3a48ebd9fa5ebda9991","modified":1527762757309},{"_id":"public/static/api/img/share/selectshare_close.png","hash":"6f3666278268890a153c85fb9f04ac848c442561","modified":1527762757309},{"_id":"public/static/api/img/share/share-search-icon.png","hash":"0629677a7eb5aa3e8bab3faa310c6d8c467a3287","modified":1527762757309},{"_id":"public/public_s/images/mmexport1499932133535.jpeg","hash":"60f62ddc1f0c7ee3fcb29248a15235e9a72878ac","modified":1527762757955},{"_id":"public/background/bg-5.jpg","hash":"e4a3631b6b0f94ebce30a6f01ecb2b6ed7cfdb0b","modified":1527762757956},{"_id":"public/background/bg-6.jpg","hash":"51b427f07ffc6f2ad97651f23cc16e8f19ed02f9","modified":1527762757958},{"_id":"public/img/old/avatar2.png","hash":"ef8a4924b45e172c06c6db7d9ddce367635a5a37","modified":1527762757958},{"_id":"public/js/GithubRepoWidget.js","hash":"624e81a3b0e57495b0c0e0b3e056296c6e8ae5df","modified":1527762757964},{"_id":"public/js/instagram.js","hash":"f19adbcc0dac33536bc6660598059048ec901882","modified":1527762757964},{"_id":"public/js/main.js","hash":"d58bbc593d94d48e85d4ebfb002910444080cb06","modified":1527762757964},{"_id":"public/js/mobile.js","hash":"0f4c1fcd6df47a196ed9495c225173402aa7d769","modified":1527762757964},{"_id":"public/js/search.js","hash":"b456aaab98bbc3b0906f8a16d1e6e4f74dfcffda","modified":1527762757964},{"_id":"public/js/pc.js","hash":"19a1660b10358046e7a1f398284491519b2ffd47","modified":1527762757964},{"_id":"public/js/toc.js","hash":"72ba1228fc1a44df45b8f4b562eba78594f13016","modified":1527762757964},{"_id":"public/static/api/css/imgshare.css","hash":"c3624a2dde649ed28b2e5d1f050fd971fbaf71a0","modified":1527762757964},{"_id":"public/static/api/css/like.css","hash":"2024d58206df01b858c38f07957f928b44e14cb3","modified":1527762757964},{"_id":"public/static/api/css/select_share.css","hash":"d0259abdb410193cf761e42bffaa51e70327a0cd","modified":1527762757964},{"_id":"public/static/api/css/share_popup.css","hash":"338ba2b30ef8ce0c84cd36b37d7f8482996291dc","modified":1527762757964},{"_id":"public/static/api/css/share_style0_16.css","hash":"090e77e9e6e9b8ee0d73a233cbe46499de935bdd","modified":1527762757965},{"_id":"public/static/api/css/share_style0_24.css","hash":"7d1f9f32b80f91001f4f951aa045180cde22d82e","modified":1527762757965},{"_id":"public/static/api/css/share_style0_32.css","hash":"7c2d12ea532c8a55c102b649bb23ef5bf53b3ed3","modified":1527762757965},{"_id":"public/static/api/css/share_style1_16.css","hash":"aeb4e9fa96cfa0167481e1f4007079dc3f3c6c27","modified":1527762757965},{"_id":"public/static/api/css/share_style2_16.css","hash":"572c8e856988e463eb865f38d33ba003cc20d083","modified":1527762757965},{"_id":"public/static/api/css/share_style1_32.css","hash":"626d67a4c0bb72a152e90d25dbf281c0c35a2140","modified":1527762757965},{"_id":"public/static/api/css/share_style1_24.css","hash":"3ee5f745c863b4f68299fe5dc125f913ca619c07","modified":1527762757965},{"_id":"public/static/api/css/share_style2.css","hash":"1ad451187cde8a74843fd398b924ca0ac911e9be","modified":1527762757965},{"_id":"public/static/api/css/weixin_popup.css","hash":"5e6c5084bfd16051de5776c2e136a5462b08a32c","modified":1527762757965},{"_id":"public/static/api/css/share_style2_24.css","hash":"917d963d3be111064cbb1d122963da91ee3724a0","modified":1527762757965},{"_id":"public/static/api/css/share_style2_32.css","hash":"3657bbc4b5bbc66ebca4906ee0a1cbf9f98be883","modified":1527762757965},{"_id":"public/static/api/css/slide_share.css","hash":"3898feaf45559b039f885bee8f9e831f48adb20c","modified":1527762757965},{"_id":"public/static/api/js/trans/logger.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1527762757965},{"_id":"public/static/api/css/share_style4.css","hash":"0a9e2ed712a5ef5c4699c038cd001a0d688a0fdf","modified":1527762757965},{"_id":"public/static/api/js/trans/data.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1527762757965},{"_id":"public/static/api/js/base/class.js","hash":"db02960fb51f69a0d50dc9ed626a998be3884706","modified":1527762757965},{"_id":"public/static/api/js/component/animate.js","hash":"17a3495543db66e4eb56a81a93edf3e41ca8cc31","modified":1527762757965},{"_id":"public/static/api/js/component/partners.js","hash":"a4c275ffb4d3557280211e6bf0573485b397ffd8","modified":1527762757965},{"_id":"public/static/api/js/component/pop_dialog.js","hash":"4417d2fa9ad8ff6c79a2352ef07e9d10a1313ee0","modified":1527762757965},{"_id":"public/static/api/js/component/comm_tools.js","hash":"28d096a61f54e64bdbc32d172ae20e7f6e9656a7","modified":1527762757965},{"_id":"public/static/api/js/component/anticheat.js","hash":"ee6b11a7ed39ae67c1c2aeeef96b4a0f40f8083c","modified":1527762757965},{"_id":"public/static/api/js/component/pop_base.js","hash":"eae6e120c149a21caa2883c533ccc40bc07fda51","modified":1527762757966},{"_id":"public/static/api/js/component/pop_popup_slide.js","hash":"45a72013fba95249ca965fd4d98f3bbde7a7098a","modified":1527762757966},{"_id":"public/static/api/js/conf/const.js","hash":"7da7df37d0f3d3e1977a8d107c98a3c1ecdb39c2","modified":1527762757966},{"_id":"public/static/api/js/component/pop_popup.js","hash":"aface5a8c3f71e9e024bf0df5b361ed8f5452f50","modified":1527762757966},{"_id":"public/static/api/js/share/likeshare.js","hash":"2d14ab97cc3dc294c51c0d6814f4ea45f4b4e312","modified":1527762757966},{"_id":"public/static/api/js/component/qrcode.js","hash":"2e3cc4cc5545556dd97ab899ff32d3ab7ccee808","modified":1527762757966},{"_id":"public/static/api/js/share/api_base.js","hash":"cbacd664451f80955c2ff4caccd4b9110062c714","modified":1527762757966},{"_id":"public/static/api/js/conf/define.js","hash":"ee0afad836be1553980501855752ccd79fe1fe0e","modified":1527762757966},{"_id":"public/static/api/js/share/select_api.js","hash":"bf259a7912ee6124d741dbb5e45cab40bfa45e90","modified":1527762757966},{"_id":"public/static/api/js/share/combine_api.js","hash":"7ad3c5396bf20704e87f98ebe118034ed3cc7b22","modified":1527762757966},{"_id":"public/static/api/js/share/like_api.js","hash":"4034b10f8f34367c6db47ae092e5b4107c2fb8b4","modified":1527762757966},{"_id":"public/static/api/js/share/image_api.js","hash":"43a93415f2a5dd34760042c2bcd9f4692feecb5d","modified":1527762757966},{"_id":"public/static/api/js/share/share_api.js","hash":"f7b86d0cc063f692a73a174d04e77cbe3c5facc7","modified":1527762757966},{"_id":"public/static/api/js/start/router.js","hash":"27bc546a9c796b15e59442aaf09ae645a2ed4c74","modified":1527762757966},{"_id":"public/static/api/js/share/slide_api.js","hash":"c317e3f7fec13d89178e475f26a689bb94e5aa76","modified":1527762757966},{"_id":"public/static/api/js/view/like_view.js","hash":"c1b6a3f3f89ac734c6da284c1ba1dde2ada4e250","modified":1527762757966},{"_id":"public/static/api/js/view/select_view.js","hash":"2611efec1d31d85609feea0c57e14d3f817a6220","modified":1527762757967},{"_id":"public/static/api/js/view/image_view.js","hash":"bb66297a5bd2c7dd931b9145f5d4a616876f3373","modified":1527762757967},{"_id":"public/static/api/js/view/share_view.js","hash":"f445ce9cbbcf887da5e248b1cfadc03ab7df76d0","modified":1527762757967},{"_id":"public/static/api/js/view/slide_view.js","hash":"973ded5cd15eb119e79ffd9326af3a44167b26bd","modified":1527762757967},{"_id":"public/static/api/js/trans/trans_bdxc.js","hash":"a512ebfca0319ab38d06b7b0fb74bcdc942dc46e","modified":1527762757967},{"_id":"public/static/api/js/view/view_base.js","hash":"b3fd7dafde05d63af3dfe9e0a59f9367f81402c5","modified":1527762757967},{"_id":"public/static/api/js/trans/trans_bdysc.js","hash":"28bb985a03b6b1da5a89a143331932a12126c9c3","modified":1527762757967},{"_id":"public/static/api/js/trans/trans.js","hash":"cb82afecdbede8d5a00b6c5ea9595187b6408376","modified":1527762757967},{"_id":"public/static/api/js/trans/trans_weixin.js","hash":"e68e9bc91ee6fbcd64ac788463870f01602a8562","modified":1527762757967},{"_id":"public/css/style.css","hash":"5152f169fa60279d88be7f4841a465b3a68db400","modified":1527762757967},{"_id":"public/static/api/js/share.js","hash":"73bdb33580128e6c79a726a25f98092c0faa369d","modified":1527762757967},{"_id":"public/static/api/js/base/tangram.js","hash":"e1952e27f6dc3d6339128cec157acef8cc0a775f","modified":1527762757967},{"_id":"public/public_s/mp3/a-love.mp3","hash":"d18094f4569eae835898a3d93d5b859e12ebcffd","modified":1527762758139}],"Category":[{"name":"影视","_id":"cjhuehz9a00077sooa4h3idbq"},{"name":"生活","_id":"cjhuehz9i000c7sooadum7m89"},{"name":"学习","_id":"cjhuehz9j000f7sooc2pqcmkg"},{"name":"vue框架","_id":"cjhuehzb8001a7sooherjglvm"},{"name":"JavaScript","_id":"cjhuehzbi001j7soobd4ci846"}],"Data":[],"Page":[{"title":"404 Not Found：该页无法显示","toc":false,"comments":0,"_content":"<style type=\"text/css\">\n\t.article-header {\n\t\tpadding: 0;\n\t\tpadding-top: 26px;\n\t\tborder-left: none;\n\t\ttext-align: center;\n\t}\n\t.article-header:hover {\n\t\tborder-left: none;\n\t}\n\t.article-title {\n\t\tfont-size: 2.1em;\n\t}\n\tstrong a {\n\t\tcolor: #747474;\n\t}\n\t.article-meta {\n\t\tdisplay: none;\n\t}\n\t.share {\n\t\tdisplay: none;\n\t}\n\t.ds-meta {\n\t\tdisplay: none;\n\t}\n\t.player {\n\t\tmargin-left: -10px;\n\t}\n\t.sign {\n\t\ttext-align: right;\n\t\tfont-style: italic;\n\t}\n  \t#page-visit {\n\t\tdisplay: none;\n\t}\n\t.center {\n\t\ttext-align: center;\n\t\theight: 2.5em;\n\t\tfont-weight: bold;\n\t}\n\t.article-entry hr {\n\t\tmargin: 0;\n\t}\n\t.pic {\n\t\ttext-align: center;\n\t\tmargin: 0;\n\t}\n\t.pic br {\n  \t\tdisplay: none;\n  \t}\n\t#container .article-info-post.article-info {\n  \tdisplay: none;\n  \t}\n\t#container .article .article-title {\n\tpadding: 0;\n\t}\n</style>","source":"404/index.md","raw":"title: 404 Not Found：该页无法显示\ntoc: false\ncomments: false\npermalink: /404\n---\n<style type=\"text/css\">\n\t.article-header {\n\t\tpadding: 0;\n\t\tpadding-top: 26px;\n\t\tborder-left: none;\n\t\ttext-align: center;\n\t}\n\t.article-header:hover {\n\t\tborder-left: none;\n\t}\n\t.article-title {\n\t\tfont-size: 2.1em;\n\t}\n\tstrong a {\n\t\tcolor: #747474;\n\t}\n\t.article-meta {\n\t\tdisplay: none;\n\t}\n\t.share {\n\t\tdisplay: none;\n\t}\n\t.ds-meta {\n\t\tdisplay: none;\n\t}\n\t.player {\n\t\tmargin-left: -10px;\n\t}\n\t.sign {\n\t\ttext-align: right;\n\t\tfont-style: italic;\n\t}\n  \t#page-visit {\n\t\tdisplay: none;\n\t}\n\t.center {\n\t\ttext-align: center;\n\t\theight: 2.5em;\n\t\tfont-weight: bold;\n\t}\n\t.article-entry hr {\n\t\tmargin: 0;\n\t}\n\t.pic {\n\t\ttext-align: center;\n\t\tmargin: 0;\n\t}\n\t.pic br {\n  \t\tdisplay: none;\n  \t}\n\t#container .article-info-post.article-info {\n  \tdisplay: none;\n  \t}\n\t#container .article .article-title {\n\tpadding: 0;\n\t}\n</style>","date":"2018-03-30T07:24:43.713Z","updated":"2018-03-30T07:24:43.713Z","path":"/404.html","layout":"page","_id":"cjhuehz8d00007sooicp3zbjt","content":"<style type=\"text/css\">\n    .article-header {\n        padding: 0;\n        padding-top: 26px;\n        border-left: none;\n        text-align: center;\n    }\n    .article-header:hover {\n        border-left: none;\n    }\n    .article-title {\n        font-size: 2.1em;\n    }\n    strong a {\n        color: #747474;\n    }\n    .article-meta {\n        display: none;\n    }\n    .share {\n        display: none;\n    }\n    .ds-meta {\n        display: none;\n    }\n    .player {\n        margin-left: -10px;\n    }\n    .sign {\n        text-align: right;\n        font-style: italic;\n    }\n      #page-visit {\n        display: none;\n    }\n    .center {\n        text-align: center;\n        height: 2.5em;\n        font-weight: bold;\n    }\n    .article-entry hr {\n        margin: 0;\n    }\n    .pic {\n        text-align: center;\n        margin: 0;\n    }\n    .pic br {\n          display: none;\n      }\n    #container .article-info-post.article-info {\n      display: none;\n      }\n    #container .article .article-title {\n    padding: 0;\n    }\n</style>","site":{"data":{}},"excerpt":"","more":"<style type=\"text/css\">\n    .article-header {\n        padding: 0;\n        padding-top: 26px;\n        border-left: none;\n        text-align: center;\n    }\n    .article-header:hover {\n        border-left: none;\n    }\n    .article-title {\n        font-size: 2.1em;\n    }\n    strong a {\n        color: #747474;\n    }\n    .article-meta {\n        display: none;\n    }\n    .share {\n        display: none;\n    }\n    .ds-meta {\n        display: none;\n    }\n    .player {\n        margin-left: -10px;\n    }\n    .sign {\n        text-align: right;\n        font-style: italic;\n    }\n      #page-visit {\n        display: none;\n    }\n    .center {\n        text-align: center;\n        height: 2.5em;\n        font-weight: bold;\n    }\n    .article-entry hr {\n        margin: 0;\n    }\n    .pic {\n        text-align: center;\n        margin: 0;\n    }\n    .pic br {\n          display: none;\n      }\n    #container .article-info-post.article-info {\n      display: none;\n      }\n    #container .article .article-title {\n    padding: 0;\n    }\n</style>"},{"title":"about me","date":"2017-10-31T06:24:25.000Z","_content":"Ename:   dale\nCname:   小虫子\nJob:   web developer\nQQ:    914397365\nWechat:   xcz426\nE-mail:   914397365@qq.com\n<div>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=409649817&auto=1&height=66\"></iframe>\n</div>\n","source":"about/index.md","raw":"---\ntitle: about me\ndate: 2017-10-31 14:24:25\n---\nEname:   dale\nCname:   小虫子\nJob:   web developer\nQQ:    914397365\nWechat:   xcz426\nE-mail:   914397365@qq.com\n<div>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=409649817&auto=1&height=66\"></iframe>\n</div>\n","updated":"2018-03-30T07:24:43.717Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjhuehz8f00017soocx2nf8aa","content":"<p>Ename:   dale<br>Cname:   小虫子<br>Job:   web developer<br>QQ:    914397365<br>Wechat:   xcz426<br>E-mail:   <a href=\"mailto:914397365@qq.com\" target=\"_blank\" rel=\"noopener\">914397365@qq.com</a></p>\n<div><br><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=409649817&auto=1&height=66\"></iframe><br></div>\n","site":{"data":{}},"excerpt":"","more":"<p>Ename:   dale<br>Cname:   小虫子<br>Job:   web developer<br>QQ:    914397365<br>Wechat:   xcz426<br>E-mail:   <a href=\"mailto:914397365@qq.com\" target=\"_blank\" rel=\"noopener\">914397365@qq.com</a></p>\n<div><br><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=409649817&auto=1&height=66\"></iframe><br></div>\n"},{"title":"tags&","date":"2015-10-19T22:49:50.000Z","type":"tags","comments":0,"_content":"\n\n","source":"tags/index.md","raw":"---\ntitle: tags&\ndate: 2015-10-20 06:49:50\ntype: \"tags\"\ncomments: false\n---\n\n\n","updated":"2018-03-30T07:24:43.772Z","path":"tags/index.html","layout":"page","_id":"cjhuehz8g00027sook8m7ny6h","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"hexo 命令集合","date":"2017-10-31T05:55:00.000Z","description":"hexo 操作的一些命令","_content":"<Contents>\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n$ hexo s\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### [发布]Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\nhttp://blog.csdn.net/qq_23435721/article/details/50997275\n\n### 添加搜索的方法\n\n``` bash\nnpm install hexo-generator-search --save\n```\n\nMore info: [站内搜索](http://moxfive.coding.me/yelee/2.Basic-Usage/local-site-search.html)\nMore info: [github地址](https://github.com/PaicHyperionDev/hexo-generator-search)\n\n### seo优化\n\n``` bash\nnpm install hexo-generator-sitemap --save\nnpm install hexo-generator-baidu-sitemap --save\n```\n\nMore info: [优化教程](http://blog.csdn.net/qq_23435721/article/details/50997275)\nMore info: [优化教程](http://www.jianshu.com/p/86557c34b671)\nMore info: [优化教程](http://www.arao.me/2015/hexo-next-theme-optimize-seo/)\n\n\n### 首页显示tag的两种方法\n\n1. 方法一\n```\ntitle: Hello World\ndate: 2000-12-03 00:00:00\n---\n<Excerpt in index | 首页摘要> \n+<!-- more -->\n<The rest of contents | 余下全文>\n```\n\n2. 方法二\n```\ntitle: Hello World\ndate: 2000-12-03 00:00:00\n+description: \"Welcome to Hexo! This is your very first post.\"\n---\n<Contents>\n```","source":"_posts/others/hexo-command.md","raw":"---\ntitle: hexo 命令集合\ndate: 2017-10-31 13:55:00\ndescription: \"hexo 操作的一些命令\"\n---\n<Contents>\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n$ hexo s\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### [发布]Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\nhttp://blog.csdn.net/qq_23435721/article/details/50997275\n\n### 添加搜索的方法\n\n``` bash\nnpm install hexo-generator-search --save\n```\n\nMore info: [站内搜索](http://moxfive.coding.me/yelee/2.Basic-Usage/local-site-search.html)\nMore info: [github地址](https://github.com/PaicHyperionDev/hexo-generator-search)\n\n### seo优化\n\n``` bash\nnpm install hexo-generator-sitemap --save\nnpm install hexo-generator-baidu-sitemap --save\n```\n\nMore info: [优化教程](http://blog.csdn.net/qq_23435721/article/details/50997275)\nMore info: [优化教程](http://www.jianshu.com/p/86557c34b671)\nMore info: [优化教程](http://www.arao.me/2015/hexo-next-theme-optimize-seo/)\n\n\n### 首页显示tag的两种方法\n\n1. 方法一\n```\ntitle: Hello World\ndate: 2000-12-03 00:00:00\n---\n<Excerpt in index | 首页摘要> \n+<!-- more -->\n<The rest of contents | 余下全文>\n```\n\n2. 方法二\n```\ntitle: Hello World\ndate: 2000-12-03 00:00:00\n+description: \"Welcome to Hexo! This is your very first post.\"\n---\n<Contents>\n```","slug":"others/hexo-command","published":1,"updated":"2018-03-30T07:24:43.715Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhuehz9100037soor90n6tdo","content":"<p><contents><br>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</contents></p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br><span class=\"line\">$ hexo s</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"发布-Deploy-to-remote-sites\"><a href=\"#发布-Deploy-to-remote-sites\" class=\"headerlink\" title=\"[发布]Deploy to remote sites\"></a>[发布]Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n<p><a href=\"http://blog.csdn.net/qq_23435721/article/details/50997275\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/qq_23435721/article/details/50997275</a></p>\n<h3 id=\"添加搜索的方法\"><a href=\"#添加搜索的方法\" class=\"headerlink\" title=\"添加搜索的方法\"></a>添加搜索的方法</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://moxfive.coding.me/yelee/2.Basic-Usage/local-site-search.html\" target=\"_blank\" rel=\"noopener\">站内搜索</a><br>More info: <a href=\"https://github.com/PaicHyperionDev/hexo-generator-search\" target=\"_blank\" rel=\"noopener\">github地址</a></p>\n<h3 id=\"seo优化\"><a href=\"#seo优化\" class=\"headerlink\" title=\"seo优化\"></a>seo优化</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-sitemap --save</span><br><span class=\"line\">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://blog.csdn.net/qq_23435721/article/details/50997275\" target=\"_blank\" rel=\"noopener\">优化教程</a><br>More info: <a href=\"http://www.jianshu.com/p/86557c34b671\" target=\"_blank\" rel=\"noopener\">优化教程</a><br>More info: <a href=\"http://www.arao.me/2015/hexo-next-theme-optimize-seo/\" target=\"_blank\" rel=\"noopener\">优化教程</a></p>\n<h3 id=\"首页显示tag的两种方法\"><a href=\"#首页显示tag的两种方法\" class=\"headerlink\" title=\"首页显示tag的两种方法\"></a>首页显示tag的两种方法</h3><ol>\n<li><p>方法一</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: Hello World</span><br><span class=\"line\">date: 2000-12-03 00:00:00</span><br><span class=\"line\">---</span><br><span class=\"line\">&lt;Excerpt in index | 首页摘要&gt; </span><br><span class=\"line\">+&lt;!-- more --&gt;</span><br><span class=\"line\">&lt;The rest of contents | 余下全文&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方法二</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: Hello World</span><br><span class=\"line\">date: 2000-12-03 00:00:00</span><br><span class=\"line\">+description: &quot;Welcome to Hexo! This is your very first post.&quot;</span><br><span class=\"line\">---</span><br><span class=\"line\">&lt;Contents&gt;</span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p><contents><br>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</contents></p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br><span class=\"line\">$ hexo s</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"发布-Deploy-to-remote-sites\"><a href=\"#发布-Deploy-to-remote-sites\" class=\"headerlink\" title=\"[发布]Deploy to remote sites\"></a>[发布]Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n<p><a href=\"http://blog.csdn.net/qq_23435721/article/details/50997275\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/qq_23435721/article/details/50997275</a></p>\n<h3 id=\"添加搜索的方法\"><a href=\"#添加搜索的方法\" class=\"headerlink\" title=\"添加搜索的方法\"></a>添加搜索的方法</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://moxfive.coding.me/yelee/2.Basic-Usage/local-site-search.html\" target=\"_blank\" rel=\"noopener\">站内搜索</a><br>More info: <a href=\"https://github.com/PaicHyperionDev/hexo-generator-search\" target=\"_blank\" rel=\"noopener\">github地址</a></p>\n<h3 id=\"seo优化\"><a href=\"#seo优化\" class=\"headerlink\" title=\"seo优化\"></a>seo优化</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-sitemap --save</span><br><span class=\"line\">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://blog.csdn.net/qq_23435721/article/details/50997275\" target=\"_blank\" rel=\"noopener\">优化教程</a><br>More info: <a href=\"http://www.jianshu.com/p/86557c34b671\" target=\"_blank\" rel=\"noopener\">优化教程</a><br>More info: <a href=\"http://www.arao.me/2015/hexo-next-theme-optimize-seo/\" target=\"_blank\" rel=\"noopener\">优化教程</a></p>\n<h3 id=\"首页显示tag的两种方法\"><a href=\"#首页显示tag的两种方法\" class=\"headerlink\" title=\"首页显示tag的两种方法\"></a>首页显示tag的两种方法</h3><ol>\n<li><p>方法一</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: Hello World</span><br><span class=\"line\">date: 2000-12-03 00:00:00</span><br><span class=\"line\">---</span><br><span class=\"line\">&lt;Excerpt in index | 首页摘要&gt; </span><br><span class=\"line\">+&lt;!-- more --&gt;</span><br><span class=\"line\">&lt;The rest of contents | 余下全文&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方法二</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: Hello World</span><br><span class=\"line\">date: 2000-12-03 00:00:00</span><br><span class=\"line\">+description: &quot;Welcome to Hexo! This is your very first post.&quot;</span><br><span class=\"line\">---</span><br><span class=\"line\">&lt;Contents&gt;</span><br></pre></td></tr></table></figure></li>\n</ol>\n"},{"title":"hexo配置","date":"2017-10-30T16:00:00.000Z","description":"Welcome to Hexo! This is your very first post.","_content":"<Contents>\n\n### hexo 创建一个新页面的方法\n\n命令  `hexo new layout title`\n> layout会默认使用scaffolds中的post模板来生成一个新页面\n\n简写命令 `hexo new 'title'`","source":"_posts/others/hexo.md","raw":"title: hexo配置\ndate: 2017-10-31 00:00:00\ndescription: \"Welcome to Hexo! This is your very first post.\"\n---\n<Contents>\n\n### hexo 创建一个新页面的方法\n\n命令  `hexo new layout title`\n> layout会默认使用scaffolds中的post模板来生成一个新页面\n\n简写命令 `hexo new 'title'`","slug":"others/hexo","published":1,"updated":"2018-04-12T10:33:51.639Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhuehz9500047soooz29fy2k","content":"<contents>\n\n<h3 id=\"hexo-创建一个新页面的方法\"><a href=\"#hexo-创建一个新页面的方法\" class=\"headerlink\" title=\"hexo 创建一个新页面的方法\"></a>hexo 创建一个新页面的方法</h3><p>命令  <code>hexo new layout title</code></p>\n<blockquote>\n<p>layout会默认使用scaffolds中的post模板来生成一个新页面</p>\n</blockquote>\n<p>简写命令 <code>hexo new &#39;title&#39;</code></p>\n</contents>","site":{"data":{}},"excerpt":"","more":"<contents>\n\n<h3 id=\"hexo-创建一个新页面的方法\"><a href=\"#hexo-创建一个新页面的方法\" class=\"headerlink\" title=\"hexo 创建一个新页面的方法\"></a>hexo 创建一个新页面的方法</h3><p>命令  <code>hexo new layout title</code></p>\n<blockquote>\n<p>layout会默认使用scaffolds中的post模板来生成一个新页面</p>\n</blockquote>\n<p>简写命令 <code>hexo new &#39;title&#39;</code></p>\n</contents>"},{"title":"经过了这么多年的努力，理想终于成了泡影---猎场经典台词","date":"2017-11-14T05:33:59.000Z","description":"时间是一个伟大的作者，它必将写出最完美的答案","_content":"\n经典歌曲 :   一场恋爱\n***\n<audio style=\"width: 500px\" autoplay=\"autoplay\" src=\"/public_s/mp3/a-love.mp3\" controls = \"controls\">\n你的浏览器暂不支持！\n</audio>\n<small style=\"color: #808080; font-size: 12px\">歌曲通过QQ音乐付费下载， 此处引用，如有侵权，联系删除 </small>\n\n***\nGod gives every individual life time is very limited, if we do not for their own destiny scurry, traces of life is too short.\n\n上天赋予每个生命个体的时间非常有限,若我们不为自己的命运疾走,生命的痕迹就显得太短浅了。\n<ol>\n\n<li> “如果记忆是一个罐头，我希望它永远不会过期”。 ----------引用自电影《重庆森林》</li>\n<li> “时间是一个伟大的作者，它必将写出最完美的答案”。 ---------引用自卓别林</li>\n<li> “山中何所有 ，岭上多白云”。 ----------------引用自陶弘景</li>\n\n</ol>\n\n\n</br>\n1. 岁月如刀，我似芹萝，时间太可怕了。\n\n2. 经过了这么多年的努力，理想终于成了泡影。\n\n3. 时间过得太快了 要是能倒着活就好了 所有的选择都是正确的人生就是满分——郑秋冬 \n\n4. 女人不仅是个伴，还能让我活得不那么糙。\n\n5. 女人，是可以改变生活的。谈情说爱很辛苦，而你好像总是在偷懒。\n\n6. 我能见证你们的成长，那是我人生之大幸你们不发财天理难容我的今天，就是你们的明天，所以你们一定要对自己有信心打鸡血，撒狗血，流鼻血，直到血脉偾张\n\n7. “退一步海阔天空”这话没错，“狭路相逢勇者胜”这话也没错，可它们的字面意思却是冲突的，人生就是体会矛盾的过程。     \n\n8. 只要你还没钻进坟墓里，一切就只是开始。\n\n9. 职介所是帮助没有工作的人找工作，人力资源是帮优秀的人找更适合的职位，也就是网罗高级人才或挖掘高端人才。\n\n10. 这不就是我吗,即便作为猎头的同行，我也要跟你谈谈，禁止游戏的法则。\n","source":"_posts/others/move-review-liechang.md","raw":"---\ntitle: 经过了这么多年的努力，理想终于成了泡影---猎场经典台词\ntags: [电视剧, 经典台词]\ncategories: [影视]\ndate: 2017-11-14 13:33:59\ndescription: 时间是一个伟大的作者，它必将写出最完美的答案\n---\n\n经典歌曲 :   一场恋爱\n***\n<audio style=\"width: 500px\" autoplay=\"autoplay\" src=\"/public_s/mp3/a-love.mp3\" controls = \"controls\">\n你的浏览器暂不支持！\n</audio>\n<small style=\"color: #808080; font-size: 12px\">歌曲通过QQ音乐付费下载， 此处引用，如有侵权，联系删除 </small>\n\n***\nGod gives every individual life time is very limited, if we do not for their own destiny scurry, traces of life is too short.\n\n上天赋予每个生命个体的时间非常有限,若我们不为自己的命运疾走,生命的痕迹就显得太短浅了。\n<ol>\n\n<li> “如果记忆是一个罐头，我希望它永远不会过期”。 ----------引用自电影《重庆森林》</li>\n<li> “时间是一个伟大的作者，它必将写出最完美的答案”。 ---------引用自卓别林</li>\n<li> “山中何所有 ，岭上多白云”。 ----------------引用自陶弘景</li>\n\n</ol>\n\n\n</br>\n1. 岁月如刀，我似芹萝，时间太可怕了。\n\n2. 经过了这么多年的努力，理想终于成了泡影。\n\n3. 时间过得太快了 要是能倒着活就好了 所有的选择都是正确的人生就是满分——郑秋冬 \n\n4. 女人不仅是个伴，还能让我活得不那么糙。\n\n5. 女人，是可以改变生活的。谈情说爱很辛苦，而你好像总是在偷懒。\n\n6. 我能见证你们的成长，那是我人生之大幸你们不发财天理难容我的今天，就是你们的明天，所以你们一定要对自己有信心打鸡血，撒狗血，流鼻血，直到血脉偾张\n\n7. “退一步海阔天空”这话没错，“狭路相逢勇者胜”这话也没错，可它们的字面意思却是冲突的，人生就是体会矛盾的过程。     \n\n8. 只要你还没钻进坟墓里，一切就只是开始。\n\n9. 职介所是帮助没有工作的人找工作，人力资源是帮优秀的人找更适合的职位，也就是网罗高级人才或挖掘高端人才。\n\n10. 这不就是我吗,即便作为猎头的同行，我也要跟你谈谈，禁止游戏的法则。\n","slug":"others/move-review-liechang","published":1,"updated":"2018-03-30T07:24:43.716Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhuehz9700057soot10nimzm","content":"<p>经典歌曲 :   一场恋爱</p>\n<hr>\n<p><audio style=\"width: 500px\" autoplay=\"autoplay\" src=\"/public_s/mp3/a-love.mp3\" controls=\"controls\"><br>你的浏览器暂不支持！<br></audio><br><small style=\"color: #808080; font-size: 12px\">歌曲通过QQ音乐付费下载， 此处引用，如有侵权，联系删除 </small></p>\n<hr>\n<p>God gives every individual life time is very limited, if we do not for their own destiny scurry, traces of life is too short.</p>\n<p>上天赋予每个生命个体的时间非常有限,若我们不为自己的命运疾走,生命的痕迹就显得太短浅了。</p>\n<ol><br><br><li> “如果记忆是一个罐头，我希望它永远不会过期”。 ———-引用自电影《重庆森林》</li><br><li> “时间是一个伟大的作者，它必将写出最完美的答案”。 ———引用自卓别林</li><br><li> “山中何所有 ，岭上多白云”。 —————-引用自陶弘景</li><br><br></ol>\n\n\n<p><br></p>\n<ol>\n<li><p>岁月如刀，我似芹萝，时间太可怕了。</p>\n</li>\n<li><p>经过了这么多年的努力，理想终于成了泡影。</p>\n</li>\n<li><p>时间过得太快了 要是能倒着活就好了 所有的选择都是正确的人生就是满分——郑秋冬 </p>\n</li>\n<li><p>女人不仅是个伴，还能让我活得不那么糙。</p>\n</li>\n<li><p>女人，是可以改变生活的。谈情说爱很辛苦，而你好像总是在偷懒。</p>\n</li>\n<li><p>我能见证你们的成长，那是我人生之大幸你们不发财天理难容我的今天，就是你们的明天，所以你们一定要对自己有信心打鸡血，撒狗血，流鼻血，直到血脉偾张</p>\n</li>\n<li><p>“退一步海阔天空”这话没错，“狭路相逢勇者胜”这话也没错，可它们的字面意思却是冲突的，人生就是体会矛盾的过程。     </p>\n</li>\n<li><p>只要你还没钻进坟墓里，一切就只是开始。</p>\n</li>\n<li><p>职介所是帮助没有工作的人找工作，人力资源是帮优秀的人找更适合的职位，也就是网罗高级人才或挖掘高端人才。</p>\n</li>\n<li><p>这不就是我吗,即便作为猎头的同行，我也要跟你谈谈，禁止游戏的法则。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>经典歌曲 :   一场恋爱</p>\n<hr>\n<p><audio style=\"width: 500px\" autoplay=\"autoplay\" src=\"/public_s/mp3/a-love.mp3\" controls=\"controls\"><br>你的浏览器暂不支持！<br></audio><br><small style=\"color: #808080; font-size: 12px\">歌曲通过QQ音乐付费下载， 此处引用，如有侵权，联系删除 </small></p>\n<hr>\n<p>God gives every individual life time is very limited, if we do not for their own destiny scurry, traces of life is too short.</p>\n<p>上天赋予每个生命个体的时间非常有限,若我们不为自己的命运疾走,生命的痕迹就显得太短浅了。</p>\n<ol><br><br><li> “如果记忆是一个罐头，我希望它永远不会过期”。 ———-引用自电影《重庆森林》</li><br><li> “时间是一个伟大的作者，它必将写出最完美的答案”。 ———引用自卓别林</li><br><li> “山中何所有 ，岭上多白云”。 —————-引用自陶弘景</li><br><br></ol>\n\n\n<p><br></p>\n<ol>\n<li><p>岁月如刀，我似芹萝，时间太可怕了。</p>\n</li>\n<li><p>经过了这么多年的努力，理想终于成了泡影。</p>\n</li>\n<li><p>时间过得太快了 要是能倒着活就好了 所有的选择都是正确的人生就是满分——郑秋冬 </p>\n</li>\n<li><p>女人不仅是个伴，还能让我活得不那么糙。</p>\n</li>\n<li><p>女人，是可以改变生活的。谈情说爱很辛苦，而你好像总是在偷懒。</p>\n</li>\n<li><p>我能见证你们的成长，那是我人生之大幸你们不发财天理难容我的今天，就是你们的明天，所以你们一定要对自己有信心打鸡血，撒狗血，流鼻血，直到血脉偾张</p>\n</li>\n<li><p>“退一步海阔天空”这话没错，“狭路相逢勇者胜”这话也没错，可它们的字面意思却是冲突的，人生就是体会矛盾的过程。     </p>\n</li>\n<li><p>只要你还没钻进坟墓里，一切就只是开始。</p>\n</li>\n<li><p>职介所是帮助没有工作的人找工作，人力资源是帮优秀的人找更适合的职位，也就是网罗高级人才或挖掘高端人才。</p>\n</li>\n<li><p>这不就是我吗,即便作为猎头的同行，我也要跟你谈谈，禁止游戏的法则。</p>\n</li>\n</ol>\n"},{"title":"first- on - githubpage","date":"2015-12-02T16:00:00.000Z","_content":"<Excerpt in index | 首页摘要> \n> 第一次搭建博客\n\n<!-- more -->\n<The rest of contents | 余下全文>\n\n## 正文开始、、、\n","source":"_posts/others/first-on-hexo.md","raw":"title: first- on - githubpage\ndate: 2015-12-03 00:00:00\ntags: [tag1,tag2,tag3]\n---\n<Excerpt in index | 首页摘要> \n> 第一次搭建博客\n\n<!-- more -->\n<The rest of contents | 余下全文>\n\n## 正文开始、、、\n","slug":"others/first-on-hexo","published":1,"updated":"2018-04-11T10:26:48.947Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhuehz9800067soo7ca34ai6","content":"<p><excerpt in=\"\" index=\"\" |=\"\" 首页摘要=\"\"> </excerpt></p>\n<blockquote>\n<p>第一次搭建博客</p>\n</blockquote>\n<a id=\"more\"></a>\n<the rest=\"\" of=\"\" contents=\"\" |=\"\" 余下全文=\"\">\n\n<h2 id=\"正文开始、、、\"><a href=\"#正文开始、、、\" class=\"headerlink\" title=\"正文开始、、、\"></a>正文开始、、、</h2></the>","site":{"data":{}},"excerpt":"<p><excerpt in=\"\" index=\"\" |=\"\" 首页摘要=\"\"> </excerpt></p>\n<blockquote>\n<p>第一次搭建博客</p>\n</blockquote>","more":"<the rest=\"\" of=\"\" contents=\"\" |=\"\" 余下全文=\"\">\n\n<h2 id=\"正文开始、、、\"><a href=\"#正文开始、、、\" class=\"headerlink\" title=\"正文开始、、、\"></a>正文开始、、、</h2></the>"},{"title":"我忘记了自己，却没忘记你！","date":"2017-10-31T16:00:00.000Z","description":"因为，那就是爱情本来的样子，这一切的一切，不为别的，只是因为爱情！","_content":"\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有一位老人找不到家了，他连自己的名字也忘记了，民警在他身上找到两样东西，一封40年前他写给爱人的信，和一张17年前爱人离世火化的证明。\n\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;信的落款是1977年4月30日，名字的落款是“生”，信的开头是“亲爱的馨”。根据图片和信的内容来推算，写这封信的时候，他的妻子“馨”应该是43岁。信中所写都是些家长里短，对爱人身体的关心，工作和生活的琐事。唯有信中有两处最感人的地方，一处是对爱人的称呼是`“您”`，一处是信的结尾，`“一切尚好，不要挂念，好好保重身体。”`经了解，老人名叫张连生，今年87岁，妻子名叫孙懿馨，2000年离世，享年66岁！\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一封40年前的信，一张17年前的火化证明，张老先生随身携带着这两样东西，尽管年事已高，忘却了很多往事，甚至是回家的路，却始终没忘了自己的爱人！我理解老人随身带着书信，是因为见字如面，但是为什么还带着一纸火化证明？我的妻子说，因为那是他爱人火化之前最后停留的地方！是的，17年前，张老先生看着爱人的遗体即将推进火化炉时，那是他看见爱人的最后一面，所有的爱都定格在了那一刻！从此，一封信，一张火化证明，就成为了爱人的全部，找不到回家的路不要紧，只要这两样东西在，老伴就在，家就在！\n\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我想，多数人看到这样的故事，都会被深深的感动！因为这样的爱情，如今已经不多见。男人不再长情却多情，女人不再痴情更绝情！我们表达爱情的词汇越来越丰富，方式越来越浪漫，但华丽的背后是苍白！陪伴是最长情的告白！你若不离不弃，我必生死相依！等等，这样的语句无数次感动我们，但感动过后，往往一切照旧！如同此时的正在听故事的你们，也一定感动得`潸然泪下`，可是泪水过后，又会有多少`实质性的改变`？\n\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;今天我讲述这个故事，并不只是要感动你们，那不是这个故事真正的意义。我想说的是，生活是由普普通通的每一天组成，吃喝拉撒上班下班，枯燥的循环往复是生活的大多数，激情与浪漫只是偶尔的点缀。因为一张火化证明，我们被老人的深情思念所打动，但是要知道，在他爱人逝去的这17年，老先生每天都是这样度过。因为一封书信，我们感动于老人们往日的恩爱如初，但几十年如一日的相敬如宾，我们又能否做到？\n\n\n\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**动人的爱情故事往往如此，一日的相爱是平凡，日复一日的相守是经典！观众们热泪盈眶，深受感动，但被感动很容易，要去付出感动对方却很难！主人公却并不觉得这有多么值得歌颂，因为他所做的这一切，既不为了感动对方，也不是为了感动自己，因为，那就是爱情本来的样子，`这一切的一切`，不为别的，`只是因为爱情` ！**\n\n本文转载自： [涂磊公众号](http://mp.weixin.qq.com/s/XeniC_LMro1fYJNrw-h3tg)\n\n<!-- ![图片](/public_s/images/mmexport1499932133535.jpeg) -->\n","source":"_posts/others/live-tulei-01.md","raw":"---\ntitle: 我忘记了自己，却没忘记你！\ndate: 2017-11-1 00:00:00\ndescription: \"因为，那就是爱情本来的样子，这一切的一切，不为别的，只是因为爱情！\"\ntags: [情感]\ncategories: [生活]\n---\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有一位老人找不到家了，他连自己的名字也忘记了，民警在他身上找到两样东西，一封40年前他写给爱人的信，和一张17年前爱人离世火化的证明。\n\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;信的落款是1977年4月30日，名字的落款是“生”，信的开头是“亲爱的馨”。根据图片和信的内容来推算，写这封信的时候，他的妻子“馨”应该是43岁。信中所写都是些家长里短，对爱人身体的关心，工作和生活的琐事。唯有信中有两处最感人的地方，一处是对爱人的称呼是`“您”`，一处是信的结尾，`“一切尚好，不要挂念，好好保重身体。”`经了解，老人名叫张连生，今年87岁，妻子名叫孙懿馨，2000年离世，享年66岁！\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一封40年前的信，一张17年前的火化证明，张老先生随身携带着这两样东西，尽管年事已高，忘却了很多往事，甚至是回家的路，却始终没忘了自己的爱人！我理解老人随身带着书信，是因为见字如面，但是为什么还带着一纸火化证明？我的妻子说，因为那是他爱人火化之前最后停留的地方！是的，17年前，张老先生看着爱人的遗体即将推进火化炉时，那是他看见爱人的最后一面，所有的爱都定格在了那一刻！从此，一封信，一张火化证明，就成为了爱人的全部，找不到回家的路不要紧，只要这两样东西在，老伴就在，家就在！\n\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我想，多数人看到这样的故事，都会被深深的感动！因为这样的爱情，如今已经不多见。男人不再长情却多情，女人不再痴情更绝情！我们表达爱情的词汇越来越丰富，方式越来越浪漫，但华丽的背后是苍白！陪伴是最长情的告白！你若不离不弃，我必生死相依！等等，这样的语句无数次感动我们，但感动过后，往往一切照旧！如同此时的正在听故事的你们，也一定感动得`潸然泪下`，可是泪水过后，又会有多少`实质性的改变`？\n\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;今天我讲述这个故事，并不只是要感动你们，那不是这个故事真正的意义。我想说的是，生活是由普普通通的每一天组成，吃喝拉撒上班下班，枯燥的循环往复是生活的大多数，激情与浪漫只是偶尔的点缀。因为一张火化证明，我们被老人的深情思念所打动，但是要知道，在他爱人逝去的这17年，老先生每天都是这样度过。因为一封书信，我们感动于老人们往日的恩爱如初，但几十年如一日的相敬如宾，我们又能否做到？\n\n\n\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**动人的爱情故事往往如此，一日的相爱是平凡，日复一日的相守是经典！观众们热泪盈眶，深受感动，但被感动很容易，要去付出感动对方却很难！主人公却并不觉得这有多么值得歌颂，因为他所做的这一切，既不为了感动对方，也不是为了感动自己，因为，那就是爱情本来的样子，`这一切的一切`，不为别的，`只是因为爱情` ！**\n\n本文转载自： [涂磊公众号](http://mp.weixin.qq.com/s/XeniC_LMro1fYJNrw-h3tg)\n\n<!-- ![图片](/public_s/images/mmexport1499932133535.jpeg) -->\n","slug":"others/live-tulei-01","published":1,"updated":"2018-03-30T07:24:43.716Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhuehz9d00097sookrwg67s0","content":"<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有一位老人找不到家了，他连自己的名字也忘记了，民警在他身上找到两样东西，一封40年前他写给爱人的信，和一张17年前爱人离世火化的证明。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;信的落款是1977年4月30日，名字的落款是“生”，信的开头是“亲爱的馨”。根据图片和信的内容来推算，写这封信的时候，他的妻子“馨”应该是43岁。信中所写都是些家长里短，对爱人身体的关心，工作和生活的琐事。唯有信中有两处最感人的地方，一处是对爱人的称呼是<code>“您”</code>，一处是信的结尾，<code>“一切尚好，不要挂念，好好保重身体。”</code>经了解，老人名叫张连生，今年87岁，妻子名叫孙懿馨，2000年离世，享年66岁！</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一封40年前的信，一张17年前的火化证明，张老先生随身携带着这两样东西，尽管年事已高，忘却了很多往事，甚至是回家的路，却始终没忘了自己的爱人！我理解老人随身带着书信，是因为见字如面，但是为什么还带着一纸火化证明？我的妻子说，因为那是他爱人火化之前最后停留的地方！是的，17年前，张老先生看着爱人的遗体即将推进火化炉时，那是他看见爱人的最后一面，所有的爱都定格在了那一刻！从此，一封信，一张火化证明，就成为了爱人的全部，找不到回家的路不要紧，只要这两样东西在，老伴就在，家就在！</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我想，多数人看到这样的故事，都会被深深的感动！因为这样的爱情，如今已经不多见。男人不再长情却多情，女人不再痴情更绝情！我们表达爱情的词汇越来越丰富，方式越来越浪漫，但华丽的背后是苍白！陪伴是最长情的告白！你若不离不弃，我必生死相依！等等，这样的语句无数次感动我们，但感动过后，往往一切照旧！如同此时的正在听故事的你们，也一定感动得<code>潸然泪下</code>，可是泪水过后，又会有多少<code>实质性的改变</code>？</p>\n<p> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;今天我讲述这个故事，并不只是要感动你们，那不是这个故事真正的意义。我想说的是，生活是由普普通通的每一天组成，吃喝拉撒上班下班，枯燥的循环往复是生活的大多数，激情与浪漫只是偶尔的点缀。因为一张火化证明，我们被老人的深情思念所打动，但是要知道，在他爱人逝去的这17年，老先生每天都是这样度过。因为一封书信，我们感动于老人们往日的恩爱如初，但几十年如一日的相敬如宾，我们又能否做到？</p>\n<p> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>动人的爱情故事往往如此，一日的相爱是平凡，日复一日的相守是经典！观众们热泪盈眶，深受感动，但被感动很容易，要去付出感动对方却很难！主人公却并不觉得这有多么值得歌颂，因为他所做的这一切，既不为了感动对方，也不是为了感动自己，因为，那就是爱情本来的样子，<code>这一切的一切</code>，不为别的，<code>只是因为爱情</code> ！</strong></p>\n<p>本文转载自： <a href=\"http://mp.weixin.qq.com/s/XeniC_LMro1fYJNrw-h3tg\" target=\"_blank\" rel=\"noopener\">涂磊公众号</a></p>\n<!-- ![图片](/public_s/images/mmexport1499932133535.jpeg) -->\n","site":{"data":{}},"excerpt":"","more":"<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有一位老人找不到家了，他连自己的名字也忘记了，民警在他身上找到两样东西，一封40年前他写给爱人的信，和一张17年前爱人离世火化的证明。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;信的落款是1977年4月30日，名字的落款是“生”，信的开头是“亲爱的馨”。根据图片和信的内容来推算，写这封信的时候，他的妻子“馨”应该是43岁。信中所写都是些家长里短，对爱人身体的关心，工作和生活的琐事。唯有信中有两处最感人的地方，一处是对爱人的称呼是<code>“您”</code>，一处是信的结尾，<code>“一切尚好，不要挂念，好好保重身体。”</code>经了解，老人名叫张连生，今年87岁，妻子名叫孙懿馨，2000年离世，享年66岁！</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一封40年前的信，一张17年前的火化证明，张老先生随身携带着这两样东西，尽管年事已高，忘却了很多往事，甚至是回家的路，却始终没忘了自己的爱人！我理解老人随身带着书信，是因为见字如面，但是为什么还带着一纸火化证明？我的妻子说，因为那是他爱人火化之前最后停留的地方！是的，17年前，张老先生看着爱人的遗体即将推进火化炉时，那是他看见爱人的最后一面，所有的爱都定格在了那一刻！从此，一封信，一张火化证明，就成为了爱人的全部，找不到回家的路不要紧，只要这两样东西在，老伴就在，家就在！</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我想，多数人看到这样的故事，都会被深深的感动！因为这样的爱情，如今已经不多见。男人不再长情却多情，女人不再痴情更绝情！我们表达爱情的词汇越来越丰富，方式越来越浪漫，但华丽的背后是苍白！陪伴是最长情的告白！你若不离不弃，我必生死相依！等等，这样的语句无数次感动我们，但感动过后，往往一切照旧！如同此时的正在听故事的你们，也一定感动得<code>潸然泪下</code>，可是泪水过后，又会有多少<code>实质性的改变</code>？</p>\n<p> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;今天我讲述这个故事，并不只是要感动你们，那不是这个故事真正的意义。我想说的是，生活是由普普通通的每一天组成，吃喝拉撒上班下班，枯燥的循环往复是生活的大多数，激情与浪漫只是偶尔的点缀。因为一张火化证明，我们被老人的深情思念所打动，但是要知道，在他爱人逝去的这17年，老先生每天都是这样度过。因为一封书信，我们感动于老人们往日的恩爱如初，但几十年如一日的相敬如宾，我们又能否做到？</p>\n<p> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>动人的爱情故事往往如此，一日的相爱是平凡，日复一日的相守是经典！观众们热泪盈眶，深受感动，但被感动很容易，要去付出感动对方却很难！主人公却并不觉得这有多么值得歌颂，因为他所做的这一切，既不为了感动对方，也不是为了感动自己，因为，那就是爱情本来的样子，<code>这一切的一切</code>，不为别的，<code>只是因为爱情</code> ！</strong></p>\n<p>本文转载自： <a href=\"http://mp.weixin.qq.com/s/XeniC_LMro1fYJNrw-h3tg\" target=\"_blank\" rel=\"noopener\">涂磊公众号</a></p>\n<!-- ![图片](/public_s/images/mmexport1499932133535.jpeg) -->\n"},{"title":"2018上半年学习资料整理&学习计划[5]","date":"2018-05-15T07:36:58.000Z","_content":"每天收集一点，每天学习一点\n\n<!-- more -->\n### 前端\n1. [印记中文网](https://docschina.org/)\n\n#### CSS\n\n1. [css3视频教程](http://www.php.cn/course/825.html)\n\n#### NestJS\n\n1. [NestJS中文网](https://docs.nestjs.cn/4.6/customdecorators)\n2. [验证器class-validator](https://github.com/typestack/class-validator)\n3. [数据库api](http://typeorm.io/#/select-query-builder)","source":"_posts/study/study2014-05.md","raw":"---\ntitle: 2018上半年学习资料整理&学习计划[5]\ntags: [学习计划]\ncategories: [学习]\ndate: 2018-05-15 15:36:58\n---\n每天收集一点，每天学习一点\n\n<!-- more -->\n### 前端\n1. [印记中文网](https://docschina.org/)\n\n#### CSS\n\n1. [css3视频教程](http://www.php.cn/course/825.html)\n\n#### NestJS\n\n1. [NestJS中文网](https://docs.nestjs.cn/4.6/customdecorators)\n2. [验证器class-validator](https://github.com/typestack/class-validator)\n3. [数据库api](http://typeorm.io/#/select-query-builder)","slug":"study/study2014-05","published":1,"updated":"2018-05-16T10:27:11.715Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhuehz9f000a7soovzmo9dg3","content":"<p>每天收集一点，每天学习一点</p>\n<a id=\"more\"></a>\n<h3 id=\"前端\"><a href=\"#前端\" class=\"headerlink\" title=\"前端\"></a>前端</h3><ol>\n<li><a href=\"https://docschina.org/\" target=\"_blank\" rel=\"noopener\">印记中文网</a></li>\n</ol>\n<h4 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h4><ol>\n<li><a href=\"http://www.php.cn/course/825.html\" target=\"_blank\" rel=\"noopener\">css3视频教程</a></li>\n</ol>\n<h4 id=\"NestJS\"><a href=\"#NestJS\" class=\"headerlink\" title=\"NestJS\"></a>NestJS</h4><ol>\n<li><a href=\"https://docs.nestjs.cn/4.6/customdecorators\" target=\"_blank\" rel=\"noopener\">NestJS中文网</a></li>\n<li><a href=\"https://github.com/typestack/class-validator\" target=\"_blank\" rel=\"noopener\">验证器class-validator</a></li>\n<li><a href=\"http://typeorm.io/#/select-query-builder\" target=\"_blank\" rel=\"noopener\">数据库api</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>每天收集一点，每天学习一点</p>","more":"<h3 id=\"前端\"><a href=\"#前端\" class=\"headerlink\" title=\"前端\"></a>前端</h3><ol>\n<li><a href=\"https://docschina.org/\" target=\"_blank\" rel=\"noopener\">印记中文网</a></li>\n</ol>\n<h4 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h4><ol>\n<li><a href=\"http://www.php.cn/course/825.html\" target=\"_blank\" rel=\"noopener\">css3视频教程</a></li>\n</ol>\n<h4 id=\"NestJS\"><a href=\"#NestJS\" class=\"headerlink\" title=\"NestJS\"></a>NestJS</h4><ol>\n<li><a href=\"https://docs.nestjs.cn/4.6/customdecorators\" target=\"_blank\" rel=\"noopener\">NestJS中文网</a></li>\n<li><a href=\"https://github.com/typestack/class-validator\" target=\"_blank\" rel=\"noopener\">验证器class-validator</a></li>\n<li><a href=\"http://typeorm.io/#/select-query-builder\" target=\"_blank\" rel=\"noopener\">数据库api</a></li>\n</ol>"},{"title":"非大型网站的SEO优化之路","date":"2018-05-31T07:57:16.000Z","_content":"网站常用的SEO优化方式\n\n<!-- more -->\n#### 简介\n\n1. SEO 搜索引擎优化 免费\n2. SEM 搜索引擎营销 收费\n\n#### SEO排名机制\n\n1. 搜索引擎蜘蛛\n2. 权重\n***\n### 权重提升\n#### SEO优化重要的三要素\n\n1. 标题\n2. 关键词   \n3. 描述\n\n#### 外链  -> 分类抓取进入数据库\n\n1. 外链 - 网站于网站之间的连接向导--通过链接去抓取\n2. 互联网是链接与链接实现的一条网络\n3. 与内容相近的网站交换\n4. 其他形式的交换， 例如-灌水式外链【在论坛，贴吧发布链接~】\n\n#### 内链 \n\n1. 页面链接 【文章关键字链接】-- 蜘蛛顺着链接爬来爬去抓取\n2. 优化本站质量、提高流量\n\n#### 内容质量\n\n1. 质量高能够提升权重\n2. 更新内容，增加匹配度-保持权重\n3. 原创 【抄袭， 洗稿子， 不长久，搜索引擎算法更新】\n4. 关键词密度 【2% -- 8%】 【ps：一篇文章内的关键词链接】\n\n#### 黑帽和沙盒\n\n1. 购买外链 【在淘宝等与权重高德网站交换外链】\n2. 垃圾站 【seqing - dubo 等非法大流量网站进行交换】【降权惩罚，关进沙盒，搜索引擎扔进小黑屋】\n3. 黑客行为 【攻击网站，恶意添加外链】\n\n#### 话术设置\n\nexample： \n    -- 原标题： 前端开发，如何才能高新就业\n    -- 修改话术后： 一个菜鸟前端的百万年薪之路\n\n#### 关键词的挖掘\n\n1. 头脑风暴\n\n2. 利用搜索引擎的相关搜索\n    - 与排名靠前的网站使用相同的关键字， 蹭热度；\n    - 参考相关搜索中的关键词， 调整网站的关键字；\n    \n3. 工具\n    - 工具-百度指数，对关键词查询\n4. 长尾关键词\n    - 使用关键词竞争对手少，但是也有一定量的关键词， 用户转换率高很多\n\n#### 域名的选择\n\n1. 后缀的选择\n    - .com商业性强，输入自动填入\n2. 短域名\n3. 域名语义化\n4. 域名的使用历史查询\n\n#### seo前端优化方案\n\n1. 代码去冗余 【精简代码、 模块化】\n2. 自动化【 工具 webpack~~~ 】\n3. Html语义化【 P标签, h标签 a标签】\n4. meat标签\n    -- keywords\n    -- description\n5. title标签\n\n#### 其他方式\n1. 站群推广\n    --相同类似的网站互相链接，推广\n***\n### 日子分析\n### 推广工具\n1. 百度推广\n2. 百度统计\n3. 百度指数\n4. CNZZ\n5. 爱站网\n6. 站长工具\n\n\n","source":"_posts/others/seo.md","raw":"---\ntitle: 非大型网站的SEO优化之路\ntags: [SEO]\ncategories: [学习]\ndate: 2018-05-31 15:57:16\n---\n网站常用的SEO优化方式\n\n<!-- more -->\n#### 简介\n\n1. SEO 搜索引擎优化 免费\n2. SEM 搜索引擎营销 收费\n\n#### SEO排名机制\n\n1. 搜索引擎蜘蛛\n2. 权重\n***\n### 权重提升\n#### SEO优化重要的三要素\n\n1. 标题\n2. 关键词   \n3. 描述\n\n#### 外链  -> 分类抓取进入数据库\n\n1. 外链 - 网站于网站之间的连接向导--通过链接去抓取\n2. 互联网是链接与链接实现的一条网络\n3. 与内容相近的网站交换\n4. 其他形式的交换， 例如-灌水式外链【在论坛，贴吧发布链接~】\n\n#### 内链 \n\n1. 页面链接 【文章关键字链接】-- 蜘蛛顺着链接爬来爬去抓取\n2. 优化本站质量、提高流量\n\n#### 内容质量\n\n1. 质量高能够提升权重\n2. 更新内容，增加匹配度-保持权重\n3. 原创 【抄袭， 洗稿子， 不长久，搜索引擎算法更新】\n4. 关键词密度 【2% -- 8%】 【ps：一篇文章内的关键词链接】\n\n#### 黑帽和沙盒\n\n1. 购买外链 【在淘宝等与权重高德网站交换外链】\n2. 垃圾站 【seqing - dubo 等非法大流量网站进行交换】【降权惩罚，关进沙盒，搜索引擎扔进小黑屋】\n3. 黑客行为 【攻击网站，恶意添加外链】\n\n#### 话术设置\n\nexample： \n    -- 原标题： 前端开发，如何才能高新就业\n    -- 修改话术后： 一个菜鸟前端的百万年薪之路\n\n#### 关键词的挖掘\n\n1. 头脑风暴\n\n2. 利用搜索引擎的相关搜索\n    - 与排名靠前的网站使用相同的关键字， 蹭热度；\n    - 参考相关搜索中的关键词， 调整网站的关键字；\n    \n3. 工具\n    - 工具-百度指数，对关键词查询\n4. 长尾关键词\n    - 使用关键词竞争对手少，但是也有一定量的关键词， 用户转换率高很多\n\n#### 域名的选择\n\n1. 后缀的选择\n    - .com商业性强，输入自动填入\n2. 短域名\n3. 域名语义化\n4. 域名的使用历史查询\n\n#### seo前端优化方案\n\n1. 代码去冗余 【精简代码、 模块化】\n2. 自动化【 工具 webpack~~~ 】\n3. Html语义化【 P标签, h标签 a标签】\n4. meat标签\n    -- keywords\n    -- description\n5. title标签\n\n#### 其他方式\n1. 站群推广\n    --相同类似的网站互相链接，推广\n***\n### 日子分析\n### 推广工具\n1. 百度推广\n2. 百度统计\n3. 百度指数\n4. CNZZ\n5. 爱站网\n6. 站长工具\n\n\n","slug":"others/seo","published":1,"updated":"2018-05-31T10:03:39.965Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhuehz9h000b7sooeb35vwvt","content":"<p>网站常用的SEO优化方式</p>\n<a id=\"more\"></a>\n<h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><ol>\n<li>SEO 搜索引擎优化 免费</li>\n<li>SEM 搜索引擎营销 收费</li>\n</ol>\n<h4 id=\"SEO排名机制\"><a href=\"#SEO排名机制\" class=\"headerlink\" title=\"SEO排名机制\"></a>SEO排名机制</h4><ol>\n<li>搜索引擎蜘蛛</li>\n<li>权重</li>\n</ol>\n<hr>\n<h3 id=\"权重提升\"><a href=\"#权重提升\" class=\"headerlink\" title=\"权重提升\"></a>权重提升</h3><h4 id=\"SEO优化重要的三要素\"><a href=\"#SEO优化重要的三要素\" class=\"headerlink\" title=\"SEO优化重要的三要素\"></a>SEO优化重要的三要素</h4><ol>\n<li>标题</li>\n<li>关键词   </li>\n<li>描述</li>\n</ol>\n<h4 id=\"外链-gt-分类抓取进入数据库\"><a href=\"#外链-gt-分类抓取进入数据库\" class=\"headerlink\" title=\"外链  -&gt; 分类抓取进入数据库\"></a>外链  -&gt; 分类抓取进入数据库</h4><ol>\n<li>外链 - 网站于网站之间的连接向导–通过链接去抓取</li>\n<li>互联网是链接与链接实现的一条网络</li>\n<li>与内容相近的网站交换</li>\n<li>其他形式的交换， 例如-灌水式外链【在论坛，贴吧发布链接~】</li>\n</ol>\n<h4 id=\"内链\"><a href=\"#内链\" class=\"headerlink\" title=\"内链\"></a>内链</h4><ol>\n<li>页面链接 【文章关键字链接】– 蜘蛛顺着链接爬来爬去抓取</li>\n<li>优化本站质量、提高流量</li>\n</ol>\n<h4 id=\"内容质量\"><a href=\"#内容质量\" class=\"headerlink\" title=\"内容质量\"></a>内容质量</h4><ol>\n<li>质量高能够提升权重</li>\n<li>更新内容，增加匹配度-保持权重</li>\n<li>原创 【抄袭， 洗稿子， 不长久，搜索引擎算法更新】</li>\n<li>关键词密度 【2% – 8%】 【ps：一篇文章内的关键词链接】</li>\n</ol>\n<h4 id=\"黑帽和沙盒\"><a href=\"#黑帽和沙盒\" class=\"headerlink\" title=\"黑帽和沙盒\"></a>黑帽和沙盒</h4><ol>\n<li>购买外链 【在淘宝等与权重高德网站交换外链】</li>\n<li>垃圾站 【seqing - dubo 等非法大流量网站进行交换】【降权惩罚，关进沙盒，搜索引擎扔进小黑屋】</li>\n<li>黑客行为 【攻击网站，恶意添加外链】</li>\n</ol>\n<h4 id=\"话术设置\"><a href=\"#话术设置\" class=\"headerlink\" title=\"话术设置\"></a>话术设置</h4><p>example：<br>    – 原标题： 前端开发，如何才能高新就业<br>    – 修改话术后： 一个菜鸟前端的百万年薪之路</p>\n<h4 id=\"关键词的挖掘\"><a href=\"#关键词的挖掘\" class=\"headerlink\" title=\"关键词的挖掘\"></a>关键词的挖掘</h4><ol>\n<li><p>头脑风暴</p>\n</li>\n<li><p>利用搜索引擎的相关搜索</p>\n<ul>\n<li>与排名靠前的网站使用相同的关键字， 蹭热度；</li>\n<li>参考相关搜索中的关键词， 调整网站的关键字；</li>\n</ul>\n</li>\n<li><p>工具</p>\n<ul>\n<li>工具-百度指数，对关键词查询</li>\n</ul>\n</li>\n<li>长尾关键词<ul>\n<li>使用关键词竞争对手少，但是也有一定量的关键词， 用户转换率高很多</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"域名的选择\"><a href=\"#域名的选择\" class=\"headerlink\" title=\"域名的选择\"></a>域名的选择</h4><ol>\n<li>后缀的选择<ul>\n<li>.com商业性强，输入自动填入</li>\n</ul>\n</li>\n<li>短域名</li>\n<li>域名语义化</li>\n<li>域名的使用历史查询</li>\n</ol>\n<h4 id=\"seo前端优化方案\"><a href=\"#seo前端优化方案\" class=\"headerlink\" title=\"seo前端优化方案\"></a>seo前端优化方案</h4><ol>\n<li>代码去冗余 【精简代码、 模块化】</li>\n<li>自动化【 工具 webpack~~~ 】</li>\n<li>Html语义化【 P标签, h标签 a标签】</li>\n<li>meat标签<br> – keywords<br> – description</li>\n<li>title标签</li>\n</ol>\n<h4 id=\"其他方式\"><a href=\"#其他方式\" class=\"headerlink\" title=\"其他方式\"></a>其他方式</h4><ol>\n<li>站群推广<br> –相同类似的网站互相链接，推广</li>\n</ol>\n<hr>\n<h3 id=\"日子分析\"><a href=\"#日子分析\" class=\"headerlink\" title=\"日子分析\"></a>日子分析</h3><h3 id=\"推广工具\"><a href=\"#推广工具\" class=\"headerlink\" title=\"推广工具\"></a>推广工具</h3><ol>\n<li>百度推广</li>\n<li>百度统计</li>\n<li>百度指数</li>\n<li>CNZZ</li>\n<li>爱站网</li>\n<li>站长工具</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>网站常用的SEO优化方式</p>","more":"<h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><ol>\n<li>SEO 搜索引擎优化 免费</li>\n<li>SEM 搜索引擎营销 收费</li>\n</ol>\n<h4 id=\"SEO排名机制\"><a href=\"#SEO排名机制\" class=\"headerlink\" title=\"SEO排名机制\"></a>SEO排名机制</h4><ol>\n<li>搜索引擎蜘蛛</li>\n<li>权重</li>\n</ol>\n<hr>\n<h3 id=\"权重提升\"><a href=\"#权重提升\" class=\"headerlink\" title=\"权重提升\"></a>权重提升</h3><h4 id=\"SEO优化重要的三要素\"><a href=\"#SEO优化重要的三要素\" class=\"headerlink\" title=\"SEO优化重要的三要素\"></a>SEO优化重要的三要素</h4><ol>\n<li>标题</li>\n<li>关键词   </li>\n<li>描述</li>\n</ol>\n<h4 id=\"外链-gt-分类抓取进入数据库\"><a href=\"#外链-gt-分类抓取进入数据库\" class=\"headerlink\" title=\"外链  -&gt; 分类抓取进入数据库\"></a>外链  -&gt; 分类抓取进入数据库</h4><ol>\n<li>外链 - 网站于网站之间的连接向导–通过链接去抓取</li>\n<li>互联网是链接与链接实现的一条网络</li>\n<li>与内容相近的网站交换</li>\n<li>其他形式的交换， 例如-灌水式外链【在论坛，贴吧发布链接~】</li>\n</ol>\n<h4 id=\"内链\"><a href=\"#内链\" class=\"headerlink\" title=\"内链\"></a>内链</h4><ol>\n<li>页面链接 【文章关键字链接】– 蜘蛛顺着链接爬来爬去抓取</li>\n<li>优化本站质量、提高流量</li>\n</ol>\n<h4 id=\"内容质量\"><a href=\"#内容质量\" class=\"headerlink\" title=\"内容质量\"></a>内容质量</h4><ol>\n<li>质量高能够提升权重</li>\n<li>更新内容，增加匹配度-保持权重</li>\n<li>原创 【抄袭， 洗稿子， 不长久，搜索引擎算法更新】</li>\n<li>关键词密度 【2% – 8%】 【ps：一篇文章内的关键词链接】</li>\n</ol>\n<h4 id=\"黑帽和沙盒\"><a href=\"#黑帽和沙盒\" class=\"headerlink\" title=\"黑帽和沙盒\"></a>黑帽和沙盒</h4><ol>\n<li>购买外链 【在淘宝等与权重高德网站交换外链】</li>\n<li>垃圾站 【seqing - dubo 等非法大流量网站进行交换】【降权惩罚，关进沙盒，搜索引擎扔进小黑屋】</li>\n<li>黑客行为 【攻击网站，恶意添加外链】</li>\n</ol>\n<h4 id=\"话术设置\"><a href=\"#话术设置\" class=\"headerlink\" title=\"话术设置\"></a>话术设置</h4><p>example：<br>    – 原标题： 前端开发，如何才能高新就业<br>    – 修改话术后： 一个菜鸟前端的百万年薪之路</p>\n<h4 id=\"关键词的挖掘\"><a href=\"#关键词的挖掘\" class=\"headerlink\" title=\"关键词的挖掘\"></a>关键词的挖掘</h4><ol>\n<li><p>头脑风暴</p>\n</li>\n<li><p>利用搜索引擎的相关搜索</p>\n<ul>\n<li>与排名靠前的网站使用相同的关键字， 蹭热度；</li>\n<li>参考相关搜索中的关键词， 调整网站的关键字；</li>\n</ul>\n</li>\n<li><p>工具</p>\n<ul>\n<li>工具-百度指数，对关键词查询</li>\n</ul>\n</li>\n<li>长尾关键词<ul>\n<li>使用关键词竞争对手少，但是也有一定量的关键词， 用户转换率高很多</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"域名的选择\"><a href=\"#域名的选择\" class=\"headerlink\" title=\"域名的选择\"></a>域名的选择</h4><ol>\n<li>后缀的选择<ul>\n<li>.com商业性强，输入自动填入</li>\n</ul>\n</li>\n<li>短域名</li>\n<li>域名语义化</li>\n<li>域名的使用历史查询</li>\n</ol>\n<h4 id=\"seo前端优化方案\"><a href=\"#seo前端优化方案\" class=\"headerlink\" title=\"seo前端优化方案\"></a>seo前端优化方案</h4><ol>\n<li>代码去冗余 【精简代码、 模块化】</li>\n<li>自动化【 工具 webpack~~~ 】</li>\n<li>Html语义化【 P标签, h标签 a标签】</li>\n<li>meat标签<br> – keywords<br> – description</li>\n<li>title标签</li>\n</ol>\n<h4 id=\"其他方式\"><a href=\"#其他方式\" class=\"headerlink\" title=\"其他方式\"></a>其他方式</h4><ol>\n<li>站群推广<br> –相同类似的网站互相链接，推广</li>\n</ol>\n<hr>\n<h3 id=\"日子分析\"><a href=\"#日子分析\" class=\"headerlink\" title=\"日子分析\"></a>日子分析</h3><h3 id=\"推广工具\"><a href=\"#推广工具\" class=\"headerlink\" title=\"推广工具\"></a>推广工具</h3><ol>\n<li>百度推广</li>\n<li>百度统计</li>\n<li>百度指数</li>\n<li>CNZZ</li>\n<li>爱站网</li>\n<li>站长工具</li>\n</ol>"},{"title":"阮一峰：时间管理的七句话","date":"2017-11-24T01:49:58.000Z","_content":"时间对每一个人来说都是重要的，学会管理时间；\n\n<!-- more -->\n\n### 一、 进程切换非常昂贵，避免多任务，保持单进程。\n\n![图片](/public_s/images/timeManage/0.5021243947689109.png)\n\n不要同时做多件事，结果可能都没做好，还拖长了工作时间。\n\n\n上图是多任务状态和单进程状态的对比，可以看到，多任务状态会花费更多的时间。\n\n###  二、研究表明，集中注意力、高效工作，每天最多4小时。\n\n![图片](/public_s/images/timeManage/0.9251521097293676.png)\n\n一个人能够集中注意力的时间，是有限的。一般来说，高效工作只能持续四个小时，其余时间就都是低效工作了。\n\n上图左侧是大多数人每天的时间分配，如果你能保证4个小时都高效工作，那么完全可以变成右侧的时间分配。\n\n### 三、划分任务的优先级，不要把’急切’当作’重要’。\n![图片](/public_s/images/timeManage/0.530341774969219.png)\n\n你的时间有限，不可能做所有事。最重要的事，应该首先做。（推荐阅读《什么是重要的事情？》）\n\n一个有用的技巧是，将所有任务按照、重要性、和紧急性两个维度，分成四个象限。第一象限优先级最高，第四象限最低。\n\n### 四、起床后，不要查看邮件和微信。\n![图片](/public_s/images/timeManage/0.1174553194175334.png)\n\n早晨精力最充沛，消耗在邮件和微信就太可惜了，应该用来做更重要的事。而且，邮件代表对别人优先级高，不等于对你优先级高。你的时间到底属于谁？你自己，还是某个给你写信的人？（推荐阅读《为什么起床后不能收邮件？》）\n\n### 五、避免开会，因为人类已知的最浪费时间的事情，就是开会。\n![图片](/public_s/images/timeManage/0.46321933528434545.png)\n\n越大的公司，越无法避免开会。但至少不要参加与你无关的会。站着开会，也许是一个缩短会议时间的好办法。\n\n### 六、早晨4点起床，到了中午，你就完成了一天的任务。\n![图片](/public_s/images/timeManage/0.7242512129749097.png)\n\n早晨4点起床开始工作，你会发现每天的时间多出了好多。有个日本人写了一本书《四点起床》，就是讲这个观点。\n\n### 七、你没空时不会做的事情，有空了也不会做。\n![图片](/public_s/images/timeManage/0.419097318675272.png)\n\n\n\n世上并没有拖延症，只是不想做而已。如果可能，应该尽早放弃你没有意愿去做的那些事。而那些没有时间也会去做的事，才是你应该全力以赴的人生方向。\n\n来源： http://www.techug.com/post/time-management.html","source":"_posts/others/time-manage.md","raw":"---\ntitle: 阮一峰：时间管理的七句话\ntags: [励志]\ncategories: [生活]\ndate: 2017-11-24 09:49:58\n---\n时间对每一个人来说都是重要的，学会管理时间；\n\n<!-- more -->\n\n### 一、 进程切换非常昂贵，避免多任务，保持单进程。\n\n![图片](/public_s/images/timeManage/0.5021243947689109.png)\n\n不要同时做多件事，结果可能都没做好，还拖长了工作时间。\n\n\n上图是多任务状态和单进程状态的对比，可以看到，多任务状态会花费更多的时间。\n\n###  二、研究表明，集中注意力、高效工作，每天最多4小时。\n\n![图片](/public_s/images/timeManage/0.9251521097293676.png)\n\n一个人能够集中注意力的时间，是有限的。一般来说，高效工作只能持续四个小时，其余时间就都是低效工作了。\n\n上图左侧是大多数人每天的时间分配，如果你能保证4个小时都高效工作，那么完全可以变成右侧的时间分配。\n\n### 三、划分任务的优先级，不要把’急切’当作’重要’。\n![图片](/public_s/images/timeManage/0.530341774969219.png)\n\n你的时间有限，不可能做所有事。最重要的事，应该首先做。（推荐阅读《什么是重要的事情？》）\n\n一个有用的技巧是，将所有任务按照、重要性、和紧急性两个维度，分成四个象限。第一象限优先级最高，第四象限最低。\n\n### 四、起床后，不要查看邮件和微信。\n![图片](/public_s/images/timeManage/0.1174553194175334.png)\n\n早晨精力最充沛，消耗在邮件和微信就太可惜了，应该用来做更重要的事。而且，邮件代表对别人优先级高，不等于对你优先级高。你的时间到底属于谁？你自己，还是某个给你写信的人？（推荐阅读《为什么起床后不能收邮件？》）\n\n### 五、避免开会，因为人类已知的最浪费时间的事情，就是开会。\n![图片](/public_s/images/timeManage/0.46321933528434545.png)\n\n越大的公司，越无法避免开会。但至少不要参加与你无关的会。站着开会，也许是一个缩短会议时间的好办法。\n\n### 六、早晨4点起床，到了中午，你就完成了一天的任务。\n![图片](/public_s/images/timeManage/0.7242512129749097.png)\n\n早晨4点起床开始工作，你会发现每天的时间多出了好多。有个日本人写了一本书《四点起床》，就是讲这个观点。\n\n### 七、你没空时不会做的事情，有空了也不会做。\n![图片](/public_s/images/timeManage/0.419097318675272.png)\n\n\n\n世上并没有拖延症，只是不想做而已。如果可能，应该尽早放弃你没有意愿去做的那些事。而那些没有时间也会去做的事，才是你应该全力以赴的人生方向。\n\n来源： http://www.techug.com/post/time-management.html","slug":"others/time-manage","published":1,"updated":"2018-03-30T07:24:43.717Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhuehza9000y7soo3ptfts5e","content":"<p>时间对每一个人来说都是重要的，学会管理时间；</p>\n<a id=\"more\"></a>\n<h3 id=\"一、-进程切换非常昂贵，避免多任务，保持单进程。\"><a href=\"#一、-进程切换非常昂贵，避免多任务，保持单进程。\" class=\"headerlink\" title=\"一、 进程切换非常昂贵，避免多任务，保持单进程。\"></a>一、 进程切换非常昂贵，避免多任务，保持单进程。</h3><p><img src=\"/public_s/images/timeManage/0.5021243947689109.png\" alt=\"图片\"></p>\n<p>不要同时做多件事，结果可能都没做好，还拖长了工作时间。</p>\n<p>上图是多任务状态和单进程状态的对比，可以看到，多任务状态会花费更多的时间。</p>\n<h3 id=\"二、研究表明，集中注意力、高效工作，每天最多4小时。\"><a href=\"#二、研究表明，集中注意力、高效工作，每天最多4小时。\" class=\"headerlink\" title=\"二、研究表明，集中注意力、高效工作，每天最多4小时。\"></a>二、研究表明，集中注意力、高效工作，每天最多4小时。</h3><p><img src=\"/public_s/images/timeManage/0.9251521097293676.png\" alt=\"图片\"></p>\n<p>一个人能够集中注意力的时间，是有限的。一般来说，高效工作只能持续四个小时，其余时间就都是低效工作了。</p>\n<p>上图左侧是大多数人每天的时间分配，如果你能保证4个小时都高效工作，那么完全可以变成右侧的时间分配。</p>\n<h3 id=\"三、划分任务的优先级，不要把’急切’当作’重要’。\"><a href=\"#三、划分任务的优先级，不要把’急切’当作’重要’。\" class=\"headerlink\" title=\"三、划分任务的优先级，不要把’急切’当作’重要’。\"></a>三、划分任务的优先级，不要把’急切’当作’重要’。</h3><p><img src=\"/public_s/images/timeManage/0.530341774969219.png\" alt=\"图片\"></p>\n<p>你的时间有限，不可能做所有事。最重要的事，应该首先做。（推荐阅读《什么是重要的事情？》）</p>\n<p>一个有用的技巧是，将所有任务按照、重要性、和紧急性两个维度，分成四个象限。第一象限优先级最高，第四象限最低。</p>\n<h3 id=\"四、起床后，不要查看邮件和微信。\"><a href=\"#四、起床后，不要查看邮件和微信。\" class=\"headerlink\" title=\"四、起床后，不要查看邮件和微信。\"></a>四、起床后，不要查看邮件和微信。</h3><p><img src=\"/public_s/images/timeManage/0.1174553194175334.png\" alt=\"图片\"></p>\n<p>早晨精力最充沛，消耗在邮件和微信就太可惜了，应该用来做更重要的事。而且，邮件代表对别人优先级高，不等于对你优先级高。你的时间到底属于谁？你自己，还是某个给你写信的人？（推荐阅读《为什么起床后不能收邮件？》）</p>\n<h3 id=\"五、避免开会，因为人类已知的最浪费时间的事情，就是开会。\"><a href=\"#五、避免开会，因为人类已知的最浪费时间的事情，就是开会。\" class=\"headerlink\" title=\"五、避免开会，因为人类已知的最浪费时间的事情，就是开会。\"></a>五、避免开会，因为人类已知的最浪费时间的事情，就是开会。</h3><p><img src=\"/public_s/images/timeManage/0.46321933528434545.png\" alt=\"图片\"></p>\n<p>越大的公司，越无法避免开会。但至少不要参加与你无关的会。站着开会，也许是一个缩短会议时间的好办法。</p>\n<h3 id=\"六、早晨4点起床，到了中午，你就完成了一天的任务。\"><a href=\"#六、早晨4点起床，到了中午，你就完成了一天的任务。\" class=\"headerlink\" title=\"六、早晨4点起床，到了中午，你就完成了一天的任务。\"></a>六、早晨4点起床，到了中午，你就完成了一天的任务。</h3><p><img src=\"/public_s/images/timeManage/0.7242512129749097.png\" alt=\"图片\"></p>\n<p>早晨4点起床开始工作，你会发现每天的时间多出了好多。有个日本人写了一本书《四点起床》，就是讲这个观点。</p>\n<h3 id=\"七、你没空时不会做的事情，有空了也不会做。\"><a href=\"#七、你没空时不会做的事情，有空了也不会做。\" class=\"headerlink\" title=\"七、你没空时不会做的事情，有空了也不会做。\"></a>七、你没空时不会做的事情，有空了也不会做。</h3><p><img src=\"/public_s/images/timeManage/0.419097318675272.png\" alt=\"图片\"></p>\n<p>世上并没有拖延症，只是不想做而已。如果可能，应该尽早放弃你没有意愿去做的那些事。而那些没有时间也会去做的事，才是你应该全力以赴的人生方向。</p>\n<p>来源： <a href=\"http://www.techug.com/post/time-management.html\" target=\"_blank\" rel=\"noopener\">http://www.techug.com/post/time-management.html</a></p>\n","site":{"data":{}},"excerpt":"<p>时间对每一个人来说都是重要的，学会管理时间；</p>","more":"<h3 id=\"一、-进程切换非常昂贵，避免多任务，保持单进程。\"><a href=\"#一、-进程切换非常昂贵，避免多任务，保持单进程。\" class=\"headerlink\" title=\"一、 进程切换非常昂贵，避免多任务，保持单进程。\"></a>一、 进程切换非常昂贵，避免多任务，保持单进程。</h3><p><img src=\"/public_s/images/timeManage/0.5021243947689109.png\" alt=\"图片\"></p>\n<p>不要同时做多件事，结果可能都没做好，还拖长了工作时间。</p>\n<p>上图是多任务状态和单进程状态的对比，可以看到，多任务状态会花费更多的时间。</p>\n<h3 id=\"二、研究表明，集中注意力、高效工作，每天最多4小时。\"><a href=\"#二、研究表明，集中注意力、高效工作，每天最多4小时。\" class=\"headerlink\" title=\"二、研究表明，集中注意力、高效工作，每天最多4小时。\"></a>二、研究表明，集中注意力、高效工作，每天最多4小时。</h3><p><img src=\"/public_s/images/timeManage/0.9251521097293676.png\" alt=\"图片\"></p>\n<p>一个人能够集中注意力的时间，是有限的。一般来说，高效工作只能持续四个小时，其余时间就都是低效工作了。</p>\n<p>上图左侧是大多数人每天的时间分配，如果你能保证4个小时都高效工作，那么完全可以变成右侧的时间分配。</p>\n<h3 id=\"三、划分任务的优先级，不要把’急切’当作’重要’。\"><a href=\"#三、划分任务的优先级，不要把’急切’当作’重要’。\" class=\"headerlink\" title=\"三、划分任务的优先级，不要把’急切’当作’重要’。\"></a>三、划分任务的优先级，不要把’急切’当作’重要’。</h3><p><img src=\"/public_s/images/timeManage/0.530341774969219.png\" alt=\"图片\"></p>\n<p>你的时间有限，不可能做所有事。最重要的事，应该首先做。（推荐阅读《什么是重要的事情？》）</p>\n<p>一个有用的技巧是，将所有任务按照、重要性、和紧急性两个维度，分成四个象限。第一象限优先级最高，第四象限最低。</p>\n<h3 id=\"四、起床后，不要查看邮件和微信。\"><a href=\"#四、起床后，不要查看邮件和微信。\" class=\"headerlink\" title=\"四、起床后，不要查看邮件和微信。\"></a>四、起床后，不要查看邮件和微信。</h3><p><img src=\"/public_s/images/timeManage/0.1174553194175334.png\" alt=\"图片\"></p>\n<p>早晨精力最充沛，消耗在邮件和微信就太可惜了，应该用来做更重要的事。而且，邮件代表对别人优先级高，不等于对你优先级高。你的时间到底属于谁？你自己，还是某个给你写信的人？（推荐阅读《为什么起床后不能收邮件？》）</p>\n<h3 id=\"五、避免开会，因为人类已知的最浪费时间的事情，就是开会。\"><a href=\"#五、避免开会，因为人类已知的最浪费时间的事情，就是开会。\" class=\"headerlink\" title=\"五、避免开会，因为人类已知的最浪费时间的事情，就是开会。\"></a>五、避免开会，因为人类已知的最浪费时间的事情，就是开会。</h3><p><img src=\"/public_s/images/timeManage/0.46321933528434545.png\" alt=\"图片\"></p>\n<p>越大的公司，越无法避免开会。但至少不要参加与你无关的会。站着开会，也许是一个缩短会议时间的好办法。</p>\n<h3 id=\"六、早晨4点起床，到了中午，你就完成了一天的任务。\"><a href=\"#六、早晨4点起床，到了中午，你就完成了一天的任务。\" class=\"headerlink\" title=\"六、早晨4点起床，到了中午，你就完成了一天的任务。\"></a>六、早晨4点起床，到了中午，你就完成了一天的任务。</h3><p><img src=\"/public_s/images/timeManage/0.7242512129749097.png\" alt=\"图片\"></p>\n<p>早晨4点起床开始工作，你会发现每天的时间多出了好多。有个日本人写了一本书《四点起床》，就是讲这个观点。</p>\n<h3 id=\"七、你没空时不会做的事情，有空了也不会做。\"><a href=\"#七、你没空时不会做的事情，有空了也不会做。\" class=\"headerlink\" title=\"七、你没空时不会做的事情，有空了也不会做。\"></a>七、你没空时不会做的事情，有空了也不会做。</h3><p><img src=\"/public_s/images/timeManage/0.419097318675272.png\" alt=\"图片\"></p>\n<p>世上并没有拖延症，只是不想做而已。如果可能，应该尽早放弃你没有意愿去做的那些事。而那些没有时间也会去做的事，才是你应该全力以赴的人生方向。</p>\n<p>来源： <a href=\"http://www.techug.com/post/time-management.html\" target=\"_blank\" rel=\"noopener\">http://www.techug.com/post/time-management.html</a></p>"},{"title":"2018上半年学习资料整理&学习计划[4]","date":"2018-04-08T07:36:58.000Z","_content":"每天收集一点，每天学习一点\n\n<!-- more -->\n#### 小程序\n\n1. [小程序登录鉴权-手把手](https://juejin.im/post/5ac9b72cf265da23906c486a)\n\n#### node.js --express\n\n0. [node社区](https://cnodejs.org/)\n1. [express入门指南](http://www.expressjs.com.cn/)\n\n#### Promise\n\n2. [Promise 迷你书](http://liubin.org/promises-book/#ch2-promise-resolve)\n3. [理解 Promise 的工作原理](https://cnodejs.org/topic/569c8226adf526da2aeb23fd)\n4. [Node.js最新技术栈之Promise篇](https://cnodejs.org/topic/560dbc826a1ed28204a1e7de)\n\n#### axios\n\n1. [axios中文文档](https://www.kancloud.cn/yunye/axios/234845)\n\n#### css\n\n1. [css探索之旅](http://blog.doyoe.com/)\n2. [Web前端实验室](http://demo.doyoe.com/)\n3. [在线阴影生成方法](http://www.css88.com/tool/css3Preview/Box-Shadow.html)\n4. [CSS3中的伪类 nth-child选择器](http://www.daqianduan.com/3737.html)\n\n#### ESlint\n\n1. [ESlint配置官网](https://eslint.org/)\n3. [ESlint配置官网(zh)](http://eslint.cn/)\n2. [ESlint知乎配置大全](https://zhuanlan.zhihu.com/p/28906725)","source":"_posts/study/study2018-04.md","raw":"---\ntitle: 2018上半年学习资料整理&学习计划[4]\ntags: [学习计划]\ncategories: [学习]\ndate: 2018-04-08 15:36:58\n---\n每天收集一点，每天学习一点\n\n<!-- more -->\n#### 小程序\n\n1. [小程序登录鉴权-手把手](https://juejin.im/post/5ac9b72cf265da23906c486a)\n\n#### node.js --express\n\n0. [node社区](https://cnodejs.org/)\n1. [express入门指南](http://www.expressjs.com.cn/)\n\n#### Promise\n\n2. [Promise 迷你书](http://liubin.org/promises-book/#ch2-promise-resolve)\n3. [理解 Promise 的工作原理](https://cnodejs.org/topic/569c8226adf526da2aeb23fd)\n4. [Node.js最新技术栈之Promise篇](https://cnodejs.org/topic/560dbc826a1ed28204a1e7de)\n\n#### axios\n\n1. [axios中文文档](https://www.kancloud.cn/yunye/axios/234845)\n\n#### css\n\n1. [css探索之旅](http://blog.doyoe.com/)\n2. [Web前端实验室](http://demo.doyoe.com/)\n3. [在线阴影生成方法](http://www.css88.com/tool/css3Preview/Box-Shadow.html)\n4. [CSS3中的伪类 nth-child选择器](http://www.daqianduan.com/3737.html)\n\n#### ESlint\n\n1. [ESlint配置官网](https://eslint.org/)\n3. [ESlint配置官网(zh)](http://eslint.cn/)\n2. [ESlint知乎配置大全](https://zhuanlan.zhihu.com/p/28906725)","slug":"study/study2018-04","published":1,"updated":"2018-04-18T05:44:24.908Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhuehzab000z7sootq17capd","content":"<p>每天收集一点，每天学习一点</p>\n<a id=\"more\"></a>\n<h4 id=\"小程序\"><a href=\"#小程序\" class=\"headerlink\" title=\"小程序\"></a>小程序</h4><ol>\n<li><a href=\"https://juejin.im/post/5ac9b72cf265da23906c486a\" target=\"_blank\" rel=\"noopener\">小程序登录鉴权-手把手</a></li>\n</ol>\n<h4 id=\"node-js-–express\"><a href=\"#node-js-–express\" class=\"headerlink\" title=\"node.js –express\"></a>node.js –express</h4><ol start=\"0\">\n<li><a href=\"https://cnodejs.org/\" target=\"_blank\" rel=\"noopener\">node社区</a></li>\n<li><a href=\"http://www.expressjs.com.cn/\" target=\"_blank\" rel=\"noopener\">express入门指南</a></li>\n</ol>\n<h4 id=\"Promise\"><a href=\"#Promise\" class=\"headerlink\" title=\"Promise\"></a>Promise</h4><ol start=\"2\">\n<li><a href=\"http://liubin.org/promises-book/#ch2-promise-resolve\" target=\"_blank\" rel=\"noopener\">Promise 迷你书</a></li>\n<li><a href=\"https://cnodejs.org/topic/569c8226adf526da2aeb23fd\" target=\"_blank\" rel=\"noopener\">理解 Promise 的工作原理</a></li>\n<li><a href=\"https://cnodejs.org/topic/560dbc826a1ed28204a1e7de\" target=\"_blank\" rel=\"noopener\">Node.js最新技术栈之Promise篇</a></li>\n</ol>\n<h4 id=\"axios\"><a href=\"#axios\" class=\"headerlink\" title=\"axios\"></a>axios</h4><ol>\n<li><a href=\"https://www.kancloud.cn/yunye/axios/234845\" target=\"_blank\" rel=\"noopener\">axios中文文档</a></li>\n</ol>\n<h4 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h4><ol>\n<li><a href=\"http://blog.doyoe.com/\" target=\"_blank\" rel=\"noopener\">css探索之旅</a></li>\n<li><a href=\"http://demo.doyoe.com/\" target=\"_blank\" rel=\"noopener\">Web前端实验室</a></li>\n<li><a href=\"http://www.css88.com/tool/css3Preview/Box-Shadow.html\" target=\"_blank\" rel=\"noopener\">在线阴影生成方法</a></li>\n<li><a href=\"http://www.daqianduan.com/3737.html\" target=\"_blank\" rel=\"noopener\">CSS3中的伪类 nth-child选择器</a></li>\n</ol>\n<h4 id=\"ESlint\"><a href=\"#ESlint\" class=\"headerlink\" title=\"ESlint\"></a>ESlint</h4><ol>\n<li><a href=\"https://eslint.org/\" target=\"_blank\" rel=\"noopener\">ESlint配置官网</a></li>\n<li><a href=\"http://eslint.cn/\" target=\"_blank\" rel=\"noopener\">ESlint配置官网(zh)</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/28906725\" target=\"_blank\" rel=\"noopener\">ESlint知乎配置大全</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>每天收集一点，每天学习一点</p>","more":"<h4 id=\"小程序\"><a href=\"#小程序\" class=\"headerlink\" title=\"小程序\"></a>小程序</h4><ol>\n<li><a href=\"https://juejin.im/post/5ac9b72cf265da23906c486a\" target=\"_blank\" rel=\"noopener\">小程序登录鉴权-手把手</a></li>\n</ol>\n<h4 id=\"node-js-–express\"><a href=\"#node-js-–express\" class=\"headerlink\" title=\"node.js –express\"></a>node.js –express</h4><ol start=\"0\">\n<li><a href=\"https://cnodejs.org/\" target=\"_blank\" rel=\"noopener\">node社区</a></li>\n<li><a href=\"http://www.expressjs.com.cn/\" target=\"_blank\" rel=\"noopener\">express入门指南</a></li>\n</ol>\n<h4 id=\"Promise\"><a href=\"#Promise\" class=\"headerlink\" title=\"Promise\"></a>Promise</h4><ol start=\"2\">\n<li><a href=\"http://liubin.org/promises-book/#ch2-promise-resolve\" target=\"_blank\" rel=\"noopener\">Promise 迷你书</a></li>\n<li><a href=\"https://cnodejs.org/topic/569c8226adf526da2aeb23fd\" target=\"_blank\" rel=\"noopener\">理解 Promise 的工作原理</a></li>\n<li><a href=\"https://cnodejs.org/topic/560dbc826a1ed28204a1e7de\" target=\"_blank\" rel=\"noopener\">Node.js最新技术栈之Promise篇</a></li>\n</ol>\n<h4 id=\"axios\"><a href=\"#axios\" class=\"headerlink\" title=\"axios\"></a>axios</h4><ol>\n<li><a href=\"https://www.kancloud.cn/yunye/axios/234845\" target=\"_blank\" rel=\"noopener\">axios中文文档</a></li>\n</ol>\n<h4 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h4><ol>\n<li><a href=\"http://blog.doyoe.com/\" target=\"_blank\" rel=\"noopener\">css探索之旅</a></li>\n<li><a href=\"http://demo.doyoe.com/\" target=\"_blank\" rel=\"noopener\">Web前端实验室</a></li>\n<li><a href=\"http://www.css88.com/tool/css3Preview/Box-Shadow.html\" target=\"_blank\" rel=\"noopener\">在线阴影生成方法</a></li>\n<li><a href=\"http://www.daqianduan.com/3737.html\" target=\"_blank\" rel=\"noopener\">CSS3中的伪类 nth-child选择器</a></li>\n</ol>\n<h4 id=\"ESlint\"><a href=\"#ESlint\" class=\"headerlink\" title=\"ESlint\"></a>ESlint</h4><ol>\n<li><a href=\"https://eslint.org/\" target=\"_blank\" rel=\"noopener\">ESlint配置官网</a></li>\n<li><a href=\"http://eslint.cn/\" target=\"_blank\" rel=\"noopener\">ESlint配置官网(zh)</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/28906725\" target=\"_blank\" rel=\"noopener\">ESlint知乎配置大全</a></li>\n</ol>"},{"title":"2018上半年学习资料整理&学习计划[3]","date":"2018-03-30T07:49:58.000Z","_content":"每天收集一点，每天学习一点\n\n<!-- more -->\n#### git使用学习\n\n1. [git快速学习教程-廖雪峰的网站](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)\n2. [git使用原理文档](https://www.git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-%E9%85%8D%E7%BD%AE-Git)\n\n#### 博客\n\n1. [胖芮的博客--很多学习的东西](http://ruizhengyun.cn/)\n2. [博客框架的的例子](http://fehey.com/hve-blog/index.html)\n\n#### 框架\n\n1. [vue快速入门，全家桶知识学习](https://zhimap.com/mmap/2d0dc65361fc429fb4f5432592e3f976)\n\n#### 其他\n\n1. [hexo官网](https://hexo.io/zh-cn/docs/asset-folders.html)\n\n#### webpack学习\n1. [webpack小书](http://webpack.wuhaolin.cn/)\n2. [webpack【gitbook】](https://fakefish.github.io/react-webpack-cookbook/index.html)","source":"_posts/study/study2018-03.md","raw":"---\ntitle: 2018上半年学习资料整理&学习计划[3]\ntags: [学习计划]\ncategories: [学习]\ndate: 2018-03-30 15:49:58\n---\n每天收集一点，每天学习一点\n\n<!-- more -->\n#### git使用学习\n\n1. [git快速学习教程-廖雪峰的网站](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)\n2. [git使用原理文档](https://www.git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-%E9%85%8D%E7%BD%AE-Git)\n\n#### 博客\n\n1. [胖芮的博客--很多学习的东西](http://ruizhengyun.cn/)\n2. [博客框架的的例子](http://fehey.com/hve-blog/index.html)\n\n#### 框架\n\n1. [vue快速入门，全家桶知识学习](https://zhimap.com/mmap/2d0dc65361fc429fb4f5432592e3f976)\n\n#### 其他\n\n1. [hexo官网](https://hexo.io/zh-cn/docs/asset-folders.html)\n\n#### webpack学习\n1. [webpack小书](http://webpack.wuhaolin.cn/)\n2. [webpack【gitbook】](https://fakefish.github.io/react-webpack-cookbook/index.html)","slug":"study/study2018-03","published":1,"updated":"2018-04-08T10:18:38.458Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhuehzad00117soo3d4rql9a","content":"<p>每天收集一点，每天学习一点</p>\n<a id=\"more\"></a>\n<h4 id=\"git使用学习\"><a href=\"#git使用学习\" class=\"headerlink\" title=\"git使用学习\"></a>git使用学习</h4><ol>\n<li><a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" rel=\"noopener\">git快速学习教程-廖雪峰的网站</a></li>\n<li><a href=\"https://www.git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-%E9%85%8D%E7%BD%AE-Git\" target=\"_blank\" rel=\"noopener\">git使用原理文档</a></li>\n</ol>\n<h4 id=\"博客\"><a href=\"#博客\" class=\"headerlink\" title=\"博客\"></a>博客</h4><ol>\n<li><a href=\"http://ruizhengyun.cn/\" target=\"_blank\" rel=\"noopener\">胖芮的博客–很多学习的东西</a></li>\n<li><a href=\"http://fehey.com/hve-blog/index.html\" target=\"_blank\" rel=\"noopener\">博客框架的的例子</a></li>\n</ol>\n<h4 id=\"框架\"><a href=\"#框架\" class=\"headerlink\" title=\"框架\"></a>框架</h4><ol>\n<li><a href=\"https://zhimap.com/mmap/2d0dc65361fc429fb4f5432592e3f976\" target=\"_blank\" rel=\"noopener\">vue快速入门，全家桶知识学习</a></li>\n</ol>\n<h4 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h4><ol>\n<li><a href=\"https://hexo.io/zh-cn/docs/asset-folders.html\" target=\"_blank\" rel=\"noopener\">hexo官网</a></li>\n</ol>\n<h4 id=\"webpack学习\"><a href=\"#webpack学习\" class=\"headerlink\" title=\"webpack学习\"></a>webpack学习</h4><ol>\n<li><a href=\"http://webpack.wuhaolin.cn/\" target=\"_blank\" rel=\"noopener\">webpack小书</a></li>\n<li><a href=\"https://fakefish.github.io/react-webpack-cookbook/index.html\" target=\"_blank\" rel=\"noopener\">webpack【gitbook】</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>每天收集一点，每天学习一点</p>","more":"<h4 id=\"git使用学习\"><a href=\"#git使用学习\" class=\"headerlink\" title=\"git使用学习\"></a>git使用学习</h4><ol>\n<li><a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" rel=\"noopener\">git快速学习教程-廖雪峰的网站</a></li>\n<li><a href=\"https://www.git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-%E9%85%8D%E7%BD%AE-Git\" target=\"_blank\" rel=\"noopener\">git使用原理文档</a></li>\n</ol>\n<h4 id=\"博客\"><a href=\"#博客\" class=\"headerlink\" title=\"博客\"></a>博客</h4><ol>\n<li><a href=\"http://ruizhengyun.cn/\" target=\"_blank\" rel=\"noopener\">胖芮的博客–很多学习的东西</a></li>\n<li><a href=\"http://fehey.com/hve-blog/index.html\" target=\"_blank\" rel=\"noopener\">博客框架的的例子</a></li>\n</ol>\n<h4 id=\"框架\"><a href=\"#框架\" class=\"headerlink\" title=\"框架\"></a>框架</h4><ol>\n<li><a href=\"https://zhimap.com/mmap/2d0dc65361fc429fb4f5432592e3f976\" target=\"_blank\" rel=\"noopener\">vue快速入门，全家桶知识学习</a></li>\n</ol>\n<h4 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h4><ol>\n<li><a href=\"https://hexo.io/zh-cn/docs/asset-folders.html\" target=\"_blank\" rel=\"noopener\">hexo官网</a></li>\n</ol>\n<h4 id=\"webpack学习\"><a href=\"#webpack学习\" class=\"headerlink\" title=\"webpack学习\"></a>webpack学习</h4><ol>\n<li><a href=\"http://webpack.wuhaolin.cn/\" target=\"_blank\" rel=\"noopener\">webpack小书</a></li>\n<li><a href=\"https://fakefish.github.io/react-webpack-cookbook/index.html\" target=\"_blank\" rel=\"noopener\">webpack【gitbook】</a></li>\n</ol>"},{"title":"iview组件使用的踩坑记录","date":"2017-11-08T08:03:39.000Z","_content":"级联选择器的校验， 导航Tabs的使用\n<!-- more -->\n## 级联选择起的校验\n<div style=\"color: #808080; font-size: 12px; text-align: right\">2017-11-08 16:03:39 </div>\n\n### html\n\n```html\n <Form :label-width=\"100\" ref=\"formData\" :rules=\"ruleValidate\" :model=\"formData\" inline class=\"wms-form-check oneline\">   \n\n    <Form-item label=\"收货地址：\" style=\"width:532px\" prop=\"region\" `@注意region`>\n        <Cascader :data=\"provinceCity\" v-model=\"formData.region\" `@注意region` size=\"small\" trigger=\"hover\"></Cascader>\n    </Form-item>\n\n<Form>\n```\n### javascript\n\n```js\nimport wmsValidate from 'wmsValidate\ndata() {\n    return {\n        formData: {\n            region: []\n        },\n        ruleValidate: {\n            ownerName: [{required: true, message: '货主名称不能为空', trigger: 'change'}],\n            type: [{required: true, message: '单据类型不能为空', trigger: 'change'}],\n\n            contactsName: [{required: true, message: '联系人不能为空', trigger: 'blur'}],\n            contacts: [{required: true, message: '联系方式不能为空', trigger: 'blur'}],\n            \n            region: [ --@注意--\n                {\n                    validator: wmsValidate.proviinceValidate,\n                    required: true,\n                    trigger: 'change',\n                    fullField: 'address'\n                }],\n            address: [{required: true, message: '详细地址不能为空', trigger: 'blur'}],\n            shippingMethod: [{required: true, message: '送货方式不能为空', trigger: 'change'}]\n                \n            },  \n    }\n}\n```\n### 检验地址控件的方法\n\n```js\n    // 校验地址控件选择 必填, 不能双向绑定 改变数据\nexport default class wmsValidate {\n\n    static proviinceValidate(rule, value, callback) {\n        if (_.isArray(value) && value.length === 3) {\n            return callback()\n        } else {\n            return callback(new Error('地址不能为空'))\n        }\n    }\n}\n```\n**Tisp：** `v-model`绑定的名字，`prop`的名字，和`validate`中的名字必须一致，`validate`中才能接收到值\n</br>\n\n\n\n\n## iview中tabs的使用\n<div style=\"color: #808080; font-size: 12px; text-align: right\">2017-11-15 09:46:55 </div>\n\n正确使用姿势：\n```html\n<Tabs v-if=\"pageName!=='detail'\" type=\"card\" class=\"wms-mt10 wms-tabs\">\n    <Tab-pane label=\"出库箱信息\">\n    </Tab-pane>\n</Tabs>\n<div v-if=\"pageName!=='detail'\"> </div>\n```\n**Tisp：**： 不能将`Tabs`放在 带有`v-if`属性的`div`中\n\n\n</br>\n## iview中Model弹窗二次点击依然会关闭问题\n<div style=\"color: #808080; font-size: 12px; text-align: right\">2017-11-16 18:39:55 </div>\n\n 确定按钮点击 --会自动关闭`Model`, 添加属性 `:loading`后需要在`@on-ok`事件中手动去设置关闭\n Tips: `:loading`初始值为要设置为 `true`\n **问题：** 首次点击未手动设置model关闭， 再次点击依然会自动关闭？\n 场景：\n> html\n\n ```html\n<Modal\n    v-model=\"syncUploadPop\"\n    title=\"title\"\n    width=\"400\"\n    :mask-closable=\"false\"\n    @on-ok=\"accountUnload\"\n    :loading=\"uploadLoading\"\n    >\n</Model>\n ```\n > js\n\n ```js\n data() {\n     return {\n         syncUploadPop: false,      // 弹出款默认不显示\n         uploadLoading: true        // 上传中\n     }\n }\nmethods: {\n    async accountUnload() {\n\n        this.uploadLoading = true   // 确定点击显示 加载中、、、\n\n        let res = await request.post(InterObj.accountUnloadTo, params)\n        this.uploadLoading = false  // 请求成功取消 加载中、、、\n\n        // -------解决问题的核心代码------\n        this.$nextTick(() => {\n            this.uploadLoading = true\n        })\n        // -------解决问题的核心代码------\n\n        if(res.result === 'success') {\n            this.$Message.success(res.msg)\n            this.syncUploadPop = false\n        } else {\n            this.$Message.error(res.msg)\n        }\n    },\n}\n\n ```\n **总结：** `:loading`设置成false取消 加载中状态后，需要在线程最后依然将 他设置为`true`","source":"_posts/frame/vue/vue-study-iview.md","raw":"---\ntitle: iview组件使用的踩坑记录\ntags: [iview组件]\ncategories: [vue框架]\ndate: 2017-11-08 16:03:39\n---\n级联选择器的校验， 导航Tabs的使用\n<!-- more -->\n## 级联选择起的校验\n<div style=\"color: #808080; font-size: 12px; text-align: right\">2017-11-08 16:03:39 </div>\n\n### html\n\n```html\n <Form :label-width=\"100\" ref=\"formData\" :rules=\"ruleValidate\" :model=\"formData\" inline class=\"wms-form-check oneline\">   \n\n    <Form-item label=\"收货地址：\" style=\"width:532px\" prop=\"region\" `@注意region`>\n        <Cascader :data=\"provinceCity\" v-model=\"formData.region\" `@注意region` size=\"small\" trigger=\"hover\"></Cascader>\n    </Form-item>\n\n<Form>\n```\n### javascript\n\n```js\nimport wmsValidate from 'wmsValidate\ndata() {\n    return {\n        formData: {\n            region: []\n        },\n        ruleValidate: {\n            ownerName: [{required: true, message: '货主名称不能为空', trigger: 'change'}],\n            type: [{required: true, message: '单据类型不能为空', trigger: 'change'}],\n\n            contactsName: [{required: true, message: '联系人不能为空', trigger: 'blur'}],\n            contacts: [{required: true, message: '联系方式不能为空', trigger: 'blur'}],\n            \n            region: [ --@注意--\n                {\n                    validator: wmsValidate.proviinceValidate,\n                    required: true,\n                    trigger: 'change',\n                    fullField: 'address'\n                }],\n            address: [{required: true, message: '详细地址不能为空', trigger: 'blur'}],\n            shippingMethod: [{required: true, message: '送货方式不能为空', trigger: 'change'}]\n                \n            },  \n    }\n}\n```\n### 检验地址控件的方法\n\n```js\n    // 校验地址控件选择 必填, 不能双向绑定 改变数据\nexport default class wmsValidate {\n\n    static proviinceValidate(rule, value, callback) {\n        if (_.isArray(value) && value.length === 3) {\n            return callback()\n        } else {\n            return callback(new Error('地址不能为空'))\n        }\n    }\n}\n```\n**Tisp：** `v-model`绑定的名字，`prop`的名字，和`validate`中的名字必须一致，`validate`中才能接收到值\n</br>\n\n\n\n\n## iview中tabs的使用\n<div style=\"color: #808080; font-size: 12px; text-align: right\">2017-11-15 09:46:55 </div>\n\n正确使用姿势：\n```html\n<Tabs v-if=\"pageName!=='detail'\" type=\"card\" class=\"wms-mt10 wms-tabs\">\n    <Tab-pane label=\"出库箱信息\">\n    </Tab-pane>\n</Tabs>\n<div v-if=\"pageName!=='detail'\"> </div>\n```\n**Tisp：**： 不能将`Tabs`放在 带有`v-if`属性的`div`中\n\n\n</br>\n## iview中Model弹窗二次点击依然会关闭问题\n<div style=\"color: #808080; font-size: 12px; text-align: right\">2017-11-16 18:39:55 </div>\n\n 确定按钮点击 --会自动关闭`Model`, 添加属性 `:loading`后需要在`@on-ok`事件中手动去设置关闭\n Tips: `:loading`初始值为要设置为 `true`\n **问题：** 首次点击未手动设置model关闭， 再次点击依然会自动关闭？\n 场景：\n> html\n\n ```html\n<Modal\n    v-model=\"syncUploadPop\"\n    title=\"title\"\n    width=\"400\"\n    :mask-closable=\"false\"\n    @on-ok=\"accountUnload\"\n    :loading=\"uploadLoading\"\n    >\n</Model>\n ```\n > js\n\n ```js\n data() {\n     return {\n         syncUploadPop: false,      // 弹出款默认不显示\n         uploadLoading: true        // 上传中\n     }\n }\nmethods: {\n    async accountUnload() {\n\n        this.uploadLoading = true   // 确定点击显示 加载中、、、\n\n        let res = await request.post(InterObj.accountUnloadTo, params)\n        this.uploadLoading = false  // 请求成功取消 加载中、、、\n\n        // -------解决问题的核心代码------\n        this.$nextTick(() => {\n            this.uploadLoading = true\n        })\n        // -------解决问题的核心代码------\n\n        if(res.result === 'success') {\n            this.$Message.success(res.msg)\n            this.syncUploadPop = false\n        } else {\n            this.$Message.error(res.msg)\n        }\n    },\n}\n\n ```\n **总结：** `:loading`设置成false取消 加载中状态后，需要在线程最后依然将 他设置为`true`","slug":"frame/vue/vue-study-iview","published":1,"updated":"2018-03-30T07:24:43.714Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhuehzb300187soo1nogmedi","content":"<p>级联选择器的校验， 导航Tabs的使用<br><a id=\"more\"></a></p>\n<h2 id=\"级联选择起的校验\"><a href=\"#级联选择起的校验\" class=\"headerlink\" title=\"级联选择起的校验\"></a>级联选择起的校验</h2><div style=\"color: #808080; font-size: 12px; text-align: right\">2017-11-08 16:03:39 </div>\n\n<h3 id=\"html\"><a href=\"#html\" class=\"headerlink\" title=\"html\"></a>html</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">Form</span> <span class=\"attr\">:label-width</span>=<span class=\"string\">\"100\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"formData\"</span> <span class=\"attr\">:rules</span>=<span class=\"string\">\"ruleValidate\"</span> <span class=\"attr\">:model</span>=<span class=\"string\">\"formData\"</span> <span class=\"attr\">inline</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wms-form-check oneline\"</span>&gt;</span>   </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">\"收货地址：\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width:532px\"</span> <span class=\"attr\">prop</span>=<span class=\"string\">\"region\"</span> `@注意<span class=\"attr\">region</span>`&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Cascader</span> <span class=\"attr\">:data</span>=<span class=\"string\">\"provinceCity\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"formData.region\"</span> `@注意<span class=\"attr\">region</span>` <span class=\"attr\">size</span>=<span class=\"string\">\"small\"</span> <span class=\"attr\">trigger</span>=<span class=\"string\">\"hover\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Cascader</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Form-item</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"javascript\"><a href=\"#javascript\" class=\"headerlink\" title=\"javascript\"></a>javascript</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> wmsValidate <span class=\"keyword\">from</span> <span class=\"string\">'wmsValidate</span></span><br><span class=\"line\"><span class=\"string\">data() &#123;</span></span><br><span class=\"line\"><span class=\"string\">    return &#123;</span></span><br><span class=\"line\"><span class=\"string\">        formData: &#123;</span></span><br><span class=\"line\"><span class=\"string\">            region: []</span></span><br><span class=\"line\"><span class=\"string\">        &#125;,</span></span><br><span class=\"line\"><span class=\"string\">        ruleValidate: &#123;</span></span><br><span class=\"line\"><span class=\"string\">            ownerName: [&#123;required: true, message: '</span>货主名称不能为空<span class=\"string\">', trigger: '</span>change<span class=\"string\">'&#125;],</span></span><br><span class=\"line\"><span class=\"string\">            type: [&#123;required: true, message: '</span>单据类型不能为空<span class=\"string\">', trigger: '</span>change<span class=\"string\">'&#125;],</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">            contactsName: [&#123;required: true, message: '</span>联系人不能为空<span class=\"string\">', trigger: '</span>blur<span class=\"string\">'&#125;],</span></span><br><span class=\"line\"><span class=\"string\">            contacts: [&#123;required: true, message: '</span>联系方式不能为空<span class=\"string\">', trigger: '</span>blur<span class=\"string\">'&#125;],</span></span><br><span class=\"line\"><span class=\"string\">            </span></span><br><span class=\"line\"><span class=\"string\">            region: [ --@注意--</span></span><br><span class=\"line\"><span class=\"string\">                &#123;</span></span><br><span class=\"line\"><span class=\"string\">                    validator: wmsValidate.proviinceValidate,</span></span><br><span class=\"line\"><span class=\"string\">                    required: true,</span></span><br><span class=\"line\"><span class=\"string\">                    trigger: '</span>change<span class=\"string\">',</span></span><br><span class=\"line\"><span class=\"string\">                    fullField: '</span>address<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">                &#125;],</span></span><br><span class=\"line\"><span class=\"string\">            address: [&#123;required: true, message: '</span>详细地址不能为空<span class=\"string\">', trigger: '</span>blur<span class=\"string\">'&#125;],</span></span><br><span class=\"line\"><span class=\"string\">            shippingMethod: [&#123;required: true, message: '</span>送货方式不能为空<span class=\"string\">', trigger: '</span>change<span class=\"string\">'&#125;]</span></span><br><span class=\"line\"><span class=\"string\">                </span></span><br><span class=\"line\"><span class=\"string\">            &#125;,  </span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"检验地址控件的方法\"><a href=\"#检验地址控件的方法\" class=\"headerlink\" title=\"检验地址控件的方法\"></a>检验地址控件的方法</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"comment\">// 校验地址控件选择 必填, 不能双向绑定 改变数据</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">wmsValidate</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> proviinceValidate(rule, value, callback) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_.isArray(value) &amp;&amp; value.length === <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> callback()</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> callback(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'地址不能为空'</span>))</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>Tisp：</strong> <code>v-model</code>绑定的名字，<code>prop</code>的名字，和<code>validate</code>中的名字必须一致，<code>validate</code>中才能接收到值<br><br></p>\n<h2 id=\"iview中tabs的使用\"><a href=\"#iview中tabs的使用\" class=\"headerlink\" title=\"iview中tabs的使用\"></a>iview中tabs的使用</h2><div style=\"color: #808080; font-size: 12px; text-align: right\">2017-11-15 09:46:55 </div>\n\n<p>正确使用姿势：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Tabs</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"pageName!=='detail'\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"card\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wms-mt10 wms-tabs\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Tab-pane</span> <span class=\"attr\">label</span>=<span class=\"string\">\"出库箱信息\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Tab-pane</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Tabs</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"pageName!=='detail'\"</span>&gt;</span> <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>Tisp：</strong>： 不能将<code>Tabs</code>放在 带有<code>v-if</code>属性的<code>div</code>中</p>\n<p><br></p>\n<h2 id=\"iview中Model弹窗二次点击依然会关闭问题\"><a href=\"#iview中Model弹窗二次点击依然会关闭问题\" class=\"headerlink\" title=\"iview中Model弹窗二次点击依然会关闭问题\"></a>iview中Model弹窗二次点击依然会关闭问题</h2><div style=\"color: #808080; font-size: 12px; text-align: right\">2017-11-16 18:39:55 </div>\n\n<p> 确定按钮点击 –会自动关闭<code>Model</code>, 添加属性 <code>:loading</code>后需要在<code>@on-ok</code>事件中手动去设置关闭<br> Tips: <code>:loading</code>初始值为要设置为 <code>true</code><br> <strong>问题：</strong> 首次点击未手动设置model关闭， 再次点击依然会自动关闭？<br> 场景：</p>\n<blockquote>\n<p>html</p>\n</blockquote>\n <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Modal</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">v-model</span>=<span class=\"string\">\"syncUploadPop\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">title</span>=<span class=\"string\">\"title\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">width</span>=<span class=\"string\">\"400\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:mask-closable</span>=<span class=\"string\">\"false\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    @<span class=\"attr\">on-ok</span>=<span class=\"string\">\"accountUnload\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:loading</span>=<span class=\"string\">\"uploadLoading\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Model</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>js</p>\n</blockquote>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> data() &#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">         syncUploadPop: <span class=\"literal\">false</span>,      <span class=\"comment\">// 弹出款默认不显示</span></span><br><span class=\"line\">         uploadLoading: <span class=\"literal\">true</span>        <span class=\"comment\">// 上传中</span></span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">    <span class=\"keyword\">async</span> accountUnload() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.uploadLoading = <span class=\"literal\">true</span>   <span class=\"comment\">// 确定点击显示 加载中、、、</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> res = <span class=\"keyword\">await</span> request.post(InterObj.accountUnloadTo, params)</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.uploadLoading = <span class=\"literal\">false</span>  <span class=\"comment\">// 请求成功取消 加载中、、、</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// -------解决问题的核心代码------</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.$nextTick(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.uploadLoading = <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        <span class=\"comment\">// -------解决问题的核心代码------</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(res.result === <span class=\"string\">'success'</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.$Message.success(res.msg)</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.syncUploadPop = <span class=\"literal\">false</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.$Message.error(res.msg)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> <strong>总结：</strong> <code>:loading</code>设置成false取消 加载中状态后，需要在线程最后依然将 他设置为<code>true</code></p>\n","site":{"data":{}},"excerpt":"<p>级联选择器的校验， 导航Tabs的使用<br>","more":"</p>\n<h2 id=\"级联选择起的校验\"><a href=\"#级联选择起的校验\" class=\"headerlink\" title=\"级联选择起的校验\"></a>级联选择起的校验</h2><div style=\"color: #808080; font-size: 12px; text-align: right\">2017-11-08 16:03:39 </div>\n\n<h3 id=\"html\"><a href=\"#html\" class=\"headerlink\" title=\"html\"></a>html</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">Form</span> <span class=\"attr\">:label-width</span>=<span class=\"string\">\"100\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"formData\"</span> <span class=\"attr\">:rules</span>=<span class=\"string\">\"ruleValidate\"</span> <span class=\"attr\">:model</span>=<span class=\"string\">\"formData\"</span> <span class=\"attr\">inline</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wms-form-check oneline\"</span>&gt;</span>   </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">\"收货地址：\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width:532px\"</span> <span class=\"attr\">prop</span>=<span class=\"string\">\"region\"</span> `@注意<span class=\"attr\">region</span>`&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Cascader</span> <span class=\"attr\">:data</span>=<span class=\"string\">\"provinceCity\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"formData.region\"</span> `@注意<span class=\"attr\">region</span>` <span class=\"attr\">size</span>=<span class=\"string\">\"small\"</span> <span class=\"attr\">trigger</span>=<span class=\"string\">\"hover\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Cascader</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Form-item</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"javascript\"><a href=\"#javascript\" class=\"headerlink\" title=\"javascript\"></a>javascript</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> wmsValidate <span class=\"keyword\">from</span> <span class=\"string\">'wmsValidate</span></span><br><span class=\"line\"><span class=\"string\">data() &#123;</span></span><br><span class=\"line\"><span class=\"string\">    return &#123;</span></span><br><span class=\"line\"><span class=\"string\">        formData: &#123;</span></span><br><span class=\"line\"><span class=\"string\">            region: []</span></span><br><span class=\"line\"><span class=\"string\">        &#125;,</span></span><br><span class=\"line\"><span class=\"string\">        ruleValidate: &#123;</span></span><br><span class=\"line\"><span class=\"string\">            ownerName: [&#123;required: true, message: '</span>货主名称不能为空<span class=\"string\">', trigger: '</span>change<span class=\"string\">'&#125;],</span></span><br><span class=\"line\"><span class=\"string\">            type: [&#123;required: true, message: '</span>单据类型不能为空<span class=\"string\">', trigger: '</span>change<span class=\"string\">'&#125;],</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">            contactsName: [&#123;required: true, message: '</span>联系人不能为空<span class=\"string\">', trigger: '</span>blur<span class=\"string\">'&#125;],</span></span><br><span class=\"line\"><span class=\"string\">            contacts: [&#123;required: true, message: '</span>联系方式不能为空<span class=\"string\">', trigger: '</span>blur<span class=\"string\">'&#125;],</span></span><br><span class=\"line\"><span class=\"string\">            </span></span><br><span class=\"line\"><span class=\"string\">            region: [ --@注意--</span></span><br><span class=\"line\"><span class=\"string\">                &#123;</span></span><br><span class=\"line\"><span class=\"string\">                    validator: wmsValidate.proviinceValidate,</span></span><br><span class=\"line\"><span class=\"string\">                    required: true,</span></span><br><span class=\"line\"><span class=\"string\">                    trigger: '</span>change<span class=\"string\">',</span></span><br><span class=\"line\"><span class=\"string\">                    fullField: '</span>address<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">                &#125;],</span></span><br><span class=\"line\"><span class=\"string\">            address: [&#123;required: true, message: '</span>详细地址不能为空<span class=\"string\">', trigger: '</span>blur<span class=\"string\">'&#125;],</span></span><br><span class=\"line\"><span class=\"string\">            shippingMethod: [&#123;required: true, message: '</span>送货方式不能为空<span class=\"string\">', trigger: '</span>change<span class=\"string\">'&#125;]</span></span><br><span class=\"line\"><span class=\"string\">                </span></span><br><span class=\"line\"><span class=\"string\">            &#125;,  </span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"检验地址控件的方法\"><a href=\"#检验地址控件的方法\" class=\"headerlink\" title=\"检验地址控件的方法\"></a>检验地址控件的方法</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"comment\">// 校验地址控件选择 必填, 不能双向绑定 改变数据</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">wmsValidate</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> proviinceValidate(rule, value, callback) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_.isArray(value) &amp;&amp; value.length === <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> callback()</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> callback(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'地址不能为空'</span>))</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>Tisp：</strong> <code>v-model</code>绑定的名字，<code>prop</code>的名字，和<code>validate</code>中的名字必须一致，<code>validate</code>中才能接收到值<br><br></p>\n<h2 id=\"iview中tabs的使用\"><a href=\"#iview中tabs的使用\" class=\"headerlink\" title=\"iview中tabs的使用\"></a>iview中tabs的使用</h2><div style=\"color: #808080; font-size: 12px; text-align: right\">2017-11-15 09:46:55 </div>\n\n<p>正确使用姿势：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Tabs</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"pageName!=='detail'\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"card\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wms-mt10 wms-tabs\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Tab-pane</span> <span class=\"attr\">label</span>=<span class=\"string\">\"出库箱信息\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Tab-pane</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Tabs</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"pageName!=='detail'\"</span>&gt;</span> <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>Tisp：</strong>： 不能将<code>Tabs</code>放在 带有<code>v-if</code>属性的<code>div</code>中</p>\n<p><br></p>\n<h2 id=\"iview中Model弹窗二次点击依然会关闭问题\"><a href=\"#iview中Model弹窗二次点击依然会关闭问题\" class=\"headerlink\" title=\"iview中Model弹窗二次点击依然会关闭问题\"></a>iview中Model弹窗二次点击依然会关闭问题</h2><div style=\"color: #808080; font-size: 12px; text-align: right\">2017-11-16 18:39:55 </div>\n\n<p> 确定按钮点击 –会自动关闭<code>Model</code>, 添加属性 <code>:loading</code>后需要在<code>@on-ok</code>事件中手动去设置关闭<br> Tips: <code>:loading</code>初始值为要设置为 <code>true</code><br> <strong>问题：</strong> 首次点击未手动设置model关闭， 再次点击依然会自动关闭？<br> 场景：</p>\n<blockquote>\n<p>html</p>\n</blockquote>\n <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Modal</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">v-model</span>=<span class=\"string\">\"syncUploadPop\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">title</span>=<span class=\"string\">\"title\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">width</span>=<span class=\"string\">\"400\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:mask-closable</span>=<span class=\"string\">\"false\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    @<span class=\"attr\">on-ok</span>=<span class=\"string\">\"accountUnload\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:loading</span>=<span class=\"string\">\"uploadLoading\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Model</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>js</p>\n</blockquote>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> data() &#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">         syncUploadPop: <span class=\"literal\">false</span>,      <span class=\"comment\">// 弹出款默认不显示</span></span><br><span class=\"line\">         uploadLoading: <span class=\"literal\">true</span>        <span class=\"comment\">// 上传中</span></span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">    <span class=\"keyword\">async</span> accountUnload() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.uploadLoading = <span class=\"literal\">true</span>   <span class=\"comment\">// 确定点击显示 加载中、、、</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> res = <span class=\"keyword\">await</span> request.post(InterObj.accountUnloadTo, params)</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.uploadLoading = <span class=\"literal\">false</span>  <span class=\"comment\">// 请求成功取消 加载中、、、</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// -------解决问题的核心代码------</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.$nextTick(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.uploadLoading = <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        <span class=\"comment\">// -------解决问题的核心代码------</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(res.result === <span class=\"string\">'success'</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.$Message.success(res.msg)</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.syncUploadPop = <span class=\"literal\">false</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.$Message.error(res.msg)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> <strong>总结：</strong> <code>:loading</code>设置成false取消 加载中状态后，需要在线程最后依然将 他设置为<code>true</code></p>"},{"title":"vue组件的使用","date":"2017-11-09T07:14:27.000Z","_content":"vue中组价的使用方式？\n<!-- more -->\ndescription: ","source":"_posts/frame/vue/vue-study-03.md","raw":"---\ntitle: vue组件的使用\ntags: []\ncategories: []\ndate: 2017-11-09 15:14:27\n---\nvue中组价的使用方式？\n<!-- more -->\ndescription: ","slug":"frame/vue/vue-study-03","published":1,"updated":"2018-03-30T07:24:43.714Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhuehzb500197soo1awy0vmq","content":"<p>vue中组价的使用方式？<br><a id=\"more\"></a><br>description: </p>\n","site":{"data":{}},"excerpt":"<p>vue中组价的使用方式？<br>","more":"<br>description: </p>"},{"title":"vue中的计算属性 computed","date":"2017-11-07T11:49:48.000Z","description":"vue中使用 computed 时，改变对象的属性，vue无法检测到，通常直接改变这个对象的索引；","_content":"## vue中使用计算属性 computed\n> html Vue:\n\n```vue\n<template>\n    <div>\n        <p>{{cpu_number}}</p>\n        <p>{{cpu_numObj}}</p>\n\n        <p>{{cpu_numObj2}}</p>\n    </div>\n</template>\n```\n> javaScript:\n\n```js\n\ndata() {\n    return {\n        number: 1,\n        numObj: {},\n        numObj2: {},\n    }\n},\ncomputed: {\n    cpu_number: function() {\n        return this.number ++\n    },\n    cpu_numObj: function() {\n        this.numObj.type = '直接改变对象属性'    // 计算属性不会检测到\n        return numObj.type\n    }\n    cpu_numObj2: function() {\n        this.numObj2 = Object.assign({}, {type: '改变了对象索引'})    // 计算属性会检测到\n        return numObj2\n    }\n}\n```\n\n**总结**： vue 计算属性computed可以检测到 `变量`  `数组`  `对象的`变化； 但是 对象的属性变化是不会被检测到的","source":"_posts/frame/vue/vue-study-computed.md","raw":"---\ntitle: vue中的计算属性 computed\ndate: 2017-11-07 19:49:48\ndescription: vue中使用 computed 时，改变对象的属性，vue无法检测到，通常直接改变这个对象的索引；\ntags: [vue知识点]\ncategories: [vue框架]\n---\n## vue中使用计算属性 computed\n> html Vue:\n\n```vue\n<template>\n    <div>\n        <p>{{cpu_number}}</p>\n        <p>{{cpu_numObj}}</p>\n\n        <p>{{cpu_numObj2}}</p>\n    </div>\n</template>\n```\n> javaScript:\n\n```js\n\ndata() {\n    return {\n        number: 1,\n        numObj: {},\n        numObj2: {},\n    }\n},\ncomputed: {\n    cpu_number: function() {\n        return this.number ++\n    },\n    cpu_numObj: function() {\n        this.numObj.type = '直接改变对象属性'    // 计算属性不会检测到\n        return numObj.type\n    }\n    cpu_numObj2: function() {\n        this.numObj2 = Object.assign({}, {type: '改变了对象索引'})    // 计算属性会检测到\n        return numObj2\n    }\n}\n```\n\n**总结**： vue 计算属性computed可以检测到 `变量`  `数组`  `对象的`变化； 但是 对象的属性变化是不会被检测到的","slug":"frame/vue/vue-study-computed","published":1,"updated":"2018-03-30T07:24:43.714Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhuehzb9001c7sooke4o9u7y","content":"<h2 id=\"vue中使用计算属性-computed\"><a href=\"#vue中使用计算属性-computed\" class=\"headerlink\" title=\"vue中使用计算属性 computed\"></a>vue中使用计算属性 computed</h2><blockquote>\n<p>html Vue:</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">        &lt;p&gt;&#123;&#123;cpu_number&#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">        &lt;p&gt;&#123;&#123;cpu_numObj&#125;&#125;&lt;/p&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;p&gt;&#123;&#123;cpu_numObj2&#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>javaScript:</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">data() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        number: <span class=\"number\">1</span>,</span><br><span class=\"line\">        numObj: &#123;&#125;,</span><br><span class=\"line\">        numObj2: &#123;&#125;,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">computed: &#123;</span><br><span class=\"line\">    cpu_number: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.number ++</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    cpu_numObj: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.numObj.type = <span class=\"string\">'直接改变对象属性'</span>    <span class=\"comment\">// 计算属性不会检测到</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> numObj.type</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cpu_numObj2: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.numObj2 = <span class=\"built_in\">Object</span>.assign(&#123;&#125;, &#123;<span class=\"attr\">type</span>: <span class=\"string\">'改变了对象索引'</span>&#125;)    <span class=\"comment\">// 计算属性会检测到</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> numObj2</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>总结</strong>： vue 计算属性computed可以检测到 <code>变量</code>  <code>数组</code>  <code>对象的</code>变化； 但是 对象的属性变化是不会被检测到的</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"vue中使用计算属性-computed\"><a href=\"#vue中使用计算属性-computed\" class=\"headerlink\" title=\"vue中使用计算属性 computed\"></a>vue中使用计算属性 computed</h2><blockquote>\n<p>html Vue:</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">        &lt;p&gt;&#123;&#123;cpu_number&#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">        &lt;p&gt;&#123;&#123;cpu_numObj&#125;&#125;&lt;/p&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;p&gt;&#123;&#123;cpu_numObj2&#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>javaScript:</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">data() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        number: <span class=\"number\">1</span>,</span><br><span class=\"line\">        numObj: &#123;&#125;,</span><br><span class=\"line\">        numObj2: &#123;&#125;,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">computed: &#123;</span><br><span class=\"line\">    cpu_number: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.number ++</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    cpu_numObj: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.numObj.type = <span class=\"string\">'直接改变对象属性'</span>    <span class=\"comment\">// 计算属性不会检测到</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> numObj.type</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cpu_numObj2: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.numObj2 = <span class=\"built_in\">Object</span>.assign(&#123;&#125;, &#123;<span class=\"attr\">type</span>: <span class=\"string\">'改变了对象索引'</span>&#125;)    <span class=\"comment\">// 计算属性会检测到</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> numObj2</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>总结</strong>： vue 计算属性computed可以检测到 <code>变量</code>  <code>数组</code>  <code>对象的</code>变化； 但是 对象的属性变化是不会被检测到的</p>\n"},{"title":"获取浏览器url 参数","date":"2018-02-06T07:16:00.000Z","description":"获取url中参数","_content":"\n#### 1、获取当前url的方法： \n```js\n当前url = 'https://www.jianshu.com/search?q=%E7%BD%91%E7%AB%99%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96&page=1&type=note'\nvar href = window.location.href    // 获取完整 url路径\nvar search = window.location.search  // 获取从？开始的参数部分\n\n```\n#### 2、将url中的参数转换成中文\n 知识点 来自W3C\n\n#####  编码`encodeURI() ` 解码`decodeURI()`\n1. 把字符串作为 URI 进行编码。\n2. 对 / ? : @ & = + $ #  不会转义。\n\n##### 编码 `encodeURIComponent() `  解码 `decodeURICompnent()`\n1. 把字符串作为 URI 组件进行编码。\n2. 不会对 ASCII 字母和数字进行编码，\n3. 也不会对这些 ASCII 标点符号 - _ . ! ~ * ' ( ) 进行编码：\n4. 其他字符（比如 ：;/?:@&=+$,# 这些用于分隔 URI 组件的标点符号），都是由一个或多个十六进制的转义序列替换的。\n\n#### 3、获取URL参数\n```js\nurl = decodeURI(search) // 编码字符 解码\nvar splitIndex = url.indexOf('?')  // 返回第一个？号的位置\nvar str = url.substring(splitIndex + 1) // 获取到查询参数\n\n```\n##### 3.1 获取url中某一个参数的值的方法\n```js\n\nvar getStrParam = function (str, name) {\n    var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\", \"i\");\n    var r = str.match(reg);\n    if (r != null) return r[2];\n    return '';\n}\n```\n##### 3.2 获取url中所有的参数，序列在在一个对象中；\n```js\n\nvar getAllUrlParam = function(str) {\n    var urlArr = str.split('&')\n    var obj = {}\n    for(var i = 0; i < urlArr.length; i++) {\n        var arg = urlArr[i].split('=')\n        obj[arg[0]] = arg[1]\n    }\n    return obj\n}\n```\n***\n**一道练手题送给大家：**   \n将URL中的参数序列化在一个对象中，相同的key存放在一个数组中，值为空的key，默认为true？\n```js\nvar url = 'https://www.jianshu.com/search?q=%E5%8F%82%E6%95%B0&page=1&type=&key=aa&key=bb&'\n```\n\n预期结果：\n```js\nobj = {\n    q: '参数',  // 中文\n    page: \"1\",\n    type: true, // 空值为ture\n    key: [\"aa\", \"bb\"] // 相同的key放在数组中\n}\n```","source":"_posts/js/common/parseUrlParams.md","raw":"---\ntitle: 获取浏览器url 参数\ndate: 2018-02-06 15:16:00\ndescription: \"获取url中参数\"\ntags: [算法]\ncategories: [JavaScript]\n---\n\n#### 1、获取当前url的方法： \n```js\n当前url = 'https://www.jianshu.com/search?q=%E7%BD%91%E7%AB%99%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96&page=1&type=note'\nvar href = window.location.href    // 获取完整 url路径\nvar search = window.location.search  // 获取从？开始的参数部分\n\n```\n#### 2、将url中的参数转换成中文\n 知识点 来自W3C\n\n#####  编码`encodeURI() ` 解码`decodeURI()`\n1. 把字符串作为 URI 进行编码。\n2. 对 / ? : @ & = + $ #  不会转义。\n\n##### 编码 `encodeURIComponent() `  解码 `decodeURICompnent()`\n1. 把字符串作为 URI 组件进行编码。\n2. 不会对 ASCII 字母和数字进行编码，\n3. 也不会对这些 ASCII 标点符号 - _ . ! ~ * ' ( ) 进行编码：\n4. 其他字符（比如 ：;/?:@&=+$,# 这些用于分隔 URI 组件的标点符号），都是由一个或多个十六进制的转义序列替换的。\n\n#### 3、获取URL参数\n```js\nurl = decodeURI(search) // 编码字符 解码\nvar splitIndex = url.indexOf('?')  // 返回第一个？号的位置\nvar str = url.substring(splitIndex + 1) // 获取到查询参数\n\n```\n##### 3.1 获取url中某一个参数的值的方法\n```js\n\nvar getStrParam = function (str, name) {\n    var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\", \"i\");\n    var r = str.match(reg);\n    if (r != null) return r[2];\n    return '';\n}\n```\n##### 3.2 获取url中所有的参数，序列在在一个对象中；\n```js\n\nvar getAllUrlParam = function(str) {\n    var urlArr = str.split('&')\n    var obj = {}\n    for(var i = 0; i < urlArr.length; i++) {\n        var arg = urlArr[i].split('=')\n        obj[arg[0]] = arg[1]\n    }\n    return obj\n}\n```\n***\n**一道练手题送给大家：**   \n将URL中的参数序列化在一个对象中，相同的key存放在一个数组中，值为空的key，默认为true？\n```js\nvar url = 'https://www.jianshu.com/search?q=%E5%8F%82%E6%95%B0&page=1&type=&key=aa&key=bb&'\n```\n\n预期结果：\n```js\nobj = {\n    q: '参数',  // 中文\n    page: \"1\",\n    type: true, // 空值为ture\n    key: [\"aa\", \"bb\"] // 相同的key放在数组中\n}\n```","slug":"js/common/parseUrlParams","published":1,"updated":"2018-03-30T07:24:43.715Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhuehzbb001d7soovv1ehd52","content":"<h4 id=\"1、获取当前url的方法：\"><a href=\"#1、获取当前url的方法：\" class=\"headerlink\" title=\"1、获取当前url的方法：\"></a>1、获取当前url的方法：</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">当前url = <span class=\"string\">'https://www.jianshu.com/search?q=%E7%BD%91%E7%AB%99%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96&amp;page=1&amp;type=note'</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> href = <span class=\"built_in\">window</span>.location.href    <span class=\"comment\">// 获取完整 url路径</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> search = <span class=\"built_in\">window</span>.location.search  <span class=\"comment\">// 获取从？开始的参数部分</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2、将url中的参数转换成中文\"><a href=\"#2、将url中的参数转换成中文\" class=\"headerlink\" title=\"2、将url中的参数转换成中文\"></a>2、将url中的参数转换成中文</h4><p> 知识点 来自W3C</p>\n<h5 id=\"编码encodeURI-解码decodeURI\"><a href=\"#编码encodeURI-解码decodeURI\" class=\"headerlink\" title=\"编码encodeURI() 解码decodeURI()\"></a>编码<code>encodeURI()</code> 解码<code>decodeURI()</code></h5><ol>\n<li>把字符串作为 URI 进行编码。</li>\n<li>对 / ? : @ &amp; = + $ #  不会转义。</li>\n</ol>\n<h5 id=\"编码-encodeURIComponent-解码-decodeURICompnent\"><a href=\"#编码-encodeURIComponent-解码-decodeURICompnent\" class=\"headerlink\" title=\"编码 encodeURIComponent()  解码 decodeURICompnent()\"></a>编码 <code>encodeURIComponent()</code>  解码 <code>decodeURICompnent()</code></h5><ol>\n<li>把字符串作为 URI 组件进行编码。</li>\n<li>不会对 ASCII 字母和数字进行编码，</li>\n<li>也不会对这些 ASCII 标点符号 - _ . ! ~ * ‘ ( ) 进行编码：</li>\n<li>其他字符（比如 ：;/?:@&amp;=+$,# 这些用于分隔 URI 组件的标点符号），都是由一个或多个十六进制的转义序列替换的。</li>\n</ol>\n<h4 id=\"3、获取URL参数\"><a href=\"#3、获取URL参数\" class=\"headerlink\" title=\"3、获取URL参数\"></a>3、获取URL参数</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url = <span class=\"built_in\">decodeURI</span>(search) <span class=\"comment\">// 编码字符 解码</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> splitIndex = url.indexOf(<span class=\"string\">'?'</span>)  <span class=\"comment\">// 返回第一个？号的位置</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str = url.substring(splitIndex + <span class=\"number\">1</span>) <span class=\"comment\">// 获取到查询参数</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"3-1-获取url中某一个参数的值的方法\"><a href=\"#3-1-获取url中某一个参数的值的方法\" class=\"headerlink\" title=\"3.1 获取url中某一个参数的值的方法\"></a>3.1 获取url中某一个参数的值的方法</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> getStrParam = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">str, name</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> reg = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">\"(^|&amp;)\"</span> + name + <span class=\"string\">\"=([^&amp;]*)(&amp;|$)\"</span>, <span class=\"string\">\"i\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> r = str.match(reg);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (r != <span class=\"literal\">null</span>) <span class=\"keyword\">return</span> r[<span class=\"number\">2</span>];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">''</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-2-获取url中所有的参数，序列在在一个对象中；\"><a href=\"#3-2-获取url中所有的参数，序列在在一个对象中；\" class=\"headerlink\" title=\"3.2 获取url中所有的参数，序列在在一个对象中；\"></a>3.2 获取url中所有的参数，序列在在一个对象中；</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> getAllUrlParam = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> urlArr = str.split(<span class=\"string\">'&amp;'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">var</span> obj = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; urlArr.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> arg = urlArr[i].split(<span class=\"string\">'='</span>)</span><br><span class=\"line\">        obj[arg[<span class=\"number\">0</span>]] = arg[<span class=\"number\">1</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<p><strong>一道练手题送给大家：</strong><br>将URL中的参数序列化在一个对象中，相同的key存放在一个数组中，值为空的key，默认为true？<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> url = <span class=\"string\">'https://www.jianshu.com/search?q=%E5%8F%82%E6%95%B0&amp;page=1&amp;type=&amp;key=aa&amp;key=bb&amp;'</span></span><br></pre></td></tr></table></figure></p>\n<p>预期结果：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">obj = &#123;</span><br><span class=\"line\">    q: <span class=\"string\">'参数'</span>,  <span class=\"comment\">// 中文</span></span><br><span class=\"line\">    page: <span class=\"string\">\"1\"</span>,</span><br><span class=\"line\">    type: <span class=\"literal\">true</span>, <span class=\"comment\">// 空值为ture</span></span><br><span class=\"line\">    key: [<span class=\"string\">\"aa\"</span>, <span class=\"string\">\"bb\"</span>] <span class=\"comment\">// 相同的key放在数组中</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1、获取当前url的方法：\"><a href=\"#1、获取当前url的方法：\" class=\"headerlink\" title=\"1、获取当前url的方法：\"></a>1、获取当前url的方法：</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">当前url = <span class=\"string\">'https://www.jianshu.com/search?q=%E7%BD%91%E7%AB%99%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96&amp;page=1&amp;type=note'</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> href = <span class=\"built_in\">window</span>.location.href    <span class=\"comment\">// 获取完整 url路径</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> search = <span class=\"built_in\">window</span>.location.search  <span class=\"comment\">// 获取从？开始的参数部分</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2、将url中的参数转换成中文\"><a href=\"#2、将url中的参数转换成中文\" class=\"headerlink\" title=\"2、将url中的参数转换成中文\"></a>2、将url中的参数转换成中文</h4><p> 知识点 来自W3C</p>\n<h5 id=\"编码encodeURI-解码decodeURI\"><a href=\"#编码encodeURI-解码decodeURI\" class=\"headerlink\" title=\"编码encodeURI() 解码decodeURI()\"></a>编码<code>encodeURI()</code> 解码<code>decodeURI()</code></h5><ol>\n<li>把字符串作为 URI 进行编码。</li>\n<li>对 / ? : @ &amp; = + $ #  不会转义。</li>\n</ol>\n<h5 id=\"编码-encodeURIComponent-解码-decodeURICompnent\"><a href=\"#编码-encodeURIComponent-解码-decodeURICompnent\" class=\"headerlink\" title=\"编码 encodeURIComponent()  解码 decodeURICompnent()\"></a>编码 <code>encodeURIComponent()</code>  解码 <code>decodeURICompnent()</code></h5><ol>\n<li>把字符串作为 URI 组件进行编码。</li>\n<li>不会对 ASCII 字母和数字进行编码，</li>\n<li>也不会对这些 ASCII 标点符号 - _ . ! ~ * ‘ ( ) 进行编码：</li>\n<li>其他字符（比如 ：;/?:@&amp;=+$,# 这些用于分隔 URI 组件的标点符号），都是由一个或多个十六进制的转义序列替换的。</li>\n</ol>\n<h4 id=\"3、获取URL参数\"><a href=\"#3、获取URL参数\" class=\"headerlink\" title=\"3、获取URL参数\"></a>3、获取URL参数</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url = <span class=\"built_in\">decodeURI</span>(search) <span class=\"comment\">// 编码字符 解码</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> splitIndex = url.indexOf(<span class=\"string\">'?'</span>)  <span class=\"comment\">// 返回第一个？号的位置</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str = url.substring(splitIndex + <span class=\"number\">1</span>) <span class=\"comment\">// 获取到查询参数</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"3-1-获取url中某一个参数的值的方法\"><a href=\"#3-1-获取url中某一个参数的值的方法\" class=\"headerlink\" title=\"3.1 获取url中某一个参数的值的方法\"></a>3.1 获取url中某一个参数的值的方法</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> getStrParam = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">str, name</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> reg = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">\"(^|&amp;)\"</span> + name + <span class=\"string\">\"=([^&amp;]*)(&amp;|$)\"</span>, <span class=\"string\">\"i\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> r = str.match(reg);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (r != <span class=\"literal\">null</span>) <span class=\"keyword\">return</span> r[<span class=\"number\">2</span>];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">''</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-2-获取url中所有的参数，序列在在一个对象中；\"><a href=\"#3-2-获取url中所有的参数，序列在在一个对象中；\" class=\"headerlink\" title=\"3.2 获取url中所有的参数，序列在在一个对象中；\"></a>3.2 获取url中所有的参数，序列在在一个对象中；</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> getAllUrlParam = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> urlArr = str.split(<span class=\"string\">'&amp;'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">var</span> obj = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; urlArr.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> arg = urlArr[i].split(<span class=\"string\">'='</span>)</span><br><span class=\"line\">        obj[arg[<span class=\"number\">0</span>]] = arg[<span class=\"number\">1</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<p><strong>一道练手题送给大家：</strong><br>将URL中的参数序列化在一个对象中，相同的key存放在一个数组中，值为空的key，默认为true？<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> url = <span class=\"string\">'https://www.jianshu.com/search?q=%E5%8F%82%E6%95%B0&amp;page=1&amp;type=&amp;key=aa&amp;key=bb&amp;'</span></span><br></pre></td></tr></table></figure></p>\n<p>预期结果：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">obj = &#123;</span><br><span class=\"line\">    q: <span class=\"string\">'参数'</span>,  <span class=\"comment\">// 中文</span></span><br><span class=\"line\">    page: <span class=\"string\">\"1\"</span>,</span><br><span class=\"line\">    type: <span class=\"literal\">true</span>, <span class=\"comment\">// 空值为ture</span></span><br><span class=\"line\">    key: [<span class=\"string\">\"aa\"</span>, <span class=\"string\">\"bb\"</span>] <span class=\"comment\">// 相同的key放在数组中</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"每个JavaScript程序员都需要知道的5个数组方法","date":"2017-11-07T07:16:00.000Z","description":"操作数组的5个方法，forEach、map、filter、indexOf、every","_content":"### Array.forEach()\n> .forEach() 方法能够方便的让你 遍历数组里的每个元素，你可以在回调函数里对每个元素进行操作。\n .forEach()方法没有返回值，你不需要在回调函数里写return，这是无意义的。\n\n```js\nvar score = ['9', '13', '10'];\nscore.forEach(function(item, index){\n    console.log(item, index)\n});\n    //  9  0\n    // 13  1\n    // 10  2\n```\n\n### Array.map()\n>   .map() 方法能够遍历整个数组，然后 返回一个新数组，这个新数组里的元素是经过了指定的回调函数处理过的。\n> 如果你想修改数组里的每个元素，然后将修改后的数组存入新的数组，那使用 .map() 方法最方便。\n\n```js\nvar numbers = [2, 4, 6, 8];\n\nvar doubleNums = numbers.map(function(element) {\n    return element * 2;\n});\nconsole.log('doubleNums: ', doubleNums)\n```\n\n\n### Array.filter()\n> .filter() 方法能够 过滤掉数组中的某些元素，你可以在回调函数里设定条件，不符合条件的元素都会排除在外。\n\n```js\nvar scores = [3, 12, 5, 23, 19, 7];\n\nvar topScores = scores.filter(function(item){\n    if (item > 10){\n        return true;\n    } else {\n        return false;\n    }\n});\n\nconsole.log('topScores: ', topScores);\n```\n\n\n### Array.indexOf()\n> indexOf() 能够告诉你 某个元素在数组中的位置，它返回的是索引值，如果数组里有重复的元素，它会返回第一个元素的位置。\n\n```js\nvar a = [2, 9, 9, 18];\nvar i = a.indexOf(9);\nconsole.log('i: ', i);\n/*\nif (a.indexOf(7) === -1) {\n  // 数组中没有这个元素\n}*/\n```\n\n\n### Array.every()\n> .every() 方法的作用是用指定的回调函数去检查数组中的每个元素，如果对于每个元素，这个回调函数都返回true，则.every()返回true。否则，.every() 返回false。\n如果你想知道数组中的所有元素都是否符合某种条件，使用 .every() 最方便。\n\n```js\nvar ages = [23, 19, 32, 44];\n\nvar olderThan18 = ages.every(function(element) {\n    return element > 18;\n});\n\nconsole.log('olderThan18: ', olderThan18);\n```\n\nTips: 上面的这5个方法只是很多JavaScript方法中关于数组的最重要的几个，还有很多关于数组的方法、工具包(lodash and underscore)等都非常的有用。\n","source":"_posts/js/array/array-method-01.md","raw":"---\ntitle: 每个JavaScript程序员都需要知道的5个数组方法\ndate: 2017-11-7 15:16:00\ndescription: \"操作数组的5个方法，forEach、map、filter、indexOf、every\"\ntags: [数组]\ncategories: [JavaScript]\n---\n### Array.forEach()\n> .forEach() 方法能够方便的让你 遍历数组里的每个元素，你可以在回调函数里对每个元素进行操作。\n .forEach()方法没有返回值，你不需要在回调函数里写return，这是无意义的。\n\n```js\nvar score = ['9', '13', '10'];\nscore.forEach(function(item, index){\n    console.log(item, index)\n});\n    //  9  0\n    // 13  1\n    // 10  2\n```\n\n### Array.map()\n>   .map() 方法能够遍历整个数组，然后 返回一个新数组，这个新数组里的元素是经过了指定的回调函数处理过的。\n> 如果你想修改数组里的每个元素，然后将修改后的数组存入新的数组，那使用 .map() 方法最方便。\n\n```js\nvar numbers = [2, 4, 6, 8];\n\nvar doubleNums = numbers.map(function(element) {\n    return element * 2;\n});\nconsole.log('doubleNums: ', doubleNums)\n```\n\n\n### Array.filter()\n> .filter() 方法能够 过滤掉数组中的某些元素，你可以在回调函数里设定条件，不符合条件的元素都会排除在外。\n\n```js\nvar scores = [3, 12, 5, 23, 19, 7];\n\nvar topScores = scores.filter(function(item){\n    if (item > 10){\n        return true;\n    } else {\n        return false;\n    }\n});\n\nconsole.log('topScores: ', topScores);\n```\n\n\n### Array.indexOf()\n> indexOf() 能够告诉你 某个元素在数组中的位置，它返回的是索引值，如果数组里有重复的元素，它会返回第一个元素的位置。\n\n```js\nvar a = [2, 9, 9, 18];\nvar i = a.indexOf(9);\nconsole.log('i: ', i);\n/*\nif (a.indexOf(7) === -1) {\n  // 数组中没有这个元素\n}*/\n```\n\n\n### Array.every()\n> .every() 方法的作用是用指定的回调函数去检查数组中的每个元素，如果对于每个元素，这个回调函数都返回true，则.every()返回true。否则，.every() 返回false。\n如果你想知道数组中的所有元素都是否符合某种条件，使用 .every() 最方便。\n\n```js\nvar ages = [23, 19, 32, 44];\n\nvar olderThan18 = ages.every(function(element) {\n    return element > 18;\n});\n\nconsole.log('olderThan18: ', olderThan18);\n```\n\nTips: 上面的这5个方法只是很多JavaScript方法中关于数组的最重要的几个，还有很多关于数组的方法、工具包(lodash and underscore)等都非常的有用。\n","slug":"js/array/array-method-01","published":1,"updated":"2018-03-30T07:24:43.714Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhuehzbd001e7soon82bppae","content":"<h3 id=\"Array-forEach\"><a href=\"#Array-forEach\" class=\"headerlink\" title=\"Array.forEach()\"></a>Array.forEach()</h3><blockquote>\n<p>.forEach() 方法能够方便的让你 遍历数组里的每个元素，你可以在回调函数里对每个元素进行操作。<br> .forEach()方法没有返回值，你不需要在回调函数里写return，这是无意义的。</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> score = [<span class=\"string\">'9'</span>, <span class=\"string\">'13'</span>, <span class=\"string\">'10'</span>];</span><br><span class=\"line\">score.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item, index</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(item, index)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">    <span class=\"comment\">//  9  0</span></span><br><span class=\"line\">    <span class=\"comment\">// 13  1</span></span><br><span class=\"line\">    <span class=\"comment\">// 10  2</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Array-map\"><a href=\"#Array-map\" class=\"headerlink\" title=\"Array.map()\"></a>Array.map()</h3><blockquote>\n<p>  .map() 方法能够遍历整个数组，然后 返回一个新数组，这个新数组里的元素是经过了指定的回调函数处理过的。<br>如果你想修改数组里的每个元素，然后将修改后的数组存入新的数组，那使用 .map() 方法最方便。</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> numbers = [<span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> doubleNums = numbers.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">element</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> element * <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'doubleNums: '</span>, doubleNums)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Array-filter\"><a href=\"#Array-filter\" class=\"headerlink\" title=\"Array.filter()\"></a>Array.filter()</h3><blockquote>\n<p>.filter() 方法能够 过滤掉数组中的某些元素，你可以在回调函数里设定条件，不符合条件的元素都会排除在外。</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> scores = [<span class=\"number\">3</span>, <span class=\"number\">12</span>, <span class=\"number\">5</span>, <span class=\"number\">23</span>, <span class=\"number\">19</span>, <span class=\"number\">7</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> topScores = scores.filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item &gt; <span class=\"number\">10</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'topScores: '</span>, topScores);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Array-indexOf\"><a href=\"#Array-indexOf\" class=\"headerlink\" title=\"Array.indexOf()\"></a>Array.indexOf()</h3><blockquote>\n<p>indexOf() 能够告诉你 某个元素在数组中的位置，它返回的是索引值，如果数组里有重复的元素，它会返回第一个元素的位置。</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">2</span>, <span class=\"number\">9</span>, <span class=\"number\">9</span>, <span class=\"number\">18</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> i = a.indexOf(<span class=\"number\">9</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'i: '</span>, i);</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">if (a.indexOf(7) === -1) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">  // 数组中没有这个元素</span></span><br><span class=\"line\"><span class=\"comment\">&#125;*/</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Array-every\"><a href=\"#Array-every\" class=\"headerlink\" title=\"Array.every()\"></a>Array.every()</h3><blockquote>\n<p>.every() 方法的作用是用指定的回调函数去检查数组中的每个元素，如果对于每个元素，这个回调函数都返回true，则.every()返回true。否则，.every() 返回false。<br>如果你想知道数组中的所有元素都是否符合某种条件，使用 .every() 最方便。</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ages = [<span class=\"number\">23</span>, <span class=\"number\">19</span>, <span class=\"number\">32</span>, <span class=\"number\">44</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> olderThan18 = ages.every(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">element</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> element &gt; <span class=\"number\">18</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'olderThan18: '</span>, olderThan18);</span><br></pre></td></tr></table></figure>\n<p>Tips: 上面的这5个方法只是很多JavaScript方法中关于数组的最重要的几个，还有很多关于数组的方法、工具包(lodash and underscore)等都非常的有用。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Array-forEach\"><a href=\"#Array-forEach\" class=\"headerlink\" title=\"Array.forEach()\"></a>Array.forEach()</h3><blockquote>\n<p>.forEach() 方法能够方便的让你 遍历数组里的每个元素，你可以在回调函数里对每个元素进行操作。<br> .forEach()方法没有返回值，你不需要在回调函数里写return，这是无意义的。</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> score = [<span class=\"string\">'9'</span>, <span class=\"string\">'13'</span>, <span class=\"string\">'10'</span>];</span><br><span class=\"line\">score.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item, index</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(item, index)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">    <span class=\"comment\">//  9  0</span></span><br><span class=\"line\">    <span class=\"comment\">// 13  1</span></span><br><span class=\"line\">    <span class=\"comment\">// 10  2</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Array-map\"><a href=\"#Array-map\" class=\"headerlink\" title=\"Array.map()\"></a>Array.map()</h3><blockquote>\n<p>  .map() 方法能够遍历整个数组，然后 返回一个新数组，这个新数组里的元素是经过了指定的回调函数处理过的。<br>如果你想修改数组里的每个元素，然后将修改后的数组存入新的数组，那使用 .map() 方法最方便。</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> numbers = [<span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> doubleNums = numbers.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">element</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> element * <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'doubleNums: '</span>, doubleNums)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Array-filter\"><a href=\"#Array-filter\" class=\"headerlink\" title=\"Array.filter()\"></a>Array.filter()</h3><blockquote>\n<p>.filter() 方法能够 过滤掉数组中的某些元素，你可以在回调函数里设定条件，不符合条件的元素都会排除在外。</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> scores = [<span class=\"number\">3</span>, <span class=\"number\">12</span>, <span class=\"number\">5</span>, <span class=\"number\">23</span>, <span class=\"number\">19</span>, <span class=\"number\">7</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> topScores = scores.filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item &gt; <span class=\"number\">10</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'topScores: '</span>, topScores);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Array-indexOf\"><a href=\"#Array-indexOf\" class=\"headerlink\" title=\"Array.indexOf()\"></a>Array.indexOf()</h3><blockquote>\n<p>indexOf() 能够告诉你 某个元素在数组中的位置，它返回的是索引值，如果数组里有重复的元素，它会返回第一个元素的位置。</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">2</span>, <span class=\"number\">9</span>, <span class=\"number\">9</span>, <span class=\"number\">18</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> i = a.indexOf(<span class=\"number\">9</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'i: '</span>, i);</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">if (a.indexOf(7) === -1) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">  // 数组中没有这个元素</span></span><br><span class=\"line\"><span class=\"comment\">&#125;*/</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Array-every\"><a href=\"#Array-every\" class=\"headerlink\" title=\"Array.every()\"></a>Array.every()</h3><blockquote>\n<p>.every() 方法的作用是用指定的回调函数去检查数组中的每个元素，如果对于每个元素，这个回调函数都返回true，则.every()返回true。否则，.every() 返回false。<br>如果你想知道数组中的所有元素都是否符合某种条件，使用 .every() 最方便。</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ages = [<span class=\"number\">23</span>, <span class=\"number\">19</span>, <span class=\"number\">32</span>, <span class=\"number\">44</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> olderThan18 = ages.every(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">element</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> element &gt; <span class=\"number\">18</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'olderThan18: '</span>, olderThan18);</span><br></pre></td></tr></table></figure>\n<p>Tips: 上面的这5个方法只是很多JavaScript方法中关于数组的最重要的几个，还有很多关于数组的方法、工具包(lodash and underscore)等都非常的有用。</p>\n"},{"title":"javascript之call的用法","date":"2017-11-07T04:35:00.000Z","description":"从零来理解javascript中的call的用法","_content":"## 正文开始\n**一说到call**，\n\n————总是**`call`**、‘张三’、‘李四’的区别什么什么的，说的很清楚，转身还是傻傻分不清楚他们的区别了，相似的事情总是喜欢一起来说，这对于新手来说总是容易混乱的，今天就来理解下call的用法；\n\n**通俗点：**\n> **`call`**的作用就是： **改变函数执行时的上下文** 也就是`this`的指向;\n### 用法：\n    Food.call(thisArg, arg1, arg2, ...)\n\n### 来看个例子 --- A\n\n\n```js\nfunction fun(){\n\tthis.name = 'fun-name'\n\tthis.age = 'fun-age'\n}\n var wrap = {\n \tage: 'default',\n \tname: 'default',\n \tmyfun: function() {\n \t\tfun()\n \t}\n}\n\nwrap.myfun();\nconsole.log(wrap.age)   // 'default-age'\nconsole.log(window.age)  // 'fun-age'\n```\n直接运行这个函数 **`wrap.myfun(); `**\n> \n执行这个函数后\n1、在`wrap`下面执行`myfun()`后，其中的`this`指向`window`全局的\n2、在`window`全局下面创建了一个 `age`属性，值为 `'fun-age'`\n3、`wrap`中的`age`还是`default`\n\n\n### 来看个例子 --- B\n```js\nfunction fun(){\n\tthis.name = 'fun-name'\n\tthis.age = 'fun-age'\n}\n var wrap = {\n \tage: 'default',\n \tname: 'default',\n \tobj: function() {\n \t\tfun.call(this)      // **---注意这里打 call 了---**\n \t}\n}\n\nwrap.myfun();\nconsole.log(wrap.age)   // 'fun-age'        --发生了变化---\nconsole.log(window.age)  // 'age is not defined'   --发生了变化---\n```\n例子B运行时：\n\n> `wrap.obj()`执行后，在执行`fun`时，把`this`， call进去了, 这个`this`是指向`wrap`，所以`fun`执行时其中的`this`指向的是`wrap`，自然改变的就是`wrap`中的`age`，这就是`call`的作用改变了`fun`执行时的上下文；\n\n好累，反正我是大概懂了他（this）刚才干了什么；\n***\n那么在我们的coding中，一般什么时候用到call了？\n## call的用法\n### 利用call来 做继承\n```js\nvar Person = function () {\n    this.fun = function() { \n        console.log('longlee') }\n};\nvar student = function () {\n    Person.call(this);\n};\n\nvar st = new student ();\n\ng1.fun()  // 输出： longlee\n```\n如果不在student函数中执行 call，new出来的实例是没有fun属性方法的；打call就可以实现继承Person方法了；\n### 判断数据的类型 \n> 【object、 array、 null】\n```js\nvar obj1 = {name: 'longlee'}\nvar obj2 = ['longlee']\nvar obj3 = null\n\nObject.prototype.toString.call(obj1)    // \"[object Object]\"\nObject.prototype.toString.call(obj2)    // \"[object Array]\"\nObject.prototype.toString.call(obj3)    // \"[object Null]\"\nObject.prototype.toString.call(12)      // \"[object Number]\"\n....\n....\n ```\n ### 类（伪）数组使用数组方法\n```js\nvar arg = Array.prototype.slice.call(arguments);\narguments是函数接收的实际参数个数，他是一个伪数组，不具有数组的一般方法。比如 push、pop...,\n\n但是我们能通过 Array.prototype.slice.call 转换为真正的数组\n这样 arguments 就可以应用 Array 下的所有方法了。\n```\n### 获取数组中的最大值和最小值\n```js\nmaxInNumbers = Math.max.call(Math, 55, 888 , 521 , -36); // 888\nnumber 本身没有 max 方法，但是 Math 有，我们就可以借助 call 使用其方法。\n\n```\n\n就说到这了，再说下去，我自己也快消化不良了、、、、\n\n\n***\n题外话：\n说到数组的最大值、最小值。我控制不住自己了，一个ES6的简洁方法\n`Math.max(...[2,1,3])`  // 3\n`Math.min(...[2,1,3])`  // 1\n\n个人见解，有误之处，大神请指出，以免改正！\n弄懂 call 了。可以继续打 call 了","source":"_posts/js/array/js-call.md","raw":"---\ntitle: javascript之call的用法\ndate: 2017-11-07 12:35:00\ndescription: \"从零来理解javascript中的call的用法\"\ntags: [js知识点总结]\ncategories: [JavaScript]\n---\n## 正文开始\n**一说到call**，\n\n————总是**`call`**、‘张三’、‘李四’的区别什么什么的，说的很清楚，转身还是傻傻分不清楚他们的区别了，相似的事情总是喜欢一起来说，这对于新手来说总是容易混乱的，今天就来理解下call的用法；\n\n**通俗点：**\n> **`call`**的作用就是： **改变函数执行时的上下文** 也就是`this`的指向;\n### 用法：\n    Food.call(thisArg, arg1, arg2, ...)\n\n### 来看个例子 --- A\n\n\n```js\nfunction fun(){\n\tthis.name = 'fun-name'\n\tthis.age = 'fun-age'\n}\n var wrap = {\n \tage: 'default',\n \tname: 'default',\n \tmyfun: function() {\n \t\tfun()\n \t}\n}\n\nwrap.myfun();\nconsole.log(wrap.age)   // 'default-age'\nconsole.log(window.age)  // 'fun-age'\n```\n直接运行这个函数 **`wrap.myfun(); `**\n> \n执行这个函数后\n1、在`wrap`下面执行`myfun()`后，其中的`this`指向`window`全局的\n2、在`window`全局下面创建了一个 `age`属性，值为 `'fun-age'`\n3、`wrap`中的`age`还是`default`\n\n\n### 来看个例子 --- B\n```js\nfunction fun(){\n\tthis.name = 'fun-name'\n\tthis.age = 'fun-age'\n}\n var wrap = {\n \tage: 'default',\n \tname: 'default',\n \tobj: function() {\n \t\tfun.call(this)      // **---注意这里打 call 了---**\n \t}\n}\n\nwrap.myfun();\nconsole.log(wrap.age)   // 'fun-age'        --发生了变化---\nconsole.log(window.age)  // 'age is not defined'   --发生了变化---\n```\n例子B运行时：\n\n> `wrap.obj()`执行后，在执行`fun`时，把`this`， call进去了, 这个`this`是指向`wrap`，所以`fun`执行时其中的`this`指向的是`wrap`，自然改变的就是`wrap`中的`age`，这就是`call`的作用改变了`fun`执行时的上下文；\n\n好累，反正我是大概懂了他（this）刚才干了什么；\n***\n那么在我们的coding中，一般什么时候用到call了？\n## call的用法\n### 利用call来 做继承\n```js\nvar Person = function () {\n    this.fun = function() { \n        console.log('longlee') }\n};\nvar student = function () {\n    Person.call(this);\n};\n\nvar st = new student ();\n\ng1.fun()  // 输出： longlee\n```\n如果不在student函数中执行 call，new出来的实例是没有fun属性方法的；打call就可以实现继承Person方法了；\n### 判断数据的类型 \n> 【object、 array、 null】\n```js\nvar obj1 = {name: 'longlee'}\nvar obj2 = ['longlee']\nvar obj3 = null\n\nObject.prototype.toString.call(obj1)    // \"[object Object]\"\nObject.prototype.toString.call(obj2)    // \"[object Array]\"\nObject.prototype.toString.call(obj3)    // \"[object Null]\"\nObject.prototype.toString.call(12)      // \"[object Number]\"\n....\n....\n ```\n ### 类（伪）数组使用数组方法\n```js\nvar arg = Array.prototype.slice.call(arguments);\narguments是函数接收的实际参数个数，他是一个伪数组，不具有数组的一般方法。比如 push、pop...,\n\n但是我们能通过 Array.prototype.slice.call 转换为真正的数组\n这样 arguments 就可以应用 Array 下的所有方法了。\n```\n### 获取数组中的最大值和最小值\n```js\nmaxInNumbers = Math.max.call(Math, 55, 888 , 521 , -36); // 888\nnumber 本身没有 max 方法，但是 Math 有，我们就可以借助 call 使用其方法。\n\n```\n\n就说到这了，再说下去，我自己也快消化不良了、、、、\n\n\n***\n题外话：\n说到数组的最大值、最小值。我控制不住自己了，一个ES6的简洁方法\n`Math.max(...[2,1,3])`  // 3\n`Math.min(...[2,1,3])`  // 1\n\n个人见解，有误之处，大神请指出，以免改正！\n弄懂 call 了。可以继续打 call 了","slug":"js/array/js-call","published":1,"updated":"2018-03-30T07:24:43.715Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhuehzbg001i7sooobrbkboe","content":"<h2 id=\"正文开始\"><a href=\"#正文开始\" class=\"headerlink\" title=\"正文开始\"></a>正文开始</h2><p><strong>一说到call</strong>，</p>\n<p>————总是<strong><code>call</code></strong>、‘张三’、‘李四’的区别什么什么的，说的很清楚，转身还是傻傻分不清楚他们的区别了，相似的事情总是喜欢一起来说，这对于新手来说总是容易混乱的，今天就来理解下call的用法；</p>\n<p><strong>通俗点：</strong></p>\n<blockquote>\n<p><strong><code>call</code></strong>的作用就是： <strong>改变函数执行时的上下文</strong> 也就是<code>this</code>的指向;</p>\n</blockquote>\n<h3 id=\"用法：\"><a href=\"#用法：\" class=\"headerlink\" title=\"用法：\"></a>用法：</h3><pre><code>Food.call(thisArg, arg1, arg2, ...)\n</code></pre><h3 id=\"来看个例子-—-A\"><a href=\"#来看个例子-—-A\" class=\"headerlink\" title=\"来看个例子 — A\"></a>来看个例子 — A</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fun</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.name = <span class=\"string\">'fun-name'</span></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.age = <span class=\"string\">'fun-age'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> <span class=\"keyword\">var</span> wrap = &#123;</span><br><span class=\"line\"> \tage: <span class=\"string\">'default'</span>,</span><br><span class=\"line\"> \tname: <span class=\"string\">'default'</span>,</span><br><span class=\"line\"> \tmyfun: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"> \t\tfun()</span><br><span class=\"line\"> \t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">wrap.myfun();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(wrap.age)   <span class=\"comment\">// 'default-age'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">window</span>.age)  <span class=\"comment\">// 'fun-age'</span></span><br></pre></td></tr></table></figure>\n<p>直接运行这个函数 <strong><code>wrap.myfun();</code></strong></p>\n<blockquote>\n</blockquote>\n<p>执行这个函数后<br>1、在<code>wrap</code>下面执行<code>myfun()</code>后，其中的<code>this</code>指向<code>window</code>全局的<br>2、在<code>window</code>全局下面创建了一个 <code>age</code>属性，值为 <code>&#39;fun-age&#39;</code><br>3、<code>wrap</code>中的<code>age</code>还是<code>default</code></p>\n<h3 id=\"来看个例子-—-B\"><a href=\"#来看个例子-—-B\" class=\"headerlink\" title=\"来看个例子 — B\"></a>来看个例子 — B</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fun</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.name = <span class=\"string\">'fun-name'</span></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.age = <span class=\"string\">'fun-age'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> <span class=\"keyword\">var</span> wrap = &#123;</span><br><span class=\"line\"> \tage: <span class=\"string\">'default'</span>,</span><br><span class=\"line\"> \tname: <span class=\"string\">'default'</span>,</span><br><span class=\"line\"> \tobj: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"> \t\tfun.call(<span class=\"keyword\">this</span>)      <span class=\"comment\">// **---注意这里打 call 了---**</span></span><br><span class=\"line\"> \t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">wrap.myfun();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(wrap.age)   <span class=\"comment\">// 'fun-age'        --发生了变化---</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">window</span>.age)  <span class=\"comment\">// 'age is not defined'   --发生了变化---</span></span><br></pre></td></tr></table></figure>\n<p>例子B运行时：</p>\n<blockquote>\n<p><code>wrap.obj()</code>执行后，在执行<code>fun</code>时，把<code>this</code>， call进去了, 这个<code>this</code>是指向<code>wrap</code>，所以<code>fun</code>执行时其中的<code>this</code>指向的是<code>wrap</code>，自然改变的就是<code>wrap</code>中的<code>age</code>，这就是<code>call</code>的作用改变了<code>fun</code>执行时的上下文；</p>\n</blockquote>\n<p>好累，反正我是大概懂了他（this）刚才干了什么；</p>\n<hr>\n<p>那么在我们的coding中，一般什么时候用到call了？</p>\n<h2 id=\"call的用法\"><a href=\"#call的用法\" class=\"headerlink\" title=\"call的用法\"></a>call的用法</h2><h3 id=\"利用call来-做继承\"><a href=\"#利用call来-做继承\" class=\"headerlink\" title=\"利用call来 做继承\"></a>利用call来 做继承</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Person = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.fun = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123; </span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'longlee'</span>) &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> student = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    Person.call(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> st = <span class=\"keyword\">new</span> student ();</span><br><span class=\"line\"></span><br><span class=\"line\">g1.fun()  <span class=\"comment\">// 输出： longlee</span></span><br></pre></td></tr></table></figure>\n<p>如果不在student函数中执行 call，new出来的实例是没有fun属性方法的；打call就可以实现继承Person方法了；</p>\n<h3 id=\"判断数据的类型\"><a href=\"#判断数据的类型\" class=\"headerlink\" title=\"判断数据的类型\"></a>判断数据的类型</h3><blockquote>\n<p>【object、 array、 null】<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj1 = &#123;<span class=\"attr\">name</span>: <span class=\"string\">'longlee'</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = [<span class=\"string\">'longlee'</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj3 = <span class=\"literal\">null</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.toString.call(obj1)    <span class=\"comment\">// \"[object Object]\"</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.toString.call(obj2)    <span class=\"comment\">// \"[object Array]\"</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.toString.call(obj3)    <span class=\"comment\">// \"[object Null]\"</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.toString.call(<span class=\"number\">12</span>)      <span class=\"comment\">// \"[object Number]\"</span></span><br><span class=\"line\">....</span><br><span class=\"line\">....</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h3 id=\"类（伪）数组使用数组方法\"><a href=\"#类（伪）数组使用数组方法\" class=\"headerlink\" title=\"类（伪）数组使用数组方法\"></a>类（伪）数组使用数组方法</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arg = <span class=\"built_in\">Array</span>.prototype.slice.call(<span class=\"built_in\">arguments</span>);</span><br><span class=\"line\"><span class=\"built_in\">arguments</span>是函数接收的实际参数个数，他是一个伪数组，不具有数组的一般方法。比如 push、pop...,</span><br><span class=\"line\"></span><br><span class=\"line\">但是我们能通过 <span class=\"built_in\">Array</span>.prototype.slice.call 转换为真正的数组</span><br><span class=\"line\">这样 <span class=\"built_in\">arguments</span> 就可以应用 <span class=\"built_in\">Array</span> 下的所有方法了。</span><br></pre></td></tr></table></figure>\n<h3 id=\"获取数组中的最大值和最小值\"><a href=\"#获取数组中的最大值和最小值\" class=\"headerlink\" title=\"获取数组中的最大值和最小值\"></a>获取数组中的最大值和最小值</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">maxInNumbers = <span class=\"built_in\">Math</span>.max.call(<span class=\"built_in\">Math</span>, <span class=\"number\">55</span>, <span class=\"number\">888</span> , <span class=\"number\">521</span> , <span class=\"number\">-36</span>); <span class=\"comment\">// 888</span></span><br><span class=\"line\">number 本身没有 max 方法，但是 <span class=\"built_in\">Math</span> 有，我们就可以借助 call 使用其方法。</span><br></pre></td></tr></table></figure>\n<p>就说到这了，再说下去，我自己也快消化不良了、、、、</p>\n<hr>\n<p>题外话：<br>说到数组的最大值、最小值。我控制不住自己了，一个ES6的简洁方法<br><code>Math.max(...[2,1,3])</code>  // 3<br><code>Math.min(...[2,1,3])</code>  // 1</p>\n<p>个人见解，有误之处，大神请指出，以免改正！<br>弄懂 call 了。可以继续打 call 了</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"正文开始\"><a href=\"#正文开始\" class=\"headerlink\" title=\"正文开始\"></a>正文开始</h2><p><strong>一说到call</strong>，</p>\n<p>————总是<strong><code>call</code></strong>、‘张三’、‘李四’的区别什么什么的，说的很清楚，转身还是傻傻分不清楚他们的区别了，相似的事情总是喜欢一起来说，这对于新手来说总是容易混乱的，今天就来理解下call的用法；</p>\n<p><strong>通俗点：</strong></p>\n<blockquote>\n<p><strong><code>call</code></strong>的作用就是： <strong>改变函数执行时的上下文</strong> 也就是<code>this</code>的指向;</p>\n</blockquote>\n<h3 id=\"用法：\"><a href=\"#用法：\" class=\"headerlink\" title=\"用法：\"></a>用法：</h3><pre><code>Food.call(thisArg, arg1, arg2, ...)\n</code></pre><h3 id=\"来看个例子-—-A\"><a href=\"#来看个例子-—-A\" class=\"headerlink\" title=\"来看个例子 — A\"></a>来看个例子 — A</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fun</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.name = <span class=\"string\">'fun-name'</span></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.age = <span class=\"string\">'fun-age'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> <span class=\"keyword\">var</span> wrap = &#123;</span><br><span class=\"line\"> \tage: <span class=\"string\">'default'</span>,</span><br><span class=\"line\"> \tname: <span class=\"string\">'default'</span>,</span><br><span class=\"line\"> \tmyfun: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"> \t\tfun()</span><br><span class=\"line\"> \t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">wrap.myfun();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(wrap.age)   <span class=\"comment\">// 'default-age'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">window</span>.age)  <span class=\"comment\">// 'fun-age'</span></span><br></pre></td></tr></table></figure>\n<p>直接运行这个函数 <strong><code>wrap.myfun();</code></strong></p>\n<blockquote>\n</blockquote>\n<p>执行这个函数后<br>1、在<code>wrap</code>下面执行<code>myfun()</code>后，其中的<code>this</code>指向<code>window</code>全局的<br>2、在<code>window</code>全局下面创建了一个 <code>age</code>属性，值为 <code>&#39;fun-age&#39;</code><br>3、<code>wrap</code>中的<code>age</code>还是<code>default</code></p>\n<h3 id=\"来看个例子-—-B\"><a href=\"#来看个例子-—-B\" class=\"headerlink\" title=\"来看个例子 — B\"></a>来看个例子 — B</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fun</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.name = <span class=\"string\">'fun-name'</span></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.age = <span class=\"string\">'fun-age'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> <span class=\"keyword\">var</span> wrap = &#123;</span><br><span class=\"line\"> \tage: <span class=\"string\">'default'</span>,</span><br><span class=\"line\"> \tname: <span class=\"string\">'default'</span>,</span><br><span class=\"line\"> \tobj: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"> \t\tfun.call(<span class=\"keyword\">this</span>)      <span class=\"comment\">// **---注意这里打 call 了---**</span></span><br><span class=\"line\"> \t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">wrap.myfun();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(wrap.age)   <span class=\"comment\">// 'fun-age'        --发生了变化---</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">window</span>.age)  <span class=\"comment\">// 'age is not defined'   --发生了变化---</span></span><br></pre></td></tr></table></figure>\n<p>例子B运行时：</p>\n<blockquote>\n<p><code>wrap.obj()</code>执行后，在执行<code>fun</code>时，把<code>this</code>， call进去了, 这个<code>this</code>是指向<code>wrap</code>，所以<code>fun</code>执行时其中的<code>this</code>指向的是<code>wrap</code>，自然改变的就是<code>wrap</code>中的<code>age</code>，这就是<code>call</code>的作用改变了<code>fun</code>执行时的上下文；</p>\n</blockquote>\n<p>好累，反正我是大概懂了他（this）刚才干了什么；</p>\n<hr>\n<p>那么在我们的coding中，一般什么时候用到call了？</p>\n<h2 id=\"call的用法\"><a href=\"#call的用法\" class=\"headerlink\" title=\"call的用法\"></a>call的用法</h2><h3 id=\"利用call来-做继承\"><a href=\"#利用call来-做继承\" class=\"headerlink\" title=\"利用call来 做继承\"></a>利用call来 做继承</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Person = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.fun = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123; </span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'longlee'</span>) &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> student = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    Person.call(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> st = <span class=\"keyword\">new</span> student ();</span><br><span class=\"line\"></span><br><span class=\"line\">g1.fun()  <span class=\"comment\">// 输出： longlee</span></span><br></pre></td></tr></table></figure>\n<p>如果不在student函数中执行 call，new出来的实例是没有fun属性方法的；打call就可以实现继承Person方法了；</p>\n<h3 id=\"判断数据的类型\"><a href=\"#判断数据的类型\" class=\"headerlink\" title=\"判断数据的类型\"></a>判断数据的类型</h3><blockquote>\n<p>【object、 array、 null】<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj1 = &#123;<span class=\"attr\">name</span>: <span class=\"string\">'longlee'</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = [<span class=\"string\">'longlee'</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj3 = <span class=\"literal\">null</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.toString.call(obj1)    <span class=\"comment\">// \"[object Object]\"</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.toString.call(obj2)    <span class=\"comment\">// \"[object Array]\"</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.toString.call(obj3)    <span class=\"comment\">// \"[object Null]\"</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.toString.call(<span class=\"number\">12</span>)      <span class=\"comment\">// \"[object Number]\"</span></span><br><span class=\"line\">....</span><br><span class=\"line\">....</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h3 id=\"类（伪）数组使用数组方法\"><a href=\"#类（伪）数组使用数组方法\" class=\"headerlink\" title=\"类（伪）数组使用数组方法\"></a>类（伪）数组使用数组方法</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arg = <span class=\"built_in\">Array</span>.prototype.slice.call(<span class=\"built_in\">arguments</span>);</span><br><span class=\"line\"><span class=\"built_in\">arguments</span>是函数接收的实际参数个数，他是一个伪数组，不具有数组的一般方法。比如 push、pop...,</span><br><span class=\"line\"></span><br><span class=\"line\">但是我们能通过 <span class=\"built_in\">Array</span>.prototype.slice.call 转换为真正的数组</span><br><span class=\"line\">这样 <span class=\"built_in\">arguments</span> 就可以应用 <span class=\"built_in\">Array</span> 下的所有方法了。</span><br></pre></td></tr></table></figure>\n<h3 id=\"获取数组中的最大值和最小值\"><a href=\"#获取数组中的最大值和最小值\" class=\"headerlink\" title=\"获取数组中的最大值和最小值\"></a>获取数组中的最大值和最小值</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">maxInNumbers = <span class=\"built_in\">Math</span>.max.call(<span class=\"built_in\">Math</span>, <span class=\"number\">55</span>, <span class=\"number\">888</span> , <span class=\"number\">521</span> , <span class=\"number\">-36</span>); <span class=\"comment\">// 888</span></span><br><span class=\"line\">number 本身没有 max 方法，但是 <span class=\"built_in\">Math</span> 有，我们就可以借助 call 使用其方法。</span><br></pre></td></tr></table></figure>\n<p>就说到这了，再说下去，我自己也快消化不良了、、、、</p>\n<hr>\n<p>题外话：<br>说到数组的最大值、最小值。我控制不住自己了，一个ES6的简洁方法<br><code>Math.max(...[2,1,3])</code>  // 3<br><code>Math.min(...[2,1,3])</code>  // 1</p>\n<p>个人见解，有误之处，大神请指出，以免改正！<br>弄懂 call 了。可以继续打 call 了</p>\n"},{"title":"node学习（一）","date":"2018-04-12T10:27:46.000Z","_content":"tips: Api写法：Error-first Callback 和 EventEmitter\n<!-- more -->\n\n##### a) 在node的回调中错误优先 \n应该先定义错误的返回接收函数\n- 回调函数的第一个参数返回的error对象，如果error发生了，它会作为第一个err参数返回，如果没有，一般做法是返回null。\n- 回调函数的第二个参数返回的是任何成功响应的结果数据。如果结果正常，没有error发生，err会被设置为null，并在第二个参数就出返回成功结果数据。\n\n```js\nfunction(err, res) {\n  // process the error and result\n}\n```\n语义上讲，非空的“err”相当于程序异常；而空的“err”相当于可以正常返回结果“res”，无任何异常。\n\n##### b) EventEmitter\n\n事件模块是 Node.js 内置的对观察者模式“发布/订阅”（publish/subscribe）的实现，通过EventEmitter属性，提供了一个构造函数。该构造函数的实例具有 on 方法，可以用来监听指定事件，并触发回调函数。任意对象都可以发布指定事件，被 EventEmitter 实例的 on 方法监听到。\n\n```js\n\nvar EventEmitter = require('events').EventEmitter\nvar life = new EventEmitter()\n// 设置可以添加的事件数量\nlife.setMaxListeners(2)\n// 添加事件\nvar water = function(who) {\n\tconsole.log('给' + who + '倒杯水！')\n}\nlife.on('求安慰', water)\n\nlife.on('求安慰', function(who) {\n\tconsole.log('给' + who + '做饭！')\n})\n// ... 总共可以添加10个事件 【默认】\n// 超出会有报出异常\n\n// 触发事件\nlife.emit('求安慰', '汉子')\n// 事件移除\n// 将回调函数具名化 移除某一个事件\nlife.removeListener('求安慰', water)\n// 全部移除\nlife.removeAllListeners()\n// 移除某一个事件\nlife.removeListener('求安慰')\n\n// 检测事件是否监听\nvar hasLifeListener = life.emit('求安慰', '')\nconsole.log('求安慰事件是否监听:' + hasLifeListener)\n\n// 检测事件监听的个数\nconsole.log('life 上添加的事件数量是:' + life.listeners('求安慰').length)\nconsole.log(EventEmitter.listenerCount(life, '求安慰'))\n\n```\n##### c) buffer\n\nBuffer： 是一个对象， 是一个构造函数； 实例：V8引擎分配的一段内存；基本是一个数组，整数值；\n```js\nnew Buffer(123)\n//  <Buffer 31 32 33>\n默认编码格式 utf-8\n\n指定编码：\nnew Buffer('123', 'base64')\n// <Buffer d7 6d>\n\n长度：\nvar buf = new Buffer(8)   \nbuf.length   // 8\n\n限制长度，写入会被截取\nvar buf = new Buffer(6)\nbuf.write('12345678')\nbuf // <Buffer 31 32 32 33 34 35>   6位 超出不会被缓冲\n\n实例化数组，可以用下表读取到；\nvar buf = new Buffer([1,2.22,3])\n\nbuf[0]   // 1\nbuf[1]   // 2  [自动取证]\n```\n\nbuffer转化\n\n```js\n> var buf = new Buffer('12345')\n> var str = buf.toString('base64')\n//> str  'MTIzNDU='\n\n> var buf2 = new Buffer(str, 'base64')\n> var str2 = buf2.toString()\n// > str2  12345\n```","source":"_posts/js/node/nodestudy-01.md","raw":"---\ntitle: node学习（一）\ntags: ['node']\ncategories: ['JavaScript']\ndate: 2018-04-12 18:27:46\n---\ntips: Api写法：Error-first Callback 和 EventEmitter\n<!-- more -->\n\n##### a) 在node的回调中错误优先 \n应该先定义错误的返回接收函数\n- 回调函数的第一个参数返回的error对象，如果error发生了，它会作为第一个err参数返回，如果没有，一般做法是返回null。\n- 回调函数的第二个参数返回的是任何成功响应的结果数据。如果结果正常，没有error发生，err会被设置为null，并在第二个参数就出返回成功结果数据。\n\n```js\nfunction(err, res) {\n  // process the error and result\n}\n```\n语义上讲，非空的“err”相当于程序异常；而空的“err”相当于可以正常返回结果“res”，无任何异常。\n\n##### b) EventEmitter\n\n事件模块是 Node.js 内置的对观察者模式“发布/订阅”（publish/subscribe）的实现，通过EventEmitter属性，提供了一个构造函数。该构造函数的实例具有 on 方法，可以用来监听指定事件，并触发回调函数。任意对象都可以发布指定事件，被 EventEmitter 实例的 on 方法监听到。\n\n```js\n\nvar EventEmitter = require('events').EventEmitter\nvar life = new EventEmitter()\n// 设置可以添加的事件数量\nlife.setMaxListeners(2)\n// 添加事件\nvar water = function(who) {\n\tconsole.log('给' + who + '倒杯水！')\n}\nlife.on('求安慰', water)\n\nlife.on('求安慰', function(who) {\n\tconsole.log('给' + who + '做饭！')\n})\n// ... 总共可以添加10个事件 【默认】\n// 超出会有报出异常\n\n// 触发事件\nlife.emit('求安慰', '汉子')\n// 事件移除\n// 将回调函数具名化 移除某一个事件\nlife.removeListener('求安慰', water)\n// 全部移除\nlife.removeAllListeners()\n// 移除某一个事件\nlife.removeListener('求安慰')\n\n// 检测事件是否监听\nvar hasLifeListener = life.emit('求安慰', '')\nconsole.log('求安慰事件是否监听:' + hasLifeListener)\n\n// 检测事件监听的个数\nconsole.log('life 上添加的事件数量是:' + life.listeners('求安慰').length)\nconsole.log(EventEmitter.listenerCount(life, '求安慰'))\n\n```\n##### c) buffer\n\nBuffer： 是一个对象， 是一个构造函数； 实例：V8引擎分配的一段内存；基本是一个数组，整数值；\n```js\nnew Buffer(123)\n//  <Buffer 31 32 33>\n默认编码格式 utf-8\n\n指定编码：\nnew Buffer('123', 'base64')\n// <Buffer d7 6d>\n\n长度：\nvar buf = new Buffer(8)   \nbuf.length   // 8\n\n限制长度，写入会被截取\nvar buf = new Buffer(6)\nbuf.write('12345678')\nbuf // <Buffer 31 32 32 33 34 35>   6位 超出不会被缓冲\n\n实例化数组，可以用下表读取到；\nvar buf = new Buffer([1,2.22,3])\n\nbuf[0]   // 1\nbuf[1]   // 2  [自动取证]\n```\n\nbuffer转化\n\n```js\n> var buf = new Buffer('12345')\n> var str = buf.toString('base64')\n//> str  'MTIzNDU='\n\n> var buf2 = new Buffer(str, 'base64')\n> var str2 = buf2.toString()\n// > str2  12345\n```","slug":"js/node/nodestudy-01","published":1,"updated":"2018-04-12T11:09:54.514Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhuehzbv001y7soojnyg4qx5","content":"<p>tips: Api写法：Error-first Callback 和 EventEmitter<br><a id=\"more\"></a></p>\n<h5 id=\"a-在node的回调中错误优先\"><a href=\"#a-在node的回调中错误优先\" class=\"headerlink\" title=\"a) 在node的回调中错误优先\"></a>a) 在node的回调中错误优先</h5><p>应该先定义错误的返回接收函数</p>\n<ul>\n<li>回调函数的第一个参数返回的error对象，如果error发生了，它会作为第一个err参数返回，如果没有，一般做法是返回null。</li>\n<li>回调函数的第二个参数返回的是任何成功响应的结果数据。如果结果正常，没有error发生，err会被设置为null，并在第二个参数就出返回成功结果数据。</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, res</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// process the error and result</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>语义上讲，非空的“err”相当于程序异常；而空的“err”相当于可以正常返回结果“res”，无任何异常。</p>\n<h5 id=\"b-EventEmitter\"><a href=\"#b-EventEmitter\" class=\"headerlink\" title=\"b) EventEmitter\"></a>b) EventEmitter</h5><p>事件模块是 Node.js 内置的对观察者模式“发布/订阅”（publish/subscribe）的实现，通过EventEmitter属性，提供了一个构造函数。该构造函数的实例具有 on 方法，可以用来监听指定事件，并触发回调函数。任意对象都可以发布指定事件，被 EventEmitter 实例的 on 方法监听到。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> EventEmitter = <span class=\"built_in\">require</span>(<span class=\"string\">'events'</span>).EventEmitter</span><br><span class=\"line\"><span class=\"keyword\">var</span> life = <span class=\"keyword\">new</span> EventEmitter()</span><br><span class=\"line\"><span class=\"comment\">// 设置可以添加的事件数量</span></span><br><span class=\"line\">life.setMaxListeners(<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"comment\">// 添加事件</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> water = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">who</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'给'</span> + who + <span class=\"string\">'倒杯水！'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">life.on(<span class=\"string\">'求安慰'</span>, water)</span><br><span class=\"line\"></span><br><span class=\"line\">life.on(<span class=\"string\">'求安慰'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">who</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'给'</span> + who + <span class=\"string\">'做饭！'</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// ... 总共可以添加10个事件 【默认】</span></span><br><span class=\"line\"><span class=\"comment\">// 超出会有报出异常</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 触发事件</span></span><br><span class=\"line\">life.emit(<span class=\"string\">'求安慰'</span>, <span class=\"string\">'汉子'</span>)</span><br><span class=\"line\"><span class=\"comment\">// 事件移除</span></span><br><span class=\"line\"><span class=\"comment\">// 将回调函数具名化 移除某一个事件</span></span><br><span class=\"line\">life.removeListener(<span class=\"string\">'求安慰'</span>, water)</span><br><span class=\"line\"><span class=\"comment\">// 全部移除</span></span><br><span class=\"line\">life.removeAllListeners()</span><br><span class=\"line\"><span class=\"comment\">// 移除某一个事件</span></span><br><span class=\"line\">life.removeListener(<span class=\"string\">'求安慰'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 检测事件是否监听</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> hasLifeListener = life.emit(<span class=\"string\">'求安慰'</span>, <span class=\"string\">''</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'求安慰事件是否监听:'</span> + hasLifeListener)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 检测事件监听的个数</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'life 上添加的事件数量是:'</span> + life.listeners(<span class=\"string\">'求安慰'</span>).length)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(EventEmitter.listenerCount(life, <span class=\"string\">'求安慰'</span>))</span><br></pre></td></tr></table></figure>\n<h5 id=\"c-buffer\"><a href=\"#c-buffer\" class=\"headerlink\" title=\"c) buffer\"></a>c) buffer</h5><p>Buffer： 是一个对象， 是一个构造函数； 实例：V8引擎分配的一段内存；基本是一个数组，整数值；<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> Buffer(<span class=\"number\">123</span>)</span><br><span class=\"line\"><span class=\"comment\">//  &lt;Buffer 31 32 33&gt;</span></span><br><span class=\"line\">默认编码格式 utf<span class=\"number\">-8</span></span><br><span class=\"line\"></span><br><span class=\"line\">指定编码：</span><br><span class=\"line\"><span class=\"keyword\">new</span> Buffer(<span class=\"string\">'123'</span>, <span class=\"string\">'base64'</span>)</span><br><span class=\"line\"><span class=\"comment\">// &lt;Buffer d7 6d&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">长度：</span><br><span class=\"line\"><span class=\"keyword\">var</span> buf = <span class=\"keyword\">new</span> Buffer(<span class=\"number\">8</span>)   </span><br><span class=\"line\">buf.length   <span class=\"comment\">// 8</span></span><br><span class=\"line\"></span><br><span class=\"line\">限制长度，写入会被截取</span><br><span class=\"line\"><span class=\"keyword\">var</span> buf = <span class=\"keyword\">new</span> Buffer(<span class=\"number\">6</span>)</span><br><span class=\"line\">buf.write(<span class=\"string\">'12345678'</span>)</span><br><span class=\"line\">buf <span class=\"comment\">// &lt;Buffer 31 32 32 33 34 35&gt;   6位 超出不会被缓冲</span></span><br><span class=\"line\"></span><br><span class=\"line\">实例化数组，可以用下表读取到；</span><br><span class=\"line\"><span class=\"keyword\">var</span> buf = <span class=\"keyword\">new</span> Buffer([<span class=\"number\">1</span>,<span class=\"number\">2.22</span>,<span class=\"number\">3</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">buf[<span class=\"number\">0</span>]   <span class=\"comment\">// 1</span></span><br><span class=\"line\">buf[<span class=\"number\">1</span>]   <span class=\"comment\">// 2  [自动取证]</span></span><br></pre></td></tr></table></figure></p>\n<p>buffer转化</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; <span class=\"keyword\">var</span> buf = <span class=\"keyword\">new</span> Buffer(<span class=\"string\">'12345'</span>)</span><br><span class=\"line\">&gt; <span class=\"keyword\">var</span> str = buf.toString(<span class=\"string\">'base64'</span>)</span><br><span class=\"line\"><span class=\"comment\">//&gt; str  'MTIzNDU='</span></span><br><span class=\"line\"></span><br><span class=\"line\">&gt; <span class=\"keyword\">var</span> buf2 = <span class=\"keyword\">new</span> Buffer(str, <span class=\"string\">'base64'</span>)</span><br><span class=\"line\">&gt; <span class=\"keyword\">var</span> str2 = buf2.toString()</span><br><span class=\"line\"><span class=\"comment\">// &gt; str2  12345</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>tips: Api写法：Error-first Callback 和 EventEmitter<br>","more":"</p>\n<h5 id=\"a-在node的回调中错误优先\"><a href=\"#a-在node的回调中错误优先\" class=\"headerlink\" title=\"a) 在node的回调中错误优先\"></a>a) 在node的回调中错误优先</h5><p>应该先定义错误的返回接收函数</p>\n<ul>\n<li>回调函数的第一个参数返回的error对象，如果error发生了，它会作为第一个err参数返回，如果没有，一般做法是返回null。</li>\n<li>回调函数的第二个参数返回的是任何成功响应的结果数据。如果结果正常，没有error发生，err会被设置为null，并在第二个参数就出返回成功结果数据。</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, res</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// process the error and result</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>语义上讲，非空的“err”相当于程序异常；而空的“err”相当于可以正常返回结果“res”，无任何异常。</p>\n<h5 id=\"b-EventEmitter\"><a href=\"#b-EventEmitter\" class=\"headerlink\" title=\"b) EventEmitter\"></a>b) EventEmitter</h5><p>事件模块是 Node.js 内置的对观察者模式“发布/订阅”（publish/subscribe）的实现，通过EventEmitter属性，提供了一个构造函数。该构造函数的实例具有 on 方法，可以用来监听指定事件，并触发回调函数。任意对象都可以发布指定事件，被 EventEmitter 实例的 on 方法监听到。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> EventEmitter = <span class=\"built_in\">require</span>(<span class=\"string\">'events'</span>).EventEmitter</span><br><span class=\"line\"><span class=\"keyword\">var</span> life = <span class=\"keyword\">new</span> EventEmitter()</span><br><span class=\"line\"><span class=\"comment\">// 设置可以添加的事件数量</span></span><br><span class=\"line\">life.setMaxListeners(<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"comment\">// 添加事件</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> water = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">who</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'给'</span> + who + <span class=\"string\">'倒杯水！'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">life.on(<span class=\"string\">'求安慰'</span>, water)</span><br><span class=\"line\"></span><br><span class=\"line\">life.on(<span class=\"string\">'求安慰'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">who</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'给'</span> + who + <span class=\"string\">'做饭！'</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// ... 总共可以添加10个事件 【默认】</span></span><br><span class=\"line\"><span class=\"comment\">// 超出会有报出异常</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 触发事件</span></span><br><span class=\"line\">life.emit(<span class=\"string\">'求安慰'</span>, <span class=\"string\">'汉子'</span>)</span><br><span class=\"line\"><span class=\"comment\">// 事件移除</span></span><br><span class=\"line\"><span class=\"comment\">// 将回调函数具名化 移除某一个事件</span></span><br><span class=\"line\">life.removeListener(<span class=\"string\">'求安慰'</span>, water)</span><br><span class=\"line\"><span class=\"comment\">// 全部移除</span></span><br><span class=\"line\">life.removeAllListeners()</span><br><span class=\"line\"><span class=\"comment\">// 移除某一个事件</span></span><br><span class=\"line\">life.removeListener(<span class=\"string\">'求安慰'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 检测事件是否监听</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> hasLifeListener = life.emit(<span class=\"string\">'求安慰'</span>, <span class=\"string\">''</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'求安慰事件是否监听:'</span> + hasLifeListener)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 检测事件监听的个数</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'life 上添加的事件数量是:'</span> + life.listeners(<span class=\"string\">'求安慰'</span>).length)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(EventEmitter.listenerCount(life, <span class=\"string\">'求安慰'</span>))</span><br></pre></td></tr></table></figure>\n<h5 id=\"c-buffer\"><a href=\"#c-buffer\" class=\"headerlink\" title=\"c) buffer\"></a>c) buffer</h5><p>Buffer： 是一个对象， 是一个构造函数； 实例：V8引擎分配的一段内存；基本是一个数组，整数值；<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> Buffer(<span class=\"number\">123</span>)</span><br><span class=\"line\"><span class=\"comment\">//  &lt;Buffer 31 32 33&gt;</span></span><br><span class=\"line\">默认编码格式 utf<span class=\"number\">-8</span></span><br><span class=\"line\"></span><br><span class=\"line\">指定编码：</span><br><span class=\"line\"><span class=\"keyword\">new</span> Buffer(<span class=\"string\">'123'</span>, <span class=\"string\">'base64'</span>)</span><br><span class=\"line\"><span class=\"comment\">// &lt;Buffer d7 6d&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">长度：</span><br><span class=\"line\"><span class=\"keyword\">var</span> buf = <span class=\"keyword\">new</span> Buffer(<span class=\"number\">8</span>)   </span><br><span class=\"line\">buf.length   <span class=\"comment\">// 8</span></span><br><span class=\"line\"></span><br><span class=\"line\">限制长度，写入会被截取</span><br><span class=\"line\"><span class=\"keyword\">var</span> buf = <span class=\"keyword\">new</span> Buffer(<span class=\"number\">6</span>)</span><br><span class=\"line\">buf.write(<span class=\"string\">'12345678'</span>)</span><br><span class=\"line\">buf <span class=\"comment\">// &lt;Buffer 31 32 32 33 34 35&gt;   6位 超出不会被缓冲</span></span><br><span class=\"line\"></span><br><span class=\"line\">实例化数组，可以用下表读取到；</span><br><span class=\"line\"><span class=\"keyword\">var</span> buf = <span class=\"keyword\">new</span> Buffer([<span class=\"number\">1</span>,<span class=\"number\">2.22</span>,<span class=\"number\">3</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">buf[<span class=\"number\">0</span>]   <span class=\"comment\">// 1</span></span><br><span class=\"line\">buf[<span class=\"number\">1</span>]   <span class=\"comment\">// 2  [自动取证]</span></span><br></pre></td></tr></table></figure></p>\n<p>buffer转化</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; <span class=\"keyword\">var</span> buf = <span class=\"keyword\">new</span> Buffer(<span class=\"string\">'12345'</span>)</span><br><span class=\"line\">&gt; <span class=\"keyword\">var</span> str = buf.toString(<span class=\"string\">'base64'</span>)</span><br><span class=\"line\"><span class=\"comment\">//&gt; str  'MTIzNDU='</span></span><br><span class=\"line\"></span><br><span class=\"line\">&gt; <span class=\"keyword\">var</span> buf2 = <span class=\"keyword\">new</span> Buffer(str, <span class=\"string\">'base64'</span>)</span><br><span class=\"line\">&gt; <span class=\"keyword\">var</span> str2 = buf2.toString()</span><br><span class=\"line\"><span class=\"comment\">// &gt; str2  12345</span></span><br></pre></td></tr></table></figure>"},{"title":"理解react中的constructor与super","date":"2018-04-11T09:45:27.000Z","_content":"\n> react中的constructor与super\n\n<!-- more -->\n\n#### constructor( )-----super( )的基本含义\n\nconstructor( )——构造方法\n\n　　这是ES6对类的默认方法，通过 new 命令生成对象实例时自动调用该方法。并且，该方法是类中必须有的，如果没有显示定义，则会默认添加空的constructor( )方法。\n\nsuper( ) ——继承\n\n　　在class方法中，继承是使用 extends 关键字来实现的。子类 必须 在 constructor( )调用 super( )方法，否则新建实例时会报错。\n\n　　报错的原因是：子类是没有自己的 this 对象的，它只能继承自父类的 this 对象，然后对其进行加工，而super( )就是将父类中的this对象继承给子类的。没有 super，子类就得不到 this 对象。\n\n#### Es5-----Es6关于继承的实现不同之处\n\n出现上面情况的原因是，ES5的继承机制与ES6完全不同。\n\n复习一个重要知识点——ES5中new到底做了些啥？\n\n\n　`当一个构造函数前加上new的时候，背地里来做了四件事：`\n\n　　　　`1.生成一个空的对象并将其作为 this；`\n\n　　　　`2.将空对象的 __proto__ 指向构造函数的 prototype；`\n\n　　　　`3.运行该构造函数；`\n\n　　　　`4.如果构造函数没有 return 或者 return 一个返回 this 值是基本类型，则返回this；如果 return 一个引用类型，则返回这个引用类型。`\n\n简单解释，就是在ES5的继承中，先创建子类的实例对象this，然后再将父类的方法添加到this上（ Parent.apply(this) ）。而ES6采用的是先创建父类的实例this（故要先调用 super( )方法），完后再用子类的构造函数修改this。\n\n\n\n#### super(props)------super()-----以及不写super的区别\n\n　　如果你用到了constructor就必须写super(),是用来初始化this的，可以绑定事件到this上;\n\n　　如果你在constructor中要使用this.props,就必须给super加参数：super(props)；\n\n　　（无论有没有constructor，在render中this.props都是可以使用的，这是React自动附带的；）\n\n　　如果没用到constructor,是可以不写的；React会默认添加一个空的constructor。\n\n","source":"_posts/js/react/react-constructor-super.md","raw":"---\ntitle: 理解react中的constructor与super\ntags: ['react']\ncategories: ['JavaScript']\ndate: 2018-04-11 17:45:27\n---\n\n> react中的constructor与super\n\n<!-- more -->\n\n#### constructor( )-----super( )的基本含义\n\nconstructor( )——构造方法\n\n　　这是ES6对类的默认方法，通过 new 命令生成对象实例时自动调用该方法。并且，该方法是类中必须有的，如果没有显示定义，则会默认添加空的constructor( )方法。\n\nsuper( ) ——继承\n\n　　在class方法中，继承是使用 extends 关键字来实现的。子类 必须 在 constructor( )调用 super( )方法，否则新建实例时会报错。\n\n　　报错的原因是：子类是没有自己的 this 对象的，它只能继承自父类的 this 对象，然后对其进行加工，而super( )就是将父类中的this对象继承给子类的。没有 super，子类就得不到 this 对象。\n\n#### Es5-----Es6关于继承的实现不同之处\n\n出现上面情况的原因是，ES5的继承机制与ES6完全不同。\n\n复习一个重要知识点——ES5中new到底做了些啥？\n\n\n　`当一个构造函数前加上new的时候，背地里来做了四件事：`\n\n　　　　`1.生成一个空的对象并将其作为 this；`\n\n　　　　`2.将空对象的 __proto__ 指向构造函数的 prototype；`\n\n　　　　`3.运行该构造函数；`\n\n　　　　`4.如果构造函数没有 return 或者 return 一个返回 this 值是基本类型，则返回this；如果 return 一个引用类型，则返回这个引用类型。`\n\n简单解释，就是在ES5的继承中，先创建子类的实例对象this，然后再将父类的方法添加到this上（ Parent.apply(this) ）。而ES6采用的是先创建父类的实例this（故要先调用 super( )方法），完后再用子类的构造函数修改this。\n\n\n\n#### super(props)------super()-----以及不写super的区别\n\n　　如果你用到了constructor就必须写super(),是用来初始化this的，可以绑定事件到this上;\n\n　　如果你在constructor中要使用this.props,就必须给super加参数：super(props)；\n\n　　（无论有没有constructor，在render中this.props都是可以使用的，这是React自动附带的；）\n\n　　如果没用到constructor,是可以不写的；React会默认添加一个空的constructor。\n\n","slug":"js/react/react-constructor-super","published":1,"updated":"2018-04-11T10:27:18.941Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhuehzbx001z7soobcyffyiq","content":"<blockquote>\n<p>react中的constructor与super</p>\n</blockquote>\n<a id=\"more\"></a>\n<h4 id=\"constructor-—–super-的基本含义\"><a href=\"#constructor-—–super-的基本含义\" class=\"headerlink\" title=\"constructor( )—–super( )的基本含义\"></a>constructor( )—–super( )的基本含义</h4><p>constructor( )——构造方法</p>\n<p>　　这是ES6对类的默认方法，通过 new 命令生成对象实例时自动调用该方法。并且，该方法是类中必须有的，如果没有显示定义，则会默认添加空的constructor( )方法。</p>\n<p>super( ) ——继承</p>\n<p>　　在class方法中，继承是使用 extends 关键字来实现的。子类 必须 在 constructor( )调用 super( )方法，否则新建实例时会报错。</p>\n<p>　　报错的原因是：子类是没有自己的 this 对象的，它只能继承自父类的 this 对象，然后对其进行加工，而super( )就是将父类中的this对象继承给子类的。没有 super，子类就得不到 this 对象。</p>\n<h4 id=\"Es5—–Es6关于继承的实现不同之处\"><a href=\"#Es5—–Es6关于继承的实现不同之处\" class=\"headerlink\" title=\"Es5—–Es6关于继承的实现不同之处\"></a>Es5—–Es6关于继承的实现不同之处</h4><p>出现上面情况的原因是，ES5的继承机制与ES6完全不同。</p>\n<p>复习一个重要知识点——ES5中new到底做了些啥？</p>\n<p>　<code>当一个构造函数前加上new的时候，背地里来做了四件事：</code></p>\n<p>　　　　<code>1.生成一个空的对象并将其作为 this；</code></p>\n<p>　　　　<code>2.将空对象的 __proto__ 指向构造函数的 prototype；</code></p>\n<p>　　　　<code>3.运行该构造函数；</code></p>\n<p>　　　　<code>4.如果构造函数没有 return 或者 return 一个返回 this 值是基本类型，则返回this；如果 return 一个引用类型，则返回这个引用类型。</code></p>\n<p>简单解释，就是在ES5的继承中，先创建子类的实例对象this，然后再将父类的方法添加到this上（ Parent.apply(this) ）。而ES6采用的是先创建父类的实例this（故要先调用 super( )方法），完后再用子类的构造函数修改this。</p>\n<h4 id=\"super-props-——super-—–以及不写super的区别\"><a href=\"#super-props-——super-—–以及不写super的区别\" class=\"headerlink\" title=\"super(props)——super()—–以及不写super的区别\"></a>super(props)——super()—–以及不写super的区别</h4><p>　　如果你用到了constructor就必须写super(),是用来初始化this的，可以绑定事件到this上;</p>\n<p>　　如果你在constructor中要使用this.props,就必须给super加参数：super(props)；</p>\n<p>　　（无论有没有constructor，在render中this.props都是可以使用的，这是React自动附带的；）</p>\n<p>　　如果没用到constructor,是可以不写的；React会默认添加一个空的constructor。</p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>react中的constructor与super</p>\n</blockquote>","more":"<h4 id=\"constructor-—–super-的基本含义\"><a href=\"#constructor-—–super-的基本含义\" class=\"headerlink\" title=\"constructor( )—–super( )的基本含义\"></a>constructor( )—–super( )的基本含义</h4><p>constructor( )——构造方法</p>\n<p>　　这是ES6对类的默认方法，通过 new 命令生成对象实例时自动调用该方法。并且，该方法是类中必须有的，如果没有显示定义，则会默认添加空的constructor( )方法。</p>\n<p>super( ) ——继承</p>\n<p>　　在class方法中，继承是使用 extends 关键字来实现的。子类 必须 在 constructor( )调用 super( )方法，否则新建实例时会报错。</p>\n<p>　　报错的原因是：子类是没有自己的 this 对象的，它只能继承自父类的 this 对象，然后对其进行加工，而super( )就是将父类中的this对象继承给子类的。没有 super，子类就得不到 this 对象。</p>\n<h4 id=\"Es5—–Es6关于继承的实现不同之处\"><a href=\"#Es5—–Es6关于继承的实现不同之处\" class=\"headerlink\" title=\"Es5—–Es6关于继承的实现不同之处\"></a>Es5—–Es6关于继承的实现不同之处</h4><p>出现上面情况的原因是，ES5的继承机制与ES6完全不同。</p>\n<p>复习一个重要知识点——ES5中new到底做了些啥？</p>\n<p>　<code>当一个构造函数前加上new的时候，背地里来做了四件事：</code></p>\n<p>　　　　<code>1.生成一个空的对象并将其作为 this；</code></p>\n<p>　　　　<code>2.将空对象的 __proto__ 指向构造函数的 prototype；</code></p>\n<p>　　　　<code>3.运行该构造函数；</code></p>\n<p>　　　　<code>4.如果构造函数没有 return 或者 return 一个返回 this 值是基本类型，则返回this；如果 return 一个引用类型，则返回这个引用类型。</code></p>\n<p>简单解释，就是在ES5的继承中，先创建子类的实例对象this，然后再将父类的方法添加到this上（ Parent.apply(this) ）。而ES6采用的是先创建父类的实例this（故要先调用 super( )方法），完后再用子类的构造函数修改this。</p>\n<h4 id=\"super-props-——super-—–以及不写super的区别\"><a href=\"#super-props-——super-—–以及不写super的区别\" class=\"headerlink\" title=\"super(props)——super()—–以及不写super的区别\"></a>super(props)——super()—–以及不写super的区别</h4><p>　　如果你用到了constructor就必须写super(),是用来初始化this的，可以绑定事件到this上;</p>\n<p>　　如果你在constructor中要使用this.props,就必须给super加参数：super(props)；</p>\n<p>　　（无论有没有constructor，在render中this.props都是可以使用的，这是React自动附带的；）</p>\n<p>　　如果没用到constructor,是可以不写的；React会默认添加一个空的constructor。</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjhuehz9700057soot10nimzm","category_id":"cjhuehz9a00077sooa4h3idbq","_id":"cjhuehz9j000e7sookixnfmko"},{"post_id":"cjhuehz9d00097sookrwg67s0","category_id":"cjhuehz9i000c7sooadum7m89","_id":"cjhuehz9l000j7soos0yo5yju"},{"post_id":"cjhuehz9f000a7soovzmo9dg3","category_id":"cjhuehz9j000f7sooc2pqcmkg","_id":"cjhuehz9m000m7sooyn6tub9d"},{"post_id":"cjhuehz9h000b7sooeb35vwvt","category_id":"cjhuehz9j000f7sooc2pqcmkg","_id":"cjhuehz9n000o7soovm4j1mth"},{"post_id":"cjhuehza9000y7soo3ptfts5e","category_id":"cjhuehz9i000c7sooadum7m89","_id":"cjhuehzae00137soonbburvyx"},{"post_id":"cjhuehzab000z7sootq17capd","category_id":"cjhuehz9j000f7sooc2pqcmkg","_id":"cjhuehzae00157sooz9kcxeb4"},{"post_id":"cjhuehzad00117soo3d4rql9a","category_id":"cjhuehz9j000f7sooc2pqcmkg","_id":"cjhuehzaf00177sooj11sp2ou"},{"post_id":"cjhuehzb300187soo1nogmedi","category_id":"cjhuehzb8001a7sooherjglvm","_id":"cjhuehzbi001k7soo3skuzc5l"},{"post_id":"cjhuehzb9001c7sooke4o9u7y","category_id":"cjhuehzb8001a7sooherjglvm","_id":"cjhuehzbj001n7sooq1m76cov"},{"post_id":"cjhuehzbb001d7soovv1ehd52","category_id":"cjhuehzbi001j7soobd4ci846","_id":"cjhuehzbl001s7sooxoi7qg9r"},{"post_id":"cjhuehzbd001e7soon82bppae","category_id":"cjhuehzbi001j7soobd4ci846","_id":"cjhuehzbm001v7soo17qr8fg0"},{"post_id":"cjhuehzbg001i7sooobrbkboe","category_id":"cjhuehzbi001j7soobd4ci846","_id":"cjhuehzbn001x7sooseswkpb3"},{"post_id":"cjhuehzbv001y7soojnyg4qx5","category_id":"cjhuehzbi001j7soobd4ci846","_id":"cjhuehzc000217soojfs5q61e"},{"post_id":"cjhuehzbx001z7soobcyffyiq","category_id":"cjhuehzbi001j7soobd4ci846","_id":"cjhuehzc000227sooi7be3ica"}],"PostTag":[{"post_id":"cjhuehz9700057soot10nimzm","tag_id":"cjhuehz9c00087soo1qybt4aj","_id":"cjhuehz9k000h7soo85o08upi"},{"post_id":"cjhuehz9700057soot10nimzm","tag_id":"cjhuehz9i000d7soobwti34kg","_id":"cjhuehz9l000i7soo80wxnvus"},{"post_id":"cjhuehz9800067soo7ca34ai6","tag_id":"cjhuehz9k000g7sooooawy1n1","_id":"cjhuehz9o000q7soockj04ie4"},{"post_id":"cjhuehz9800067soo7ca34ai6","tag_id":"cjhuehz9l000l7soolfbq1c8c","_id":"cjhuehz9p000r7soovxog2il4"},{"post_id":"cjhuehz9800067soo7ca34ai6","tag_id":"cjhuehz9n000n7soo8xbrru74","_id":"cjhuehz9p000t7soom1dg5g4a"},{"post_id":"cjhuehz9d00097sookrwg67s0","tag_id":"cjhuehz9n000p7soogoqioc0a","_id":"cjhuehz9q000u7soow0xne14z"},{"post_id":"cjhuehz9f000a7soovzmo9dg3","tag_id":"cjhuehz9p000s7soono0o75ao","_id":"cjhuehz9r000w7sooj7kzrdsx"},{"post_id":"cjhuehz9h000b7sooeb35vwvt","tag_id":"cjhuehz9q000v7soo4d5m46ap","_id":"cjhuehz9r000x7sootw3g8krm"},{"post_id":"cjhuehzab000z7sootq17capd","tag_id":"cjhuehz9p000s7soono0o75ao","_id":"cjhuehzae00127soozryrj6du"},{"post_id":"cjhuehzad00117soo3d4rql9a","tag_id":"cjhuehz9p000s7soono0o75ao","_id":"cjhuehzae00147soostmq3sto"},{"post_id":"cjhuehza9000y7soo3ptfts5e","tag_id":"cjhuehzac00107soog9k56ed9","_id":"cjhuehzaf00167sooxfejmy7v"},{"post_id":"cjhuehzb300187soo1nogmedi","tag_id":"cjhuehzb8001b7soo7xklgqxf","_id":"cjhuehzbg001h7soozkezwh5y"},{"post_id":"cjhuehzb9001c7sooke4o9u7y","tag_id":"cjhuehzbf001g7sooik95jwfv","_id":"cjhuehzbj001m7soo1ocbuk4q"},{"post_id":"cjhuehzbb001d7soovv1ehd52","tag_id":"cjhuehzbi001l7soon09qb9de","_id":"cjhuehzbk001q7soog99cezbh"},{"post_id":"cjhuehzbd001e7soon82bppae","tag_id":"cjhuehzbk001p7soo4mcll87v","_id":"cjhuehzbm001u7sooem66fi54"},{"post_id":"cjhuehzbg001i7sooobrbkboe","tag_id":"cjhuehzbl001t7soo2foherp7","_id":"cjhuehzbn001w7sooufgqjh4b"},{"post_id":"cjhuehzbv001y7soojnyg4qx5","tag_id":"cjhuehzby00207sooiu0rl2ke","_id":"cjhuehzc100247soo59lsdas0"},{"post_id":"cjhuehzbx001z7soobcyffyiq","tag_id":"cjhuehzc100237soo8q8yrdqs","_id":"cjhuehzc200257soofo0w549y"}],"Tag":[{"name":"电视剧","_id":"cjhuehz9c00087soo1qybt4aj"},{"name":"经典台词","_id":"cjhuehz9i000d7soobwti34kg"},{"name":"tag1","_id":"cjhuehz9k000g7sooooawy1n1"},{"name":"tag2","_id":"cjhuehz9l000l7soolfbq1c8c"},{"name":"tag3","_id":"cjhuehz9n000n7soo8xbrru74"},{"name":"情感","_id":"cjhuehz9n000p7soogoqioc0a"},{"name":"学习计划","_id":"cjhuehz9p000s7soono0o75ao"},{"name":"SEO","_id":"cjhuehz9q000v7soo4d5m46ap"},{"name":"励志","_id":"cjhuehzac00107soog9k56ed9"},{"name":"iview组件","_id":"cjhuehzb8001b7soo7xklgqxf"},{"name":"vue知识点","_id":"cjhuehzbf001g7sooik95jwfv"},{"name":"算法","_id":"cjhuehzbi001l7soon09qb9de"},{"name":"数组","_id":"cjhuehzbk001p7soo4mcll87v"},{"name":"js知识点总结","_id":"cjhuehzbl001t7soo2foherp7"},{"name":"node","_id":"cjhuehzby00207sooiu0rl2ke"},{"name":"react","_id":"cjhuehzc100237soo8q8yrdqs"}]}}